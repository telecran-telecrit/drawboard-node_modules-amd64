{"ast":null,"code":"import { getGlobalObject, isPlainObject, logger } from '@sentry/utils';\n/** JSDoc */\n\nvar Vue =\n/** @class */\nfunction () {\n  /**\n   * @inheritDoc\n   */\n  function Vue(options) {\n    if (options === void 0) {\n      options = {};\n    }\n    /**\n     * @inheritDoc\n     */\n\n\n    this.name = Vue.id;\n    /**\n     * When set to false, Sentry will suppress reporting all props data\n     * from your Vue components for privacy concerns.\n     */\n\n    this._attachProps = true;\n    /**\n     * When set to true, original Vue's `logError` will be called as well.\n     * https://github.com/vuejs/vue/blob/c2b1cfe9ccd08835f2d99f6ce60f67b4de55187f/src/core/util/error.js#L38-L48\n     */\n\n    this._logErrors = false; // tslint:disable-next-line: no-unsafe-any\n\n    this._Vue = options.Vue || getGlobalObject().Vue;\n\n    if (options.logErrors !== undefined) {\n      this._logErrors = options.logErrors;\n    }\n\n    if (options.attachProps === false) {\n      this._attachProps = false;\n    }\n  }\n  /** JSDoc */\n\n\n  Vue.prototype._formatComponentName = function (vm) {\n    // tslint:disable:no-unsafe-any\n    if (vm.$root === vm) {\n      return 'root instance';\n    }\n\n    var name = vm._isVue ? vm.$options.name || vm.$options._componentTag : vm.name;\n    return (name ? \"component <\" + name + \">\" : 'anonymous component') + (vm._isVue && vm.$options.__file ? \" at \" + vm.$options.__file : '');\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  Vue.prototype.setupOnce = function (_, getCurrentHub) {\n    // tslint:disable:no-unsafe-any\n    var _this = this;\n\n    if (!this._Vue || !this._Vue.config) {\n      logger.error('VueIntegration is missing a Vue instance');\n      return;\n    }\n\n    var oldOnError = this._Vue.config.errorHandler;\n\n    this._Vue.config.errorHandler = function (error, vm, info) {\n      var metadata = {};\n\n      if (isPlainObject(vm)) {\n        metadata.componentName = _this._formatComponentName(vm);\n\n        if (_this._attachProps) {\n          metadata.propsData = vm.$options.propsData;\n        }\n      }\n\n      if (info !== void 0) {\n        metadata.lifecycleHook = info;\n      }\n\n      if (getCurrentHub().getIntegration(Vue)) {\n        // This timeout makes sure that any breadcrumbs are recorded before sending it off the sentry\n        setTimeout(function () {\n          getCurrentHub().withScope(function (scope) {\n            scope.setContext('vue', metadata);\n            getCurrentHub().captureException(error);\n          });\n        });\n      }\n\n      if (typeof oldOnError === 'function') {\n        oldOnError.call(_this._Vue, error, vm, info);\n      }\n\n      if (_this._logErrors) {\n        _this._Vue.util.warn(\"Error in \" + info + \": \\\"\" + error.toString() + \"\\\"\", vm); // tslint:disable-next-line:no-console\n\n\n        console.error(error);\n      }\n    };\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  Vue.id = 'Vue';\n  return Vue;\n}();\n\nexport { Vue };","map":{"version":3,"sources":["../src/vue.ts"],"names":[],"mappings":"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","sourcesContent":["import { EventProcessor, Hub, Integration } from '@sentry/types';\nimport { getGlobalObject, isPlainObject, logger } from '@sentry/utils';\n\n/** JSDoc */\ninterface Metadata {\n  [key: string]: any;\n  componentName?: string;\n  propsData?: {\n    [key: string]: any;\n  };\n  lifecycleHook?: string;\n}\n\n/** JSDoc */\nexport class Vue implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public name: string = Vue.id;\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'Vue';\n\n  /**\n   * @inheritDoc\n   */\n  private readonly _Vue: any; // tslint:disable-line:variable-name\n\n  /**\n   * When set to false, Sentry will suppress reporting all props data\n   * from your Vue components for privacy concerns.\n   */\n  private readonly _attachProps: boolean = true;\n\n  /**\n   * When set to true, original Vue's `logError` will be called as well.\n   * https://github.com/vuejs/vue/blob/c2b1cfe9ccd08835f2d99f6ce60f67b4de55187f/src/core/util/error.js#L38-L48\n   */\n  private readonly _logErrors: boolean = false;\n\n  /**\n   * @inheritDoc\n   */\n  public constructor(options: { Vue?: any; attachProps?: boolean; logErrors?: boolean } = {}) {\n    // tslint:disable-next-line: no-unsafe-any\n    this._Vue = options.Vue || getGlobalObject<any>().Vue;\n\n    if (options.logErrors !== undefined) {\n      this._logErrors = options.logErrors;\n    }\n    if (options.attachProps === false) {\n      this._attachProps = false;\n    }\n  }\n\n  /** JSDoc */\n  private _formatComponentName(vm: any): string {\n    // tslint:disable:no-unsafe-any\n\n    if (vm.$root === vm) {\n      return 'root instance';\n    }\n    const name = vm._isVue ? vm.$options.name || vm.$options._componentTag : vm.name;\n    return (\n      (name ? `component <${name}>` : 'anonymous component') +\n      (vm._isVue && vm.$options.__file ? ` at ${vm.$options.__file}` : '')\n    );\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(_: (callback: EventProcessor) => void, getCurrentHub: () => Hub): void {\n    // tslint:disable:no-unsafe-any\n\n    if (!this._Vue || !this._Vue.config) {\n      logger.error('VueIntegration is missing a Vue instance');\n      return;\n    }\n\n    const oldOnError = this._Vue.config.errorHandler;\n\n    this._Vue.config.errorHandler = (error: Error, vm: { [key: string]: any }, info: string): void => {\n      const metadata: Metadata = {};\n\n      if (isPlainObject(vm)) {\n        metadata.componentName = this._formatComponentName(vm);\n\n        if (this._attachProps) {\n          metadata.propsData = vm.$options.propsData;\n        }\n      }\n\n      if (info !== void 0) {\n        metadata.lifecycleHook = info;\n      }\n\n      if (getCurrentHub().getIntegration(Vue)) {\n        // This timeout makes sure that any breadcrumbs are recorded before sending it off the sentry\n        setTimeout(() => {\n          getCurrentHub().withScope(scope => {\n            scope.setContext('vue', metadata);\n            getCurrentHub().captureException(error);\n          });\n        });\n      }\n\n      if (typeof oldOnError === 'function') {\n        oldOnError.call(this._Vue, error, vm, info);\n      }\n\n      if (this._logErrors) {\n        this._Vue.util.warn(`Error in ${info}: \"${error.toString()}\"`, vm);\n        // tslint:disable-next-line:no-console\n        console.error(error);\n      }\n    };\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}