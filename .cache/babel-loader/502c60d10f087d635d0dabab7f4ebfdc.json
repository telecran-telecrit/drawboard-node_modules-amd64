{"ast":null,"code":"(function (root, factory) {\n  'use strict'; // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\n\n  /* istanbul ignore next */\n\n  if (typeof define === 'function' && define.amd) {\n    define('stack-generator', ['stackframe'], factory);\n  } else if (typeof exports === 'object') {\n    module.exports = factory(require('stackframe'));\n  } else {\n    root.StackGenerator = factory(root.StackFrame);\n  }\n})(this, function (StackFrame) {\n  return {\n    backtrace: function StackGenerator$$backtrace(opts) {\n      var stack = [];\n      var maxStackSize = 10;\n\n      if (typeof opts === 'object' && typeof opts.maxStackSize === 'number') {\n        maxStackSize = opts.maxStackSize;\n      }\n\n      var curr = arguments.callee;\n\n      while (curr && stack.length < maxStackSize && curr['arguments']) {\n        // Allow V8 optimizations\n        var args = new Array(curr['arguments'].length);\n\n        for (var i = 0; i < args.length; ++i) {\n          args[i] = curr['arguments'][i];\n        }\n\n        if (/function(?:\\s+([\\w$]+))+\\s*\\(/.test(curr.toString())) {\n          stack.push(new StackFrame({\n            functionName: RegExp.$1 || undefined,\n            args: args\n          }));\n        } else {\n          stack.push(new StackFrame({\n            args: args\n          }));\n        }\n\n        try {\n          curr = curr.caller;\n        } catch (e) {\n          break;\n        }\n      }\n\n      return stack;\n    }\n  };\n});","map":{"version":3,"sources":["/home/pro/Solutions/drawboard-light/node_modules/stack-generator/stack-generator.js"],"names":["root","factory","define","amd","exports","module","require","StackGenerator","StackFrame","backtrace","StackGenerator$$backtrace","opts","stack","maxStackSize","curr","arguments","callee","length","args","Array","i","test","toString","push","functionName","RegExp","$1","undefined","caller","e"],"mappings":"AAAC,WAASA,IAAT,EAAeC,OAAf,EAAwB;AACrB,eADqB,CAErB;;AAEA;;AACA,MAAI,OAAOC,MAAP,KAAkB,UAAlB,IAAgCA,MAAM,CAACC,GAA3C,EAAgD;AAC5CD,IAAAA,MAAM,CAAC,iBAAD,EAAoB,CAAC,YAAD,CAApB,EAAoCD,OAApC,CAAN;AACH,GAFD,MAEO,IAAI,OAAOG,OAAP,KAAmB,QAAvB,EAAiC;AACpCC,IAAAA,MAAM,CAACD,OAAP,GAAiBH,OAAO,CAACK,OAAO,CAAC,YAAD,CAAR,CAAxB;AACH,GAFM,MAEA;AACHN,IAAAA,IAAI,CAACO,cAAL,GAAsBN,OAAO,CAACD,IAAI,CAACQ,UAAN,CAA7B;AACH;AACJ,CAZA,EAYC,IAZD,EAYO,UAASA,UAAT,EAAqB;AACzB,SAAO;AACHC,IAAAA,SAAS,EAAE,SAASC,yBAAT,CAAmCC,IAAnC,EAAyC;AAChD,UAAIC,KAAK,GAAG,EAAZ;AACA,UAAIC,YAAY,GAAG,EAAnB;;AAEA,UAAI,OAAOF,IAAP,KAAgB,QAAhB,IAA4B,OAAOA,IAAI,CAACE,YAAZ,KAA6B,QAA7D,EAAuE;AACnEA,QAAAA,YAAY,GAAGF,IAAI,CAACE,YAApB;AACH;;AAED,UAAIC,IAAI,GAAGC,SAAS,CAACC,MAArB;;AACA,aAAOF,IAAI,IAAIF,KAAK,CAACK,MAAN,GAAeJ,YAAvB,IAAuCC,IAAI,CAAC,WAAD,CAAlD,EAAiE;AAC7D;AACA,YAAII,IAAI,GAAG,IAAIC,KAAJ,CAAUL,IAAI,CAAC,WAAD,CAAJ,CAAkBG,MAA5B,CAAX;;AACA,aAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,IAAI,CAACD,MAAzB,EAAiC,EAAEG,CAAnC,EAAsC;AAClCF,UAAAA,IAAI,CAACE,CAAD,CAAJ,GAAUN,IAAI,CAAC,WAAD,CAAJ,CAAkBM,CAAlB,CAAV;AACH;;AACD,YAAI,gCAAgCC,IAAhC,CAAqCP,IAAI,CAACQ,QAAL,EAArC,CAAJ,EAA2D;AACvDV,UAAAA,KAAK,CAACW,IAAN,CAAW,IAAIf,UAAJ,CAAe;AAACgB,YAAAA,YAAY,EAAEC,MAAM,CAACC,EAAP,IAAaC,SAA5B;AAAuCT,YAAAA,IAAI,EAAEA;AAA7C,WAAf,CAAX;AACH,SAFD,MAEO;AACHN,UAAAA,KAAK,CAACW,IAAN,CAAW,IAAIf,UAAJ,CAAe;AAACU,YAAAA,IAAI,EAAEA;AAAP,WAAf,CAAX;AACH;;AAED,YAAI;AACAJ,UAAAA,IAAI,GAAGA,IAAI,CAACc,MAAZ;AACH,SAFD,CAEE,OAAOC,CAAP,EAAU;AACR;AACH;AACJ;;AACD,aAAOjB,KAAP;AACH;AA7BE,GAAP;AA+BH,CA5CA,CAAD","sourcesContent":["(function(root, factory) {\n    'use strict';\n    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\n\n    /* istanbul ignore next */\n    if (typeof define === 'function' && define.amd) {\n        define('stack-generator', ['stackframe'], factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('stackframe'));\n    } else {\n        root.StackGenerator = factory(root.StackFrame);\n    }\n}(this, function(StackFrame) {\n    return {\n        backtrace: function StackGenerator$$backtrace(opts) {\n            var stack = [];\n            var maxStackSize = 10;\n\n            if (typeof opts === 'object' && typeof opts.maxStackSize === 'number') {\n                maxStackSize = opts.maxStackSize;\n            }\n\n            var curr = arguments.callee;\n            while (curr && stack.length < maxStackSize && curr['arguments']) {\n                // Allow V8 optimizations\n                var args = new Array(curr['arguments'].length);\n                for (var i = 0; i < args.length; ++i) {\n                    args[i] = curr['arguments'][i];\n                }\n                if (/function(?:\\s+([\\w$]+))+\\s*\\(/.test(curr.toString())) {\n                    stack.push(new StackFrame({functionName: RegExp.$1 || undefined, args: args}));\n                } else {\n                    stack.push(new StackFrame({args: args}));\n                }\n\n                try {\n                    curr = curr.caller;\n                } catch (e) {\n                    break;\n                }\n            }\n            return stack;\n        }\n    };\n}));\n"]},"metadata":{},"sourceType":"script"}