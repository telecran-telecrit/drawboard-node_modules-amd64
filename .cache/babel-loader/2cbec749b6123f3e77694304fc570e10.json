{"ast":null,"code":"var _jsxFileName = \"/home/pro/Solutions/drawboard-light/src/components/Dialog.tsx\";\nimport React, { useEffect, useRef } from \"react\";\nimport { Modal } from \"./Modal\";\nimport { Island } from \"./Island\";\nimport { t } from \"../i18n\";\nimport useIsMobile from \"../is-mobile\";\nimport { back, close } from \"./icons\";\nimport { KEYS } from \"../keys\";\nimport \"./Dialog.scss\";\nexport function Dialog(props) {\n  var _props$className;\n\n  const islandRef = useRef(null);\n  useEffect(() => {\n    const focusableElements = queryFocusableElements();\n\n    if (focusableElements.length > 0) {\n      // If there's an element other than close, focus it.\n      (focusableElements[1] || focusableElements[0]).focus();\n    }\n  }, []);\n  useEffect(() => {\n    if (!islandRef.current) {\n      return;\n    }\n\n    function handleKeyDown(event) {\n      if (event.key === KEYS.TAB) {\n        const focusableElements = queryFocusableElements();\n        const {\n          activeElement\n        } = document;\n        const currentIndex = focusableElements.findIndex(element => element === activeElement);\n\n        if (currentIndex === 0 && event.shiftKey) {\n          focusableElements[focusableElements.length - 1].focus();\n          event.preventDefault();\n        } else if (currentIndex === focusableElements.length - 1 && !event.shiftKey) {\n          focusableElements[0].focus();\n          event.preventDefault();\n        }\n      }\n    }\n\n    const node = islandRef.current;\n    node.addEventListener(\"keydown\", handleKeyDown);\n    return () => node.removeEventListener(\"keydown\", handleKeyDown);\n  }, []);\n\n  function queryFocusableElements() {\n    var _islandRef$current;\n\n    const focusableElements = (_islandRef$current = islandRef.current) === null || _islandRef$current === void 0 ? void 0 : _islandRef$current.querySelectorAll(\"button, a, input, select, textarea, div[tabindex]\");\n    return focusableElements ? Array.from(focusableElements) : [];\n  }\n\n  return /*#__PURE__*/React.createElement(Modal, {\n    className: `${(_props$className = props.className) !== null && _props$className !== void 0 ? _props$className : \"\"} Dialog`,\n    labelledBy: \"dialog-title\",\n    maxWidth: props.maxWidth,\n    onCloseRequest: props.onCloseRequest,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Island, {\n    padding: 4,\n    ref: islandRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    id: \"dialog-title\",\n    className: \"Dialog__title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"Dialog__titleContent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }, props.title), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"Modal__close\",\n    onClick: props.onCloseRequest,\n    \"aria-label\": t(\"buttons.close\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, useIsMobile() ? back : close)), props.children));\n}","map":{"version":3,"sources":["/home/pro/Solutions/drawboard-light/src/components/Dialog.tsx"],"names":["React","useEffect","useRef","Modal","Island","t","useIsMobile","back","close","KEYS","Dialog","props","islandRef","focusableElements","queryFocusableElements","length","focus","current","handleKeyDown","event","key","TAB","activeElement","document","currentIndex","findIndex","element","shiftKey","preventDefault","node","addEventListener","removeEventListener","querySelectorAll","Array","from","className","maxWidth","onCloseRequest","title","children"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport { Modal } from \"./Modal\";\nimport { Island } from \"./Island\";\nimport { t } from \"../i18n\";\nimport useIsMobile from \"../is-mobile\";\nimport { back, close } from \"./icons\";\nimport { KEYS } from \"../keys\";\n\nimport \"./Dialog.scss\";\n\nexport function Dialog(props: {\n  children: React.ReactNode;\n  className?: string;\n  maxWidth?: number;\n  onCloseRequest(): void;\n  title: React.ReactNode;\n}) {\n  const islandRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    const focusableElements = queryFocusableElements();\n\n    if (focusableElements.length > 0) {\n      // If there's an element other than close, focus it.\n      (focusableElements[1] || focusableElements[0]).focus();\n    }\n  }, []);\n\n  useEffect(() => {\n    if (!islandRef.current) {\n      return;\n    }\n\n    function handleKeyDown(event: KeyboardEvent) {\n      if (event.key === KEYS.TAB) {\n        const focusableElements = queryFocusableElements();\n        const { activeElement } = document;\n        const currentIndex = focusableElements.findIndex(\n          (element) => element === activeElement,\n        );\n\n        if (currentIndex === 0 && event.shiftKey) {\n          focusableElements[focusableElements.length - 1].focus();\n          event.preventDefault();\n        } else if (\n          currentIndex === focusableElements.length - 1 &&\n          !event.shiftKey\n        ) {\n          focusableElements[0].focus();\n          event.preventDefault();\n        }\n      }\n    }\n\n    const node = islandRef.current;\n    node.addEventListener(\"keydown\", handleKeyDown);\n\n    return () => node.removeEventListener(\"keydown\", handleKeyDown);\n  }, []);\n\n  function queryFocusableElements() {\n    const focusableElements = islandRef.current?.querySelectorAll<HTMLElement>(\n      \"button, a, input, select, textarea, div[tabindex]\",\n    );\n\n    return focusableElements ? Array.from(focusableElements) : [];\n  }\n\n  return (\n    <Modal\n      className={`${props.className ?? \"\"} Dialog`}\n      labelledBy=\"dialog-title\"\n      maxWidth={props.maxWidth}\n      onCloseRequest={props.onCloseRequest}\n    >\n      <Island padding={4} ref={islandRef}>\n        <h2 id=\"dialog-title\" className=\"Dialog__title\">\n          <span className=\"Dialog__titleContent\">{props.title}</span>\n          <button\n            className=\"Modal__close\"\n            onClick={props.onCloseRequest}\n            aria-label={t(\"buttons.close\")}\n          >\n            {useIsMobile() ? back : close}\n          </button>\n        </h2>\n        {props.children}\n      </Island>\n    </Modal>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}