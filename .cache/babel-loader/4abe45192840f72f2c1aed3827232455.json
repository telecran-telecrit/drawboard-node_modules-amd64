{"ast":null,"code":"import { KEYS } from \"../keys\";\nimport { selectNode } from \"../utils\";\n\nfunction trimText(text) {\n  // whitespace only → trim all because we'd end up inserting invisible element\n  if (!text.trim()) {\n    return \"\";\n  } // replace leading/trailing newlines (only) otherwise it messes up bounding\n  //  box calculation (there's also a bug in FF which inserts trailing newline\n  //  for multiline texts)\n\n\n  return text.replace(/^\\n+|\\n+$/g, \"\");\n}\n\nexport function textWysiwyg({\n  initText,\n  x,\n  y,\n  strokeColor,\n  font,\n  opacity,\n  zoom,\n  angle,\n  onChange,\n  textAlign,\n  onSubmit,\n  onCancel\n}) {\n  const editable = document.createElement(\"div\");\n\n  try {\n    editable.contentEditable = \"plaintext-only\";\n  } catch {\n    editable.contentEditable = \"true\";\n  }\n\n  editable.dir = \"auto\";\n  editable.tabIndex = 0;\n  editable.innerText = initText;\n  editable.dataset.type = \"wysiwyg\";\n  const degree = 180 * angle / Math.PI;\n  Object.assign(editable.style, {\n    color: strokeColor,\n    position: \"fixed\",\n    opacity: opacity / 100,\n    top: `${y}px`,\n    left: `${x}px`,\n    transform: `translate(-50%, -50%) scale(${zoom}) rotate(${degree}deg)`,\n    textAlign: textAlign,\n    display: \"inline-block\",\n    font: font,\n    padding: \"4px\",\n    // This needs to have \"1px solid\" otherwise the carret doesn't show up\n    // the first time on Safari and Chrome!\n    outline: \"1px solid transparent\",\n    whiteSpace: \"nowrap\",\n    minHeight: \"1em\",\n    backfaceVisibility: \"hidden\"\n  });\n\n  editable.onpaste = event => {\n    try {\n      const selection = window.getSelection();\n\n      if (!(selection === null || selection === void 0 ? void 0 : selection.rangeCount)) {\n        return;\n      }\n\n      selection.deleteFromDocument();\n      const text = event.clipboardData.getData(\"text\").replace(/\\r\\n?/g, \"\\n\");\n      const span = document.createElement(\"span\");\n      span.innerText = text;\n      const range = selection.getRangeAt(0);\n      range.insertNode(span); // deselect\n\n      window.getSelection().removeAllRanges();\n      range.setStart(span, span.childNodes.length);\n      range.setEnd(span, span.childNodes.length);\n      selection.addRange(range);\n      event.preventDefault();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  if (onChange) {\n    editable.oninput = () => {\n      onChange(trimText(editable.innerText));\n    };\n  }\n\n  editable.onkeydown = event => {\n    if (event.key === KEYS.ESCAPE) {\n      event.preventDefault();\n      handleSubmit();\n    } else if (event.key === KEYS.ENTER && event[KEYS.CTRL_OR_CMD]) {\n      event.preventDefault();\n\n      if (event.isComposing || event.keyCode === 229) {\n        return;\n      }\n\n      handleSubmit();\n    } else if (event.key === KEYS.ENTER && !event.altKey) {\n      event.stopPropagation();\n    }\n  };\n\n  function stopEvent(event) {\n    event.stopPropagation();\n  }\n\n  function handleSubmit() {\n    if (editable.innerText) {\n      onSubmit(trimText(editable.innerText));\n    } else {\n      onCancel();\n    }\n\n    cleanup();\n  }\n\n  function cleanup() {\n    // remove events to ensure they don't late-fire\n    editable.onpaste = null;\n    editable.oninput = null;\n    editable.onkeydown = null;\n    window.removeEventListener(\"wheel\", stopEvent, true);\n    document.body.removeChild(editable);\n  }\n\n  window.addEventListener(\"wheel\", stopEvent, true);\n  document.body.appendChild(editable);\n  editable.focus();\n  selectNode(editable);\n  return {\n    submit: handleSubmit,\n    changeStyle: style => {\n      Object.assign(editable.style, style);\n      editable.focus();\n    }\n  };\n}","map":{"version":3,"sources":["/home/pro/Solutions/drawboard-light/src/element/textWysiwyg.tsx"],"names":["KEYS","selectNode","trimText","text","trim","replace","textWysiwyg","initText","x","y","strokeColor","font","opacity","zoom","angle","onChange","textAlign","onSubmit","onCancel","editable","document","createElement","contentEditable","dir","tabIndex","innerText","dataset","type","degree","Math","PI","Object","assign","style","color","position","top","left","transform","display","padding","outline","whiteSpace","minHeight","backfaceVisibility","onpaste","event","selection","window","getSelection","rangeCount","deleteFromDocument","clipboardData","getData","span","range","getRangeAt","insertNode","removeAllRanges","setStart","childNodes","length","setEnd","addRange","preventDefault","error","console","oninput","onkeydown","key","ESCAPE","handleSubmit","ENTER","CTRL_OR_CMD","isComposing","keyCode","altKey","stopPropagation","stopEvent","cleanup","removeEventListener","body","removeChild","addEventListener","appendChild","focus","submit","changeStyle"],"mappings":"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","sourcesContent":["import { KEYS } from \"../keys\";\nimport { selectNode } from \"../utils\";\nimport { WysiwigElement } from \"./types\";\n\nfunction trimText(text: string) {\n  // whitespace only → trim all because we'd end up inserting invisible element\n  if (!text.trim()) {\n    return \"\";\n  }\n  // replace leading/trailing newlines (only) otherwise it messes up bounding\n  //  box calculation (there's also a bug in FF which inserts trailing newline\n  //  for multiline texts)\n  return text.replace(/^\\n+|\\n+$/g, \"\");\n}\n\ntype TextWysiwygParams = {\n  initText: string;\n  x: number;\n  y: number;\n  strokeColor: string;\n  font: string;\n  opacity: number;\n  zoom: number;\n  angle: number;\n  textAlign: string;\n  onChange?: (text: string) => void;\n  onSubmit: (text: string) => void;\n  onCancel: () => void;\n};\n\nexport function textWysiwyg({\n  initText,\n  x,\n  y,\n  strokeColor,\n  font,\n  opacity,\n  zoom,\n  angle,\n  onChange,\n  textAlign,\n  onSubmit,\n  onCancel,\n}: TextWysiwygParams): WysiwigElement {\n  const editable = document.createElement(\"div\");\n  try {\n    editable.contentEditable = \"plaintext-only\";\n  } catch {\n    editable.contentEditable = \"true\";\n  }\n  editable.dir = \"auto\";\n  editable.tabIndex = 0;\n  editable.innerText = initText;\n  editable.dataset.type = \"wysiwyg\";\n\n  const degree = (180 * angle) / Math.PI;\n\n  Object.assign(editable.style, {\n    color: strokeColor,\n    position: \"fixed\",\n    opacity: opacity / 100,\n    top: `${y}px`,\n    left: `${x}px`,\n    transform: `translate(-50%, -50%) scale(${zoom}) rotate(${degree}deg)`,\n    textAlign: textAlign,\n    display: \"inline-block\",\n    font: font,\n    padding: \"4px\",\n    // This needs to have \"1px solid\" otherwise the carret doesn't show up\n    // the first time on Safari and Chrome!\n    outline: \"1px solid transparent\",\n    whiteSpace: \"nowrap\",\n    minHeight: \"1em\",\n    backfaceVisibility: \"hidden\",\n  });\n\n  editable.onpaste = (event) => {\n    try {\n      const selection = window.getSelection();\n      if (!selection?.rangeCount) {\n        return;\n      }\n      selection.deleteFromDocument();\n\n      const text = event.clipboardData!.getData(\"text\").replace(/\\r\\n?/g, \"\\n\");\n\n      const span = document.createElement(\"span\");\n      span.innerText = text;\n      const range = selection.getRangeAt(0);\n      range.insertNode(span);\n\n      // deselect\n      window.getSelection()!.removeAllRanges();\n      range.setStart(span, span.childNodes.length);\n      range.setEnd(span, span.childNodes.length);\n      selection.addRange(range);\n\n      event.preventDefault();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  if (onChange) {\n    editable.oninput = () => {\n      onChange(trimText(editable.innerText));\n    };\n  }\n\n  editable.onkeydown = (event) => {\n    if (event.key === KEYS.ESCAPE) {\n      event.preventDefault();\n      handleSubmit();\n    } else if (event.key === KEYS.ENTER && event[KEYS.CTRL_OR_CMD]) {\n      event.preventDefault();\n      if (event.isComposing || event.keyCode === 229) {\n        return;\n      }\n      handleSubmit();\n    } else if (event.key === KEYS.ENTER && !event.altKey) {\n      event.stopPropagation();\n    }\n  };\n\n  function stopEvent(event: Event) {\n    event.stopPropagation();\n  }\n\n  function handleSubmit() {\n    if (editable.innerText) {\n      onSubmit(trimText(editable.innerText));\n    } else {\n      onCancel();\n    }\n    cleanup();\n  }\n\n  function cleanup() {\n    // remove events to ensure they don't late-fire\n    editable.onpaste = null;\n    editable.oninput = null;\n    editable.onkeydown = null;\n\n    window.removeEventListener(\"wheel\", stopEvent, true);\n    document.body.removeChild(editable);\n  }\n\n  window.addEventListener(\"wheel\", stopEvent, true);\n  document.body.appendChild(editable);\n  editable.focus();\n  selectNode(editable);\n\n  return {\n    submit: handleSubmit,\n    changeStyle: (style: any) => {\n      Object.assign(editable.style, style);\n      editable.focus();\n    },\n  };\n}\n"]},"metadata":{},"sourceType":"module"}