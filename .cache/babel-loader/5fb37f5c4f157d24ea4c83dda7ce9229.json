{"ast":null,"code":"var _jsxFileName = \"/home/pro/Solutions/drawboard-light/src/components/RoomDialog.tsx\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { ToolButton } from \"./ToolButton\";\nimport { t } from \"../i18n\";\nimport useIsMobile from \"../is-mobile\";\nimport { users, clipboard, start, stop } from \"./icons\";\nimport \"./RoomDialog.scss\";\nimport { copyTextToSystemClipboard } from \"../clipboard\";\nimport { Dialog } from \"./Dialog\";\n\nfunction RoomModal({\n  activeRoomLink,\n  username,\n  onUsernameChange,\n  onRoomCreate,\n  onRoomDestroy\n}) {\n  const roomLinkInput = useRef(null);\n\n  function copyRoomLink() {\n    copyTextToSystemClipboard(activeRoomLink);\n\n    if (roomLinkInput.current) {\n      roomLinkInput.current.select();\n    }\n  }\n\n  function selectInput(event) {\n    if (event.target !== document.activeElement) {\n      event.preventDefault();\n      event.target.select();\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"RoomDialog-modal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, !activeRoomLink && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, t(\"roomDialog.desc_intro\")), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, `🔒 ${t(\"roomDialog.desc_privacy\")}`), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"RoomDialog-sessionStartButtonContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ToolButton, {\n    className: \"RoomDialog-startSession\",\n    type: \"button\",\n    icon: start,\n    title: t(\"roomDialog.button_startSession\"),\n    \"aria-label\": t(\"roomDialog.button_startSession\"),\n    showAriaLabel: true,\n    onClick: onRoomCreate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }))), activeRoomLink && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, t(\"roomDialog.desc_inProgressIntro\")), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, t(\"roomDialog.desc_shareLink\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"RoomDialog-linkContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ToolButton, {\n    type: \"button\",\n    icon: clipboard,\n    title: t(\"labels.copy\"),\n    \"aria-label\": t(\"labels.copy\"),\n    onClick: copyRoomLink,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    value: activeRoomLink,\n    readOnly: true,\n    className: \"RoomDialog-link\",\n    ref: roomLinkInput,\n    onPointerDown: selectInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"RoomDialog-usernameContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"RoomDialog-usernameLabel\",\n    htmlFor: \"username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, t(\"labels.name\")), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"username\",\n    value: username || \"\",\n    className: \"RoomDialog-username TextInput\",\n    onChange: event => onUsernameChange(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, `🔒 ${t(\"roomDialog.desc_privacy\")}`), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    role: \"img\",\n    \"aria-hidden\": \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, \"\\u26A0\\uFE0F\"), \" \", t(\"roomDialog.desc_persistenceWarning\")), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, t(\"roomDialog.desc_exitSession\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"RoomDialog-sessionStartButtonContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ToolButton, {\n    className: \"RoomDialog-stopSession\",\n    type: \"button\",\n    icon: stop,\n    title: t(\"roomDialog.button_stopSession\"),\n    \"aria-label\": t(\"roomDialog.button_stopSession\"),\n    showAriaLabel: true,\n    onClick: onRoomDestroy,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }))));\n}\n\nexport function RoomDialog({\n  isCollaborating,\n  collaboratorCount,\n  username,\n  onUsernameChange,\n  onRoomCreate,\n  onRoomDestroy\n}) {\n  const [modalIsShown, setModalIsShown] = useState(false);\n  const [activeRoomLink, setActiveRoomLink] = useState(\"\");\n  const triggerButton = useRef(null);\n  const handleClose = React.useCallback(() => {\n    var _triggerButton$curren;\n\n    setModalIsShown(false);\n    (_triggerButton$curren = triggerButton.current) === null || _triggerButton$curren === void 0 ? void 0 : _triggerButton$curren.focus();\n  }, []);\n  useEffect(() => {\n    setActiveRoomLink(isCollaborating ? window.location.href : \"\");\n  }, [isCollaborating]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ToolButton, {\n    className: `RoomDialog-modalButton ${isCollaborating ? \"is-collaborating\" : \"\"}`,\n    onClick: () => setModalIsShown(true),\n    icon: users,\n    type: \"button\",\n    title: t(\"buttons.roomDialog\"),\n    \"aria-label\": t(\"buttons.roomDialog\"),\n    showAriaLabel: useIsMobile(),\n    ref: triggerButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }\n  }, collaboratorCount > 0 && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"RoomDialog-modalButton-collaborators\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 11\n    }\n  }, collaboratorCount)), modalIsShown && /*#__PURE__*/React.createElement(Dialog, {\n    maxWidth: 800,\n    onCloseRequest: handleClose,\n    title: t(\"labels.createRoom\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(RoomModal, {\n    activeRoomLink: activeRoomLink,\n    username: username,\n    onUsernameChange: onUsernameChange,\n    onRoomCreate: onRoomCreate,\n    onRoomDestroy: onRoomDestroy,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 11\n    }\n  })));\n}","map":{"version":3,"sources":["/home/pro/Solutions/drawboard-light/src/components/RoomDialog.tsx"],"names":["React","useState","useEffect","useRef","ToolButton","t","useIsMobile","users","clipboard","start","stop","copyTextToSystemClipboard","Dialog","RoomModal","activeRoomLink","username","onUsernameChange","onRoomCreate","onRoomDestroy","roomLinkInput","copyRoomLink","current","select","selectInput","event","target","document","activeElement","preventDefault","value","RoomDialog","isCollaborating","collaboratorCount","modalIsShown","setModalIsShown","setActiveRoomLink","triggerButton","handleClose","useCallback","focus","window","location","href"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { ToolButton } from \"./ToolButton\";\nimport { t } from \"../i18n\";\nimport useIsMobile from \"../is-mobile\";\nimport { users, clipboard, start, stop } from \"./icons\";\n\nimport \"./RoomDialog.scss\";\nimport { copyTextToSystemClipboard } from \"../clipboard\";\nimport { Dialog } from \"./Dialog\";\nimport { AppState } from \"../types\";\n\nfunction RoomModal({\n  activeRoomLink,\n  username,\n  onUsernameChange,\n  onRoomCreate,\n  onRoomDestroy,\n}: {\n  activeRoomLink: string;\n  username: string;\n  onUsernameChange: (username: string) => void;\n  onRoomCreate: () => void;\n  onRoomDestroy: () => void;\n}) {\n  const roomLinkInput = useRef<HTMLInputElement>(null);\n\n  function copyRoomLink() {\n    copyTextToSystemClipboard(activeRoomLink);\n    if (roomLinkInput.current) {\n      roomLinkInput.current.select();\n    }\n  }\n  function selectInput(event: React.MouseEvent<HTMLInputElement>) {\n    if (event.target !== document.activeElement) {\n      event.preventDefault();\n      (event.target as HTMLInputElement).select();\n    }\n  }\n\n  return (\n    <div className=\"RoomDialog-modal\">\n      {!activeRoomLink && (\n        <>\n          <p>{t(\"roomDialog.desc_intro\")}</p>\n          <p>{`🔒 ${t(\"roomDialog.desc_privacy\")}`}</p>\n          <div className=\"RoomDialog-sessionStartButtonContainer\">\n            <ToolButton\n              className=\"RoomDialog-startSession\"\n              type=\"button\"\n              icon={start}\n              title={t(\"roomDialog.button_startSession\")}\n              aria-label={t(\"roomDialog.button_startSession\")}\n              showAriaLabel={true}\n              onClick={onRoomCreate}\n            />\n          </div>\n        </>\n      )}\n      {activeRoomLink && (\n        <>\n          <p>{t(\"roomDialog.desc_inProgressIntro\")}</p>\n          <p>{t(\"roomDialog.desc_shareLink\")}</p>\n          <div className=\"RoomDialog-linkContainer\">\n            <ToolButton\n              type=\"button\"\n              icon={clipboard}\n              title={t(\"labels.copy\")}\n              aria-label={t(\"labels.copy\")}\n              onClick={copyRoomLink}\n            />\n            <input\n              value={activeRoomLink}\n              readOnly={true}\n              className=\"RoomDialog-link\"\n              ref={roomLinkInput}\n              onPointerDown={selectInput}\n            />\n          </div>\n          <div className=\"RoomDialog-usernameContainer\">\n            <label className=\"RoomDialog-usernameLabel\" htmlFor=\"username\">\n              {t(\"labels.name\")}\n            </label>\n            <input\n              id=\"username\"\n              value={username || \"\"}\n              className=\"RoomDialog-username TextInput\"\n              onChange={(event) => onUsernameChange(event.target.value)}\n            />\n          </div>\n          <p>{`🔒 ${t(\"roomDialog.desc_privacy\")}`}</p>\n          <p>\n            <span role=\"img\" aria-hidden=\"true\">\n              ⚠️\n            </span>{\" \"}\n            {t(\"roomDialog.desc_persistenceWarning\")}\n          </p>\n          <p>{t(\"roomDialog.desc_exitSession\")}</p>\n          <div className=\"RoomDialog-sessionStartButtonContainer\">\n            <ToolButton\n              className=\"RoomDialog-stopSession\"\n              type=\"button\"\n              icon={stop}\n              title={t(\"roomDialog.button_stopSession\")}\n              aria-label={t(\"roomDialog.button_stopSession\")}\n              showAriaLabel={true}\n              onClick={onRoomDestroy}\n            />\n          </div>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport function RoomDialog({\n  isCollaborating,\n  collaboratorCount,\n  username,\n  onUsernameChange,\n  onRoomCreate,\n  onRoomDestroy,\n}: {\n  isCollaborating: AppState[\"isCollaborating\"];\n  collaboratorCount: number;\n  username: string;\n  onUsernameChange: (username: string) => void;\n  onRoomCreate: () => void;\n  onRoomDestroy: () => void;\n}) {\n  const [modalIsShown, setModalIsShown] = useState(false);\n  const [activeRoomLink, setActiveRoomLink] = useState(\"\");\n\n  const triggerButton = useRef<HTMLButtonElement>(null);\n\n  const handleClose = React.useCallback(() => {\n    setModalIsShown(false);\n    triggerButton.current?.focus();\n  }, []);\n\n  useEffect(() => {\n    setActiveRoomLink(isCollaborating ? window.location.href : \"\");\n  }, [isCollaborating]);\n\n  return (\n    <>\n      <ToolButton\n        className={`RoomDialog-modalButton ${\n          isCollaborating ? \"is-collaborating\" : \"\"\n        }`}\n        onClick={() => setModalIsShown(true)}\n        icon={users}\n        type=\"button\"\n        title={t(\"buttons.roomDialog\")}\n        aria-label={t(\"buttons.roomDialog\")}\n        showAriaLabel={useIsMobile()}\n        ref={triggerButton}\n      >\n        {collaboratorCount > 0 && (\n          <div className=\"RoomDialog-modalButton-collaborators\">\n            {collaboratorCount}\n          </div>\n        )}\n      </ToolButton>\n      {modalIsShown && (\n        <Dialog\n          maxWidth={800}\n          onCloseRequest={handleClose}\n          title={t(\"labels.createRoom\")}\n        >\n          <RoomModal\n            activeRoomLink={activeRoomLink}\n            username={username}\n            onUsernameChange={onUsernameChange}\n            onRoomCreate={onRoomCreate}\n            onRoomDestroy={onRoomDestroy}\n          />\n        </Dialog>\n      )}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}