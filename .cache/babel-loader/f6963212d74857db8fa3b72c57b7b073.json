{"ast":null,"code":"// @license © 2020 Google LLC. Licensed under the Apache License, Version 2.0.\nexport default (async (e, t = {}, a = null) => {\n  try {\n    t.fileName = t.fileName || \"Untitled\", a = a || (await window.chooseFileSystemEntries({\n      type: \"save-file\",\n      accepts: [{\n        description: t.description || \"\",\n        mimeTypes: [e.type]\n      }]\n    }));\n    const i = await a.createWriter();\n    await i.truncate(0), await i.write(0, e), await i.close();\n  } catch (i) {\n    if (!/not a valid enum value/.test(i.message)) throw i;\n\n    try {\n      if (t.fileName = t.fileName || \"Untitled\", \"createWriter\" in (a = a || (await window.chooseFileSystemEntries({\n        type: \"saveFile\",\n        accepts: [{\n          description: t.description || \"\",\n          mimeTypes: [e.type]\n        }]\n      })))) {\n        const t = await a.createWriter();\n        await t.truncate(0), await t.write(0, e), await t.close();\n      } else {\n        const t = await a.createWritable();\n        await t.write(e), await t.close();\n      }\n    } catch (e) {\n      throw e;\n    }\n  }\n});","map":{"version":3,"sources":["/home/pro/Solutions/drawboard-light/node_modules/browser-nativefs/dist/file-save-nativefs.mjs"],"names":["e","t","a","fileName","window","chooseFileSystemEntries","type","accepts","description","mimeTypes","i","createWriter","truncate","write","close","test","message","createWritable"],"mappings":"AAAA;AACA,gBAAe,OAAMA,CAAN,EAAQC,CAAC,GAAC,EAAV,EAAaC,CAAC,GAAC,IAAf,KAAsB;AAAC,MAAG;AAACD,IAAAA,CAAC,CAACE,QAAF,GAAWF,CAAC,CAACE,QAAF,IAAY,UAAvB,EAAkCD,CAAC,GAACA,CAAC,KAAE,MAAME,MAAM,CAACC,uBAAP,CAA+B;AAACC,MAAAA,IAAI,EAAC,WAAN;AAAkBC,MAAAA,OAAO,EAAC,CAAC;AAACC,QAAAA,WAAW,EAACP,CAAC,CAACO,WAAF,IAAe,EAA5B;AAA+BC,QAAAA,SAAS,EAAC,CAACT,CAAC,CAACM,IAAH;AAAzC,OAAD;AAA1B,KAA/B,CAAR,CAArC;AAA6J,UAAMI,CAAC,GAAC,MAAMR,CAAC,CAACS,YAAF,EAAd;AAA+B,UAAMD,CAAC,CAACE,QAAF,CAAW,CAAX,CAAN,EAAoB,MAAMF,CAAC,CAACG,KAAF,CAAQ,CAAR,EAAUb,CAAV,CAA1B,EAAuC,MAAMU,CAAC,CAACI,KAAF,EAA7C;AAAuD,GAAvP,CAAuP,OAAMJ,CAAN,EAAQ;AAAC,QAAG,CAAC,yBAAyBK,IAAzB,CAA8BL,CAAC,CAACM,OAAhC,CAAJ,EAA6C,MAAMN,CAAN;;AAAQ,QAAG;AAAC,UAAGT,CAAC,CAACE,QAAF,GAAWF,CAAC,CAACE,QAAF,IAAY,UAAvB,EAAkC,mBAAiBD,CAAC,GAACA,CAAC,KAAE,MAAME,MAAM,CAACC,uBAAP,CAA+B;AAACC,QAAAA,IAAI,EAAC,UAAN;AAAiBC,QAAAA,OAAO,EAAC,CAAC;AAACC,UAAAA,WAAW,EAACP,CAAC,CAACO,WAAF,IAAe,EAA5B;AAA+BC,UAAAA,SAAS,EAAC,CAACT,CAAC,CAACM,IAAH;AAAzC,SAAD;AAAzB,OAA/B,CAAR,CAApB,CAArC,EAAiL;AAAC,cAAML,CAAC,GAAC,MAAMC,CAAC,CAACS,YAAF,EAAd;AAA+B,cAAMV,CAAC,CAACW,QAAF,CAAW,CAAX,CAAN,EAAoB,MAAMX,CAAC,CAACY,KAAF,CAAQ,CAAR,EAAUb,CAAV,CAA1B,EAAuC,MAAMC,CAAC,CAACa,KAAF,EAA7C;AAAuD,OAAxQ,MAA4Q;AAAC,cAAMb,CAAC,GAAC,MAAMC,CAAC,CAACe,cAAF,EAAd;AAAiC,cAAMhB,CAAC,CAACY,KAAF,CAAQb,CAAR,CAAN,EAAiB,MAAMC,CAAC,CAACa,KAAF,EAAvB;AAAiC;AAAC,KAApV,CAAoV,OAAMd,CAAN,EAAQ;AAAC,YAAMA,CAAN;AAAQ;AAAC;AAAC,CAAlsB","sourcesContent":["// @license © 2020 Google LLC. Licensed under the Apache License, Version 2.0.\nexport default async(e,t={},a=null)=>{try{t.fileName=t.fileName||\"Untitled\",a=a||await window.chooseFileSystemEntries({type:\"save-file\",accepts:[{description:t.description||\"\",mimeTypes:[e.type]}]});const i=await a.createWriter();await i.truncate(0),await i.write(0,e),await i.close()}catch(i){if(!/not a valid enum value/.test(i.message))throw i;try{if(t.fileName=t.fileName||\"Untitled\",\"createWriter\"in(a=a||await window.chooseFileSystemEntries({type:\"saveFile\",accepts:[{description:t.description||\"\",mimeTypes:[e.type]}]}))){const t=await a.createWriter();await t.truncate(0),await t.write(0,e),await t.close()}else{const t=await a.createWritable();await t.write(e),await t.close()}}catch(e){throw e}}};"]},"metadata":{},"sourceType":"module"}