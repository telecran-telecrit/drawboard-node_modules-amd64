{"ast":null,"code":"var _jsxFileName = \"/home/pro/Solutions/drawboard-light/src/components/ContextMenu.tsx\";\nimport React from \"react\";\nimport { Popover } from \"./Popover\";\nimport { render, unmountComponentAtNode } from \"react-dom\";\nimport \"./ContextMenu.scss\";\n\nfunction ContextMenu({\n  options,\n  onCloseRequest,\n  top,\n  left\n}) {\n  return /*#__PURE__*/React.createElement(Popover, {\n    onCloseRequest: onCloseRequest,\n    top: top,\n    left: left,\n    fitInViewport: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"context-menu\",\n    onContextMenu: event => event.preventDefault(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, options.map((option, idx) => /*#__PURE__*/React.createElement(\"li\", {\n    key: idx,\n    onClick: onCloseRequest,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ContextMenuOption, Object.assign({}, option, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }))))));\n}\n\nfunction ContextMenuOption({\n  label,\n  action\n}) {\n  return /*#__PURE__*/React.createElement(\"button\", {\n    className: \"context-menu-option\",\n    onClick: action,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, label);\n}\n\nlet contextMenuNode;\n\nfunction getContextMenuNode() {\n  if (contextMenuNode) {\n    return contextMenuNode;\n  }\n\n  const div = document.createElement(\"div\");\n  document.body.appendChild(div);\n  return contextMenuNode = div;\n}\n\nfunction handleClose() {\n  unmountComponentAtNode(getContextMenuNode());\n}\n\nexport default {\n  push(params) {\n    const options = Array.of();\n    params.options.forEach(option => {\n      if (option) {\n        options.push(option);\n      }\n    });\n\n    if (options.length) {\n      render( /*#__PURE__*/React.createElement(ContextMenu, {\n        top: params.top,\n        left: params.left,\n        options: options,\n        onCloseRequest: handleClose,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 9\n        }\n      }), getContextMenuNode());\n    }\n  }\n\n};","map":{"version":3,"sources":["/home/pro/Solutions/drawboard-light/src/components/ContextMenu.tsx"],"names":["React","Popover","render","unmountComponentAtNode","ContextMenu","options","onCloseRequest","top","left","event","preventDefault","map","option","idx","ContextMenuOption","label","action","contextMenuNode","getContextMenuNode","div","document","createElement","body","appendChild","handleClose","push","params","Array","of","forEach","length"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,SAASC,MAAT,EAAiBC,sBAAjB,QAA+C,WAA/C;AAEA,OAAO,oBAAP;;AAcA,SAASC,WAAT,CAAqB;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,cAAX;AAA2BC,EAAAA,GAA3B;AAAgCC,EAAAA;AAAhC,CAArB,EAAoE;AAClE,sBACE,oBAAC,OAAD;AACE,IAAA,cAAc,EAAEF,cADlB;AAEE,IAAA,GAAG,EAAEC,GAFP;AAGE,IAAA,IAAI,EAAEC,IAHR;AAIE,IAAA,aAAa,EAAE,IAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME;AACE,IAAA,SAAS,EAAC,cADZ;AAEE,IAAA,aAAa,EAAGC,KAAD,IAAWA,KAAK,CAACC,cAAN,EAF5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIGL,OAAO,CAACM,GAAR,CAAY,CAACC,MAAD,EAASC,GAAT,kBACX;AAAI,IAAA,GAAG,EAAEA,GAAT;AAAc,IAAA,OAAO,EAAEP,cAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,iBAAD,oBAAuBM,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CADD,CAJH,CANF,CADF;AAmBD;;AAED,SAASE,iBAAT,CAA2B;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAA3B,EAAiE;AAC/D,sBACE;AAAQ,IAAA,SAAS,EAAC,qBAAlB;AAAwC,IAAA,OAAO,EAAEA,MAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,KADH,CADF;AAKD;;AAED,IAAIE,eAAJ;;AACA,SAASC,kBAAT,GAA8C;AAC5C,MAAID,eAAJ,EAAqB;AACnB,WAAOA,eAAP;AACD;;AACD,QAAME,GAAG,GAAGC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAZ;AACAD,EAAAA,QAAQ,CAACE,IAAT,CAAcC,WAAd,CAA0BJ,GAA1B;AACA,SAAQF,eAAe,GAAGE,GAA1B;AACD;;AAQD,SAASK,WAAT,GAAuB;AACrBrB,EAAAA,sBAAsB,CAACe,kBAAkB,EAAnB,CAAtB;AACD;;AAED,eAAe;AACbO,EAAAA,IAAI,CAACC,MAAD,EAA4B;AAC9B,UAAMrB,OAAO,GAAGsB,KAAK,CAACC,EAAN,EAAhB;AACAF,IAAAA,MAAM,CAACrB,OAAP,CAAewB,OAAf,CAAwBjB,MAAD,IAAY;AACjC,UAAIA,MAAJ,EAAY;AACVP,QAAAA,OAAO,CAACoB,IAAR,CAAab,MAAb;AACD;AACF,KAJD;;AAKA,QAAIP,OAAO,CAACyB,MAAZ,EAAoB;AAClB5B,MAAAA,MAAM,eACJ,oBAAC,WAAD;AACE,QAAA,GAAG,EAAEwB,MAAM,CAACnB,GADd;AAEE,QAAA,IAAI,EAAEmB,MAAM,CAAClB,IAFf;AAGE,QAAA,OAAO,EAAEH,OAHX;AAIE,QAAA,cAAc,EAAEmB,WAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADI,EAOJN,kBAAkB,EAPd,CAAN;AASD;AACF;;AAnBY,CAAf","sourcesContent":["import React from \"react\";\nimport { Popover } from \"./Popover\";\nimport { render, unmountComponentAtNode } from \"react-dom\";\n\nimport \"./ContextMenu.scss\";\n\ntype ContextMenuOption = {\n  label: string;\n  action(): void;\n};\n\ntype Props = {\n  options: ContextMenuOption[];\n  onCloseRequest?(): void;\n  top: number;\n  left: number;\n};\n\nfunction ContextMenu({ options, onCloseRequest, top, left }: Props) {\n  return (\n    <Popover\n      onCloseRequest={onCloseRequest}\n      top={top}\n      left={left}\n      fitInViewport={true}\n    >\n      <ul\n        className=\"context-menu\"\n        onContextMenu={(event) => event.preventDefault()}\n      >\n        {options.map((option, idx) => (\n          <li key={idx} onClick={onCloseRequest}>\n            <ContextMenuOption {...option} />\n          </li>\n        ))}\n      </ul>\n    </Popover>\n  );\n}\n\nfunction ContextMenuOption({ label, action }: ContextMenuOption) {\n  return (\n    <button className=\"context-menu-option\" onClick={action}>\n      {label}\n    </button>\n  );\n}\n\nlet contextMenuNode: HTMLDivElement;\nfunction getContextMenuNode(): HTMLDivElement {\n  if (contextMenuNode) {\n    return contextMenuNode;\n  }\n  const div = document.createElement(\"div\");\n  document.body.appendChild(div);\n  return (contextMenuNode = div);\n}\n\ntype ContextMenuParams = {\n  options: (ContextMenuOption | false | null | undefined)[];\n  top: number;\n  left: number;\n};\n\nfunction handleClose() {\n  unmountComponentAtNode(getContextMenuNode());\n}\n\nexport default {\n  push(params: ContextMenuParams) {\n    const options = Array.of<ContextMenuOption>();\n    params.options.forEach((option) => {\n      if (option) {\n        options.push(option);\n      }\n    });\n    if (options.length) {\n      render(\n        <ContextMenu\n          top={params.top}\n          left={params.left}\n          options={options}\n          onCloseRequest={handleClose}\n        />,\n        getContextMenuNode(),\n      );\n    }\n  },\n};\n"]},"metadata":{},"sourceType":"module"}