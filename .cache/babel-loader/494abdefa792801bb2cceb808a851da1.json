{"ast":null,"code":"var _jsxFileName = \"/home/pro/Solutions/drawboard-light/src/components/TopErrorBoundary.tsx\";\nimport React from \"react\";\nimport * as Sentry from \"@sentry/browser\";\nimport { resetCursor } from \"../utils\";\nimport { t } from \"../i18n\";\nexport class TopErrorBoundary extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      hasError: false,\n      sentryEventId: \"\",\n      localStorage: \"\"\n    };\n  }\n\n  render() {\n    return this.state.hasError ? this.errorSplash() : this.props.children;\n  }\n\n  componentDidCatch(error, errorInfo) {\n    resetCursor();\n    const _localStorage = {};\n\n    for (const [key, value] of Object.entries({ ...localStorage\n    })) {\n      try {\n        _localStorage[key] = JSON.parse(value);\n      } catch (error) {\n        _localStorage[key] = value;\n      }\n    }\n\n    Sentry.withScope(scope => {\n      scope.setExtras(errorInfo);\n      const eventId = Sentry.captureException(error);\n      this.setState(state => ({\n        hasError: true,\n        sentryEventId: eventId,\n        localStorage: JSON.stringify(_localStorage)\n      }));\n    });\n  }\n\n  selectTextArea(event) {\n    if (event.target !== document.activeElement) {\n      event.preventDefault();\n      event.target.select();\n    }\n  }\n\n  async createGithubIssue() {\n    let body = \"\";\n\n    try {\n      const templateStrFn = (await import(\"../bug-issue-template\")).default;\n      body = encodeURIComponent(templateStrFn(this.state.sentryEventId));\n    } catch (error) {\n      console.error(error);\n    }\n\n    window.open(`https://github.com/excalidraw/excalidraw/issues/new?body=${body}`);\n  }\n\n  errorSplash() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ErrorSplash\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ErrorSplash-messageContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ErrorSplash-paragraph bigger align-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }\n    }, t(\"errorSplash.headingMain_pre\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => window.location.reload(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }, t(\"errorSplash.headingMain_button\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ErrorSplash-paragraph align-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }\n    }, t(\"errorSplash.clearCanvasMessage\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => {\n        try {\n          localStorage.clear();\n          window.location.reload();\n        } catch (error) {\n          console.error(error);\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }\n    }, t(\"errorSplash.clearCanvasMessage_button\")), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"smaller\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      role: \"img\",\n      \"aria-label\": \"warning\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 15\n      }\n    }, \"\\u26A0\\uFE0F\"), t(\"errorSplash.clearCanvasCaveat\"), /*#__PURE__*/React.createElement(\"span\", {\n      role: \"img\",\n      \"aria-hidden\": \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 15\n      }\n    }, \"\\u26A0\\uFE0F\"))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ErrorSplash-paragraph\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }\n    }, t(\"errorSplash.trackedToSentry_pre\"), this.state.sentryEventId, t(\"errorSplash.trackedToSentry_post\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ErrorSplash-paragraph\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }\n    }, t(\"errorSplash.openIssueMessage_pre\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.createGithubIssue(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 15\n      }\n    }, t(\"errorSplash.openIssueMessage_button\")), t(\"errorSplash.openIssueMessage_post\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ErrorSplash-paragraph\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ErrorSplash-details\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }\n    }, t(\"errorSplash.sceneContent\")), /*#__PURE__*/React.createElement(\"textarea\", {\n      rows: 5,\n      onPointerDown: this.selectTextArea,\n      readOnly: true,\n      value: this.state.localStorage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }\n    }))))));\n  }\n\n}","map":{"version":3,"sources":["/home/pro/Solutions/drawboard-light/src/components/TopErrorBoundary.tsx"],"names":["React","Sentry","resetCursor","t","TopErrorBoundary","Component","state","hasError","sentryEventId","localStorage","render","errorSplash","props","children","componentDidCatch","error","errorInfo","_localStorage","key","value","Object","entries","JSON","parse","withScope","scope","setExtras","eventId","captureException","setState","stringify","selectTextArea","event","target","document","activeElement","preventDefault","select","createGithubIssue","body","templateStrFn","default","encodeURIComponent","console","window","open","location","reload","clear"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport * as Sentry from \"@sentry/browser\";\nimport { resetCursor } from \"../utils\";\nimport { t } from \"../i18n\";\n\ninterface TopErrorBoundaryState {\n  hasError: boolean;\n  sentryEventId: string;\n  localStorage: string;\n}\n\nexport class TopErrorBoundary extends React.Component<\n  any,\n  TopErrorBoundaryState\n> {\n  state: TopErrorBoundaryState = {\n    hasError: false,\n    sentryEventId: \"\",\n    localStorage: \"\",\n  };\n\n  render() {\n    return this.state.hasError ? this.errorSplash() : this.props.children;\n  }\n\n  componentDidCatch(error: Error, errorInfo: any) {\n    resetCursor();\n    const _localStorage: any = {};\n    for (const [key, value] of Object.entries({ ...localStorage })) {\n      try {\n        _localStorage[key] = JSON.parse(value);\n      } catch (error) {\n        _localStorage[key] = value;\n      }\n    }\n\n    Sentry.withScope((scope) => {\n      scope.setExtras(errorInfo);\n      const eventId = Sentry.captureException(error);\n\n      this.setState((state) => ({\n        hasError: true,\n        sentryEventId: eventId,\n        localStorage: JSON.stringify(_localStorage),\n      }));\n    });\n  }\n\n  private selectTextArea(event: React.MouseEvent<HTMLTextAreaElement>) {\n    if (event.target !== document.activeElement) {\n      event.preventDefault();\n      (event.target as HTMLTextAreaElement).select();\n    }\n  }\n\n  private async createGithubIssue() {\n    let body = \"\";\n    try {\n      const templateStrFn = (await import(\"../bug-issue-template\")).default;\n      body = encodeURIComponent(templateStrFn(this.state.sentryEventId));\n    } catch (error) {\n      console.error(error);\n    }\n\n    window.open(\n      `https://github.com/excalidraw/excalidraw/issues/new?body=${body}`,\n    );\n  }\n\n  private errorSplash() {\n    return (\n      <div className=\"ErrorSplash\">\n        <div className=\"ErrorSplash-messageContainer\">\n          <div className=\"ErrorSplash-paragraph bigger align-center\">\n            {t(\"errorSplash.headingMain_pre\")}\n            <button onClick={() => window.location.reload()}>\n              {t(\"errorSplash.headingMain_button\")}\n            </button>\n          </div>\n          <div className=\"ErrorSplash-paragraph align-center\">\n            {t(\"errorSplash.clearCanvasMessage\")}\n            <button\n              onClick={() => {\n                try {\n                  localStorage.clear();\n                  window.location.reload();\n                } catch (error) {\n                  console.error(error);\n                }\n              }}\n            >\n              {t(\"errorSplash.clearCanvasMessage_button\")}\n            </button>\n            <br />\n            <div className=\"smaller\">\n              <span role=\"img\" aria-label=\"warning\">\n                ⚠️\n              </span>\n              {t(\"errorSplash.clearCanvasCaveat\")}\n              <span role=\"img\" aria-hidden=\"true\">\n                ⚠️\n              </span>\n            </div>\n          </div>\n          <div>\n            <div className=\"ErrorSplash-paragraph\">\n              {t(\"errorSplash.trackedToSentry_pre\")}\n              {this.state.sentryEventId}\n              {t(\"errorSplash.trackedToSentry_post\")}\n            </div>\n            <div className=\"ErrorSplash-paragraph\">\n              {t(\"errorSplash.openIssueMessage_pre\")}\n              <button onClick={() => this.createGithubIssue()}>\n                {t(\"errorSplash.openIssueMessage_button\")}\n              </button>\n              {t(\"errorSplash.openIssueMessage_post\")}\n            </div>\n            <div className=\"ErrorSplash-paragraph\">\n              <div className=\"ErrorSplash-details\">\n                <label>{t(\"errorSplash.sceneContent\")}</label>\n                <textarea\n                  rows={5}\n                  onPointerDown={this.selectTextArea}\n                  readOnly={true}\n                  value={this.state.localStorage}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}