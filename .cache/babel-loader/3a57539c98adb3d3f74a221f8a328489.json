{"ast":null,"code":"import { getCommonBounds } from \"../element\";\nexport function normalizeScroll(pos) {\n  return Math.floor(pos);\n}\nexport function calculateScrollCenter(elements) {\n  if (!elements.length) {\n    return {\n      scrollX: normalizeScroll(0),\n      scrollY: normalizeScroll(0)\n    };\n  }\n\n  const [x1, y1, x2, y2] = getCommonBounds(elements);\n  const centerX = (x1 + x2) / 2;\n  const centerY = (y1 + y2) / 2;\n  return {\n    scrollX: normalizeScroll(window.innerWidth / 2 - centerX),\n    scrollY: normalizeScroll(window.innerHeight / 2 - centerY)\n  };\n}","map":{"version":3,"sources":["/home/pro/Solutions/drawboard-light/src/scene/scroll.ts"],"names":["getCommonBounds","normalizeScroll","pos","Math","floor","calculateScrollCenter","elements","length","scrollX","scrollY","x1","y1","x2","y2","centerX","centerY","window","innerWidth","innerHeight"],"mappings":"AAEA,SAASA,eAAT,QAAgC,YAAhC;AAEA,OAAO,SAASC,eAAT,CAAyBC,GAAzB,EAAsC;AAC3C,SAAOC,IAAI,CAACC,KAAL,CAAWF,GAAX,CAAP;AACD;AAED,OAAO,SAASG,qBAAT,CACLC,QADK,EAE+C;AACpD,MAAI,CAACA,QAAQ,CAACC,MAAd,EAAsB;AACpB,WAAO;AACLC,MAAAA,OAAO,EAAEP,eAAe,CAAC,CAAD,CADnB;AAELQ,MAAAA,OAAO,EAAER,eAAe,CAAC,CAAD;AAFnB,KAAP;AAID;;AAED,QAAM,CAACS,EAAD,EAAKC,EAAL,EAASC,EAAT,EAAaC,EAAb,IAAmBb,eAAe,CAACM,QAAD,CAAxC;AAEA,QAAMQ,OAAO,GAAG,CAACJ,EAAE,GAAGE,EAAN,IAAY,CAA5B;AACA,QAAMG,OAAO,GAAG,CAACJ,EAAE,GAAGE,EAAN,IAAY,CAA5B;AAEA,SAAO;AACLL,IAAAA,OAAO,EAAEP,eAAe,CAACe,MAAM,CAACC,UAAP,GAAoB,CAApB,GAAwBH,OAAzB,CADnB;AAELL,IAAAA,OAAO,EAAER,eAAe,CAACe,MAAM,CAACE,WAAP,GAAqB,CAArB,GAAyBH,OAA1B;AAFnB,GAAP;AAID","sourcesContent":["import { FlooredNumber } from \"../types\";\nimport { ExcalidrawElement } from \"../element/types\";\nimport { getCommonBounds } from \"../element\";\n\nexport function normalizeScroll(pos: number) {\n  return Math.floor(pos) as FlooredNumber;\n}\n\nexport function calculateScrollCenter(\n  elements: readonly ExcalidrawElement[],\n): { scrollX: FlooredNumber; scrollY: FlooredNumber } {\n  if (!elements.length) {\n    return {\n      scrollX: normalizeScroll(0),\n      scrollY: normalizeScroll(0),\n    };\n  }\n\n  const [x1, y1, x2, y2] = getCommonBounds(elements);\n\n  const centerX = (x1 + x2) / 2;\n  const centerY = (y1 + y2) / 2;\n\n  return {\n    scrollX: normalizeScroll(window.innerWidth / 2 - centerX),\n    scrollY: normalizeScroll(window.innerHeight / 2 - centerY),\n  };\n}\n"]},"metadata":{},"sourceType":"module"}