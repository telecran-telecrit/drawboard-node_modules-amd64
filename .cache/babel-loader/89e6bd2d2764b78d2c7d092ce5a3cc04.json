{"ast":null,"code":"(function (root, factory) {\n  'use strict'; // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\n\n  /* istanbul ignore next */\n\n  if (typeof define === 'function' && define.amd) {\n    define('stackframe', [], factory);\n  } else if (typeof exports === 'object') {\n    module.exports = factory();\n  } else {\n    root.StackFrame = factory();\n  }\n})(this, function () {\n  'use strict';\n\n  function _isNumber(n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n  }\n\n  function _capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.substring(1);\n  }\n\n  function _getter(p) {\n    return function () {\n      return this[p];\n    };\n  }\n\n  var booleanProps = ['isConstructor', 'isEval', 'isNative', 'isToplevel'];\n  var numericProps = ['columnNumber', 'lineNumber'];\n  var stringProps = ['fileName', 'functionName', 'source'];\n  var arrayProps = ['args'];\n  var props = booleanProps.concat(numericProps, stringProps, arrayProps);\n\n  function StackFrame(obj) {\n    if (!obj) return;\n\n    for (var i = 0; i < props.length; i++) {\n      if (obj[props[i]] !== undefined) {\n        this['set' + _capitalize(props[i])](obj[props[i]]);\n      }\n    }\n  }\n\n  StackFrame.prototype = {\n    getArgs: function getArgs() {\n      return this.args;\n    },\n    setArgs: function setArgs(v) {\n      if (Object.prototype.toString.call(v) !== '[object Array]') {\n        throw new TypeError('Args must be an Array');\n      }\n\n      this.args = v;\n    },\n    getEvalOrigin: function getEvalOrigin() {\n      return this.evalOrigin;\n    },\n    setEvalOrigin: function setEvalOrigin(v) {\n      if (v instanceof StackFrame) {\n        this.evalOrigin = v;\n      } else if (v instanceof Object) {\n        this.evalOrigin = new StackFrame(v);\n      } else {\n        throw new TypeError('Eval Origin must be an Object or StackFrame');\n      }\n    },\n    toString: function toString() {\n      var fileName = this.getFileName() || '';\n      var lineNumber = this.getLineNumber() || '';\n      var columnNumber = this.getColumnNumber() || '';\n      var functionName = this.getFunctionName() || '';\n\n      if (this.getIsEval()) {\n        if (fileName) {\n          return '[eval] (' + fileName + ':' + lineNumber + ':' + columnNumber + ')';\n        }\n\n        return '[eval]:' + lineNumber + ':' + columnNumber;\n      }\n\n      if (functionName) {\n        return functionName + ' (' + fileName + ':' + lineNumber + ':' + columnNumber + ')';\n      }\n\n      return fileName + ':' + lineNumber + ':' + columnNumber;\n    }\n  };\n\n  StackFrame.fromString = function StackFrame$$fromString(str) {\n    var argsStartIndex = str.indexOf('(');\n    var argsEndIndex = str.lastIndexOf(')');\n    var functionName = str.substring(0, argsStartIndex);\n    var args = str.substring(argsStartIndex + 1, argsEndIndex).split(',');\n    var locationString = str.substring(argsEndIndex + 1);\n\n    if (locationString.indexOf('@') === 0) {\n      var parts = /@(.+?)(?::(\\d+))?(?::(\\d+))?$/.exec(locationString, '');\n      var fileName = parts[1];\n      var lineNumber = parts[2];\n      var columnNumber = parts[3];\n    }\n\n    return new StackFrame({\n      functionName: functionName,\n      args: args || undefined,\n      fileName: fileName,\n      lineNumber: lineNumber || undefined,\n      columnNumber: columnNumber || undefined\n    });\n  };\n\n  for (var i = 0; i < booleanProps.length; i++) {\n    StackFrame.prototype['get' + _capitalize(booleanProps[i])] = _getter(booleanProps[i]);\n\n    StackFrame.prototype['set' + _capitalize(booleanProps[i])] = function (p) {\n      return function (v) {\n        this[p] = Boolean(v);\n      };\n    }(booleanProps[i]);\n  }\n\n  for (var j = 0; j < numericProps.length; j++) {\n    StackFrame.prototype['get' + _capitalize(numericProps[j])] = _getter(numericProps[j]);\n\n    StackFrame.prototype['set' + _capitalize(numericProps[j])] = function (p) {\n      return function (v) {\n        if (!_isNumber(v)) {\n          throw new TypeError(p + ' must be a Number');\n        }\n\n        this[p] = Number(v);\n      };\n    }(numericProps[j]);\n  }\n\n  for (var k = 0; k < stringProps.length; k++) {\n    StackFrame.prototype['get' + _capitalize(stringProps[k])] = _getter(stringProps[k]);\n\n    StackFrame.prototype['set' + _capitalize(stringProps[k])] = function (p) {\n      return function (v) {\n        this[p] = String(v);\n      };\n    }(stringProps[k]);\n  }\n\n  return StackFrame;\n});","map":{"version":3,"sources":["/home/pro/Solutions/drawboard-light/node_modules/stackframe/stackframe.js"],"names":["root","factory","define","amd","exports","module","StackFrame","_isNumber","n","isNaN","parseFloat","isFinite","_capitalize","str","charAt","toUpperCase","substring","_getter","p","booleanProps","numericProps","stringProps","arrayProps","props","concat","obj","i","length","undefined","prototype","getArgs","args","setArgs","v","Object","toString","call","TypeError","getEvalOrigin","evalOrigin","setEvalOrigin","fileName","getFileName","lineNumber","getLineNumber","columnNumber","getColumnNumber","functionName","getFunctionName","getIsEval","fromString","StackFrame$$fromString","argsStartIndex","indexOf","argsEndIndex","lastIndexOf","split","locationString","parts","exec","Boolean","j","Number","k","String"],"mappings":"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","sourcesContent":["(function(root, factory) {\n    'use strict';\n    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\n\n    /* istanbul ignore next */\n    if (typeof define === 'function' && define.amd) {\n        define('stackframe', [], factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory();\n    } else {\n        root.StackFrame = factory();\n    }\n}(this, function() {\n    'use strict';\n    function _isNumber(n) {\n        return !isNaN(parseFloat(n)) && isFinite(n);\n    }\n\n    function _capitalize(str) {\n        return str.charAt(0).toUpperCase() + str.substring(1);\n    }\n\n    function _getter(p) {\n        return function() {\n            return this[p];\n        };\n    }\n\n    var booleanProps = ['isConstructor', 'isEval', 'isNative', 'isToplevel'];\n    var numericProps = ['columnNumber', 'lineNumber'];\n    var stringProps = ['fileName', 'functionName', 'source'];\n    var arrayProps = ['args'];\n\n    var props = booleanProps.concat(numericProps, stringProps, arrayProps);\n\n    function StackFrame(obj) {\n        if (!obj) return;\n        for (var i = 0; i < props.length; i++) {\n            if (obj[props[i]] !== undefined) {\n                this['set' + _capitalize(props[i])](obj[props[i]]);\n            }\n        }\n    }\n\n    StackFrame.prototype = {\n        getArgs: function() {\n            return this.args;\n        },\n        setArgs: function(v) {\n            if (Object.prototype.toString.call(v) !== '[object Array]') {\n                throw new TypeError('Args must be an Array');\n            }\n            this.args = v;\n        },\n\n        getEvalOrigin: function() {\n            return this.evalOrigin;\n        },\n        setEvalOrigin: function(v) {\n            if (v instanceof StackFrame) {\n                this.evalOrigin = v;\n            } else if (v instanceof Object) {\n                this.evalOrigin = new StackFrame(v);\n            } else {\n                throw new TypeError('Eval Origin must be an Object or StackFrame');\n            }\n        },\n\n        toString: function() {\n            var fileName = this.getFileName() || '';\n            var lineNumber = this.getLineNumber() || '';\n            var columnNumber = this.getColumnNumber() || '';\n            var functionName = this.getFunctionName() || '';\n            if (this.getIsEval()) {\n                if (fileName) {\n                    return '[eval] (' + fileName + ':' + lineNumber + ':' + columnNumber + ')';\n                }\n                return '[eval]:' + lineNumber + ':' + columnNumber;\n            }\n            if (functionName) {\n                return functionName + ' (' + fileName + ':' + lineNumber + ':' + columnNumber + ')';\n            }\n            return fileName + ':' + lineNumber + ':' + columnNumber;\n        }\n    };\n\n    StackFrame.fromString = function StackFrame$$fromString(str) {\n        var argsStartIndex = str.indexOf('(');\n        var argsEndIndex = str.lastIndexOf(')');\n\n        var functionName = str.substring(0, argsStartIndex);\n        var args = str.substring(argsStartIndex + 1, argsEndIndex).split(',');\n        var locationString = str.substring(argsEndIndex + 1);\n\n        if (locationString.indexOf('@') === 0) {\n            var parts = /@(.+?)(?::(\\d+))?(?::(\\d+))?$/.exec(locationString, '');\n            var fileName = parts[1];\n            var lineNumber = parts[2];\n            var columnNumber = parts[3];\n        }\n\n        return new StackFrame({\n            functionName: functionName,\n            args: args || undefined,\n            fileName: fileName,\n            lineNumber: lineNumber || undefined,\n            columnNumber: columnNumber || undefined\n        });\n    };\n\n    for (var i = 0; i < booleanProps.length; i++) {\n        StackFrame.prototype['get' + _capitalize(booleanProps[i])] = _getter(booleanProps[i]);\n        StackFrame.prototype['set' + _capitalize(booleanProps[i])] = (function(p) {\n            return function(v) {\n                this[p] = Boolean(v);\n            };\n        })(booleanProps[i]);\n    }\n\n    for (var j = 0; j < numericProps.length; j++) {\n        StackFrame.prototype['get' + _capitalize(numericProps[j])] = _getter(numericProps[j]);\n        StackFrame.prototype['set' + _capitalize(numericProps[j])] = (function(p) {\n            return function(v) {\n                if (!_isNumber(v)) {\n                    throw new TypeError(p + ' must be a Number');\n                }\n                this[p] = Number(v);\n            };\n        })(numericProps[j]);\n    }\n\n    for (var k = 0; k < stringProps.length; k++) {\n        StackFrame.prototype['get' + _capitalize(stringProps[k])] = _getter(stringProps[k]);\n        StackFrame.prototype['set' + _capitalize(stringProps[k])] = (function(p) {\n            return function(v) {\n                this[p] = String(v);\n            };\n        })(stringProps[k]);\n    }\n\n    return StackFrame;\n}));\n"]},"metadata":{},"sourceType":"script"}