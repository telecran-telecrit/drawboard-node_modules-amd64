{"ast":null,"code":"import { cleanAppStateForExport } from \"../appState\";\nimport { fileOpen, fileSave } from \"browser-nativefs\";\nimport { loadFromBlob } from \"./blob\";\nexport function serializeAsJSON(elements, appState) {\n  return JSON.stringify({\n    type: \"excalidraw\",\n    version: 1,\n    source: window.location.origin,\n    elements: elements.filter(element => !element.isDeleted),\n    appState: cleanAppStateForExport(appState)\n  }, null, 2);\n}\nexport async function saveAsJSON(elements, appState) {\n  const serialized = serializeAsJSON(elements, appState);\n  const name = `${appState.name}.excalidraw`;\n  await fileSave(new Blob([serialized], {\n    type: \"application/json\"\n  }), {\n    fileName: name,\n    description: \"Excalidraw file\"\n  }, window.handle);\n}\nexport async function loadFromJSON() {\n  const blob = await fileOpen({\n    description: \"Excalidraw files\",\n    extensions: [\"json\", \"excalidraw\"],\n    mimeTypes: [\"application/json\"]\n  });\n  return loadFromBlob(blob);\n}","map":{"version":3,"sources":["/home/pro/Solutions/drawboard-light/src/data/json.ts"],"names":["cleanAppStateForExport","fileOpen","fileSave","loadFromBlob","serializeAsJSON","elements","appState","JSON","stringify","type","version","source","window","location","origin","filter","element","isDeleted","saveAsJSON","serialized","name","Blob","fileName","description","handle","loadFromJSON","blob","extensions","mimeTypes"],"mappings":"AAEA,SAASA,sBAAT,QAAuC,aAAvC;AAEA,SAASC,QAAT,EAAmBC,QAAnB,QAAmC,kBAAnC;AACA,SAASC,YAAT,QAA6B,QAA7B;AAEA,OAAO,SAASC,eAAT,CACLC,QADK,EAELC,QAFK,EAGG;AACR,SAAOC,IAAI,CAACC,SAAL,CACL;AACEC,IAAAA,IAAI,EAAE,YADR;AAEEC,IAAAA,OAAO,EAAE,CAFX;AAGEC,IAAAA,MAAM,EAAEC,MAAM,CAACC,QAAP,CAAgBC,MAH1B;AAIET,IAAAA,QAAQ,EAAEA,QAAQ,CAACU,MAAT,CAAiBC,OAAD,IAAa,CAACA,OAAO,CAACC,SAAtC,CAJZ;AAKEX,IAAAA,QAAQ,EAAEN,sBAAsB,CAACM,QAAD;AALlC,GADK,EAQL,IARK,EASL,CATK,CAAP;AAWD;AAED,OAAO,eAAeY,UAAf,CACLb,QADK,EAELC,QAFK,EAGL;AACA,QAAMa,UAAU,GAAGf,eAAe,CAACC,QAAD,EAAWC,QAAX,CAAlC;AAEA,QAAMc,IAAI,GAAI,GAAEd,QAAQ,CAACc,IAAK,aAA9B;AACA,QAAMlB,QAAQ,CACZ,IAAImB,IAAJ,CAAS,CAACF,UAAD,CAAT,EAAuB;AAAEV,IAAAA,IAAI,EAAE;AAAR,GAAvB,CADY,EAEZ;AACEa,IAAAA,QAAQ,EAAEF,IADZ;AAEEG,IAAAA,WAAW,EAAE;AAFf,GAFY,EAMXX,MAAD,CAAgBY,MANJ,CAAd;AAQD;AACD,OAAO,eAAeC,YAAf,GAA8B;AACnC,QAAMC,IAAI,GAAG,MAAMzB,QAAQ,CAAC;AAC1BsB,IAAAA,WAAW,EAAE,kBADa;AAE1BI,IAAAA,UAAU,EAAE,CAAC,MAAD,EAAS,YAAT,CAFc;AAG1BC,IAAAA,SAAS,EAAE,CAAC,kBAAD;AAHe,GAAD,CAA3B;AAKA,SAAOzB,YAAY,CAACuB,IAAD,CAAnB;AACD","sourcesContent":["import { ExcalidrawElement } from \"../element/types\";\nimport { AppState } from \"../types\";\nimport { cleanAppStateForExport } from \"../appState\";\n\nimport { fileOpen, fileSave } from \"browser-nativefs\";\nimport { loadFromBlob } from \"./blob\";\n\nexport function serializeAsJSON(\n  elements: readonly ExcalidrawElement[],\n  appState: AppState,\n): string {\n  return JSON.stringify(\n    {\n      type: \"excalidraw\",\n      version: 1,\n      source: window.location.origin,\n      elements: elements.filter((element) => !element.isDeleted),\n      appState: cleanAppStateForExport(appState),\n    },\n    null,\n    2,\n  );\n}\n\nexport async function saveAsJSON(\n  elements: readonly ExcalidrawElement[],\n  appState: AppState,\n) {\n  const serialized = serializeAsJSON(elements, appState);\n\n  const name = `${appState.name}.excalidraw`;\n  await fileSave(\n    new Blob([serialized], { type: \"application/json\" }),\n    {\n      fileName: name,\n      description: \"Excalidraw file\",\n    },\n    (window as any).handle,\n  );\n}\nexport async function loadFromJSON() {\n  const blob = await fileOpen({\n    description: \"Excalidraw files\",\n    extensions: [\"json\", \"excalidraw\"],\n    mimeTypes: [\"application/json\"],\n  });\n  return loadFromBlob(blob);\n}\n"]},"metadata":{},"sourceType":"module"}