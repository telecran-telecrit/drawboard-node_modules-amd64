{"ast":null,"code":"import { clearAppStateForLocalStorage } from \"../appState\";\nimport { restore } from \"./restore\";\nvar LOCAL_STORAGE_KEY = \"excalidraw\";\nvar LOCAL_STORAGE_KEY_STATE = \"excalidraw-state\";\nexport function saveToLocalStorage(elements, appState) {\n  localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(elements));\n  localStorage.setItem(LOCAL_STORAGE_KEY_STATE, JSON.stringify(clearAppStateForLocalStorage(appState)));\n}\nexport function restoreFromLocalStorage() {\n  var savedElements = localStorage.getItem(LOCAL_STORAGE_KEY);\n  var savedState = localStorage.getItem(LOCAL_STORAGE_KEY_STATE);\n  var elements = [];\n\n  if (savedElements) {\n    try {\n      elements = JSON.parse(savedElements);\n    } catch (_unused) {// Do nothing because elements array is already empty\n    }\n  }\n\n  var appState = null;\n\n  if (savedState) {\n    try {\n      appState = JSON.parse(savedState); // If we're retrieving from local storage, we should not be collaborating\n\n      appState.isCollaborating = false;\n      appState.collaboratorCount = 0;\n    } catch (_unused2) {// Do nothing because appState is already null\n    }\n  }\n\n  return restore(elements, appState);\n}","map":{"version":3,"sources":["/home/pro/Solutions/drawboard-light/src/data/localStorage.ts"],"names":["clearAppStateForLocalStorage","restore","LOCAL_STORAGE_KEY","LOCAL_STORAGE_KEY_STATE","saveToLocalStorage","elements","appState","localStorage","setItem","JSON","stringify","restoreFromLocalStorage","savedElements","getItem","savedState","parse","isCollaborating","collaboratorCount"],"mappings":"AAEA,SAASA,4BAAT,QAA6C,aAA7C;AACA,SAASC,OAAT,QAAwB,WAAxB;AAEA,IAAMC,iBAAiB,GAAG,YAA1B;AACA,IAAMC,uBAAuB,GAAG,kBAAhC;AAEA,OAAO,SAASC,kBAAT,CACLC,QADK,EAELC,QAFK,EAGL;AACAC,EAAAA,YAAY,CAACC,OAAb,CAAqBN,iBAArB,EAAwCO,IAAI,CAACC,SAAL,CAAeL,QAAf,CAAxC;AACAE,EAAAA,YAAY,CAACC,OAAb,CACEL,uBADF,EAEEM,IAAI,CAACC,SAAL,CAAeV,4BAA4B,CAACM,QAAD,CAA3C,CAFF;AAID;AAED,OAAO,SAASK,uBAAT,GAAmC;AACxC,MAAMC,aAAa,GAAGL,YAAY,CAACM,OAAb,CAAqBX,iBAArB,CAAtB;AACA,MAAMY,UAAU,GAAGP,YAAY,CAACM,OAAb,CAAqBV,uBAArB,CAAnB;AAEA,MAAIE,QAAQ,GAAG,EAAf;;AACA,MAAIO,aAAJ,EAAmB;AACjB,QAAI;AACFP,MAAAA,QAAQ,GAAGI,IAAI,CAACM,KAAL,CAAWH,aAAX,CAAX;AACD,KAFD,CAEE,gBAAM,CACN;AACD;AACF;;AAED,MAAIN,QAAQ,GAAG,IAAf;;AACA,MAAIQ,UAAJ,EAAgB;AACd,QAAI;AACFR,MAAAA,QAAQ,GAAGG,IAAI,CAACM,KAAL,CAAWD,UAAX,CAAX,CADE,CAEF;;AACAR,MAAAA,QAAQ,CAACU,eAAT,GAA2B,KAA3B;AACAV,MAAAA,QAAQ,CAACW,iBAAT,GAA6B,CAA7B;AACD,KALD,CAKE,iBAAM,CACN;AACD;AACF;;AAED,SAAOhB,OAAO,CAACI,QAAD,EAAWC,QAAX,CAAd;AACD","sourcesContent":["import { ExcalidrawElement } from \"../element/types\";\nimport { AppState } from \"../types\";\nimport { clearAppStateForLocalStorage } from \"../appState\";\nimport { restore } from \"./restore\";\n\nconst LOCAL_STORAGE_KEY = \"excalidraw\";\nconst LOCAL_STORAGE_KEY_STATE = \"excalidraw-state\";\n\nexport function saveToLocalStorage(\n  elements: readonly ExcalidrawElement[],\n  appState: AppState,\n) {\n  localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(elements));\n  localStorage.setItem(\n    LOCAL_STORAGE_KEY_STATE,\n    JSON.stringify(clearAppStateForLocalStorage(appState)),\n  );\n}\n\nexport function restoreFromLocalStorage() {\n  const savedElements = localStorage.getItem(LOCAL_STORAGE_KEY);\n  const savedState = localStorage.getItem(LOCAL_STORAGE_KEY_STATE);\n\n  let elements = [];\n  if (savedElements) {\n    try {\n      elements = JSON.parse(savedElements);\n    } catch {\n      // Do nothing because elements array is already empty\n    }\n  }\n\n  let appState = null;\n  if (savedState) {\n    try {\n      appState = JSON.parse(savedState) as AppState;\n      // If we're retrieving from local storage, we should not be collaborating\n      appState.isCollaborating = false;\n      appState.collaboratorCount = 0;\n    } catch {\n      // Do nothing because appState is already null\n    }\n  }\n\n  return restore(elements, appState);\n}\n"]},"metadata":{},"sourceType":"module"}