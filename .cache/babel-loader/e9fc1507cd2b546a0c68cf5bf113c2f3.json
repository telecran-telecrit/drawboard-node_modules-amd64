{"ast":null,"code":"import _regeneratorRuntime from \"/home/pro/Solutions/drawboard-light/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/pro/Solutions/drawboard-light/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n// @license © 2020 Google LLC. Licensed under the Apache License, Version 2.0.\nvar e = \"chooseFileSystemEntries\" in self ? import(\"./directory-open-nativefs.mjs\") : import(\"./directory-open-legacy.mjs\");\nexport function directoryOpen() {\n  return _directoryOpen.apply(this, arguments);\n}\n\nfunction _directoryOpen() {\n  _directoryOpen = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee() {\n    var _ref;\n\n    var _args = arguments;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return e;\n\n          case 2:\n            _context.t0 = _ref;\n            _context.t1 = _args;\n            return _context.abrupt(\"return\", (_ref = _context.sent).default.apply(_context.t0, _context.t1));\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _directoryOpen.apply(this, arguments);\n}","map":{"version":3,"sources":["/home/pro/Solutions/drawboard-light/node_modules/browser-nativefs/dist/directory-open.mjs"],"names":["e","self","directoryOpen","default"],"mappings":";;AAAA;AACA,IAAMA,CAAC,GAAC,6BAA4BC,IAA5B,GAAiC,OAAO,+BAAP,CAAjC,GAAyE,OAAO,6BAAP,CAAjF;AAAuH,gBAAsBC,aAAtB;AAAA;AAAA;;;;;2BAAO;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAgDF,CAAhD;;AAAA;AAAA;AAAA;AAAA,oEAAmDG,OAAnD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["// @license © 2020 Google LLC. Licensed under the Apache License, Version 2.0.\nconst e=\"chooseFileSystemEntries\"in self?import(\"./directory-open-nativefs.mjs\"):import(\"./directory-open-legacy.mjs\");export async function directoryOpen(...t){return(await e).default(...t)}"]},"metadata":{},"sourceType":"module"}