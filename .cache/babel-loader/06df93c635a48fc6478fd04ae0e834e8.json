{"ast":null,"code":"import _toConsumableArray from \"/home/pro/Solutions/drawboard-light/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/home/pro/Solutions/drawboard-light/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nexport function rotatePoints(points, center, degrees) {\n  if (points && points.length) {\n    var _center = _slicedToArray(center, 2),\n        cx = _center[0],\n        cy = _center[1];\n\n    var angle = Math.PI / 180 * degrees;\n    var cos = Math.cos(angle);\n    var sin = Math.sin(angle);\n    points.forEach(function (p) {\n      var _p = _slicedToArray(p, 2),\n          x = _p[0],\n          y = _p[1];\n\n      p[0] = (x - cx) * cos - (y - cy) * sin + cx;\n      p[1] = (x - cx) * sin + (y - cy) * cos + cy;\n    });\n  }\n}\nexport function rotateLines(lines, center, degrees) {\n  var points = [];\n  lines.forEach(function (line) {\n    return points.push.apply(points, _toConsumableArray(line));\n  });\n  rotatePoints(points, center, degrees);\n}\nexport function lineLength(line) {\n  var p1 = line[0];\n  var p2 = line[1];\n  return Math.sqrt(Math.pow(p1[0] - p2[0], 2) + Math.pow(p1[1] - p2[1], 2));\n}","map":{"version":3,"sources":["/home/pro/Solutions/drawboard-light/node_modules/roughjs/bin/geometry.js"],"names":["rotatePoints","points","center","degrees","length","cx","cy","angle","Math","PI","cos","sin","forEach","p","x","y","rotateLines","lines","line","push","lineLength","p1","p2","sqrt","pow"],"mappings":";;AAAA,OAAO,SAASA,YAAT,CAAsBC,MAAtB,EAA8BC,MAA9B,EAAsCC,OAAtC,EAA+C;AAClD,MAAIF,MAAM,IAAIA,MAAM,CAACG,MAArB,EAA6B;AAAA,iCACRF,MADQ;AAAA,QAClBG,EADkB;AAAA,QACdC,EADc;;AAEzB,QAAMC,KAAK,GAAIC,IAAI,CAACC,EAAL,GAAU,GAAX,GAAkBN,OAAhC;AACA,QAAMO,GAAG,GAAGF,IAAI,CAACE,GAAL,CAASH,KAAT,CAAZ;AACA,QAAMI,GAAG,GAAGH,IAAI,CAACG,GAAL,CAASJ,KAAT,CAAZ;AACAN,IAAAA,MAAM,CAACW,OAAP,CAAe,UAACC,CAAD,EAAO;AAAA,8BACHA,CADG;AAAA,UACXC,CADW;AAAA,UACRC,CADQ;;AAElBF,MAAAA,CAAC,CAAC,CAAD,CAAD,GAAQ,CAACC,CAAC,GAAGT,EAAL,IAAWK,GAAZ,GAAoB,CAACK,CAAC,GAAGT,EAAL,IAAWK,GAA/B,GAAsCN,EAA7C;AACAQ,MAAAA,CAAC,CAAC,CAAD,CAAD,GAAQ,CAACC,CAAC,GAAGT,EAAL,IAAWM,GAAZ,GAAoB,CAACI,CAAC,GAAGT,EAAL,IAAWI,GAA/B,GAAsCJ,EAA7C;AACH,KAJD;AAKH;AACJ;AACD,OAAO,SAASU,WAAT,CAAqBC,KAArB,EAA4Bf,MAA5B,EAAoCC,OAApC,EAA6C;AAChD,MAAMF,MAAM,GAAG,EAAf;AACAgB,EAAAA,KAAK,CAACL,OAAN,CAAc,UAACM,IAAD;AAAA,WAAUjB,MAAM,CAACkB,IAAP,OAAAlB,MAAM,qBAASiB,IAAT,EAAhB;AAAA,GAAd;AACAlB,EAAAA,YAAY,CAACC,MAAD,EAASC,MAAT,EAAiBC,OAAjB,CAAZ;AACH;AACD,OAAO,SAASiB,UAAT,CAAoBF,IAApB,EAA0B;AAC7B,MAAMG,EAAE,GAAGH,IAAI,CAAC,CAAD,CAAf;AACA,MAAMI,EAAE,GAAGJ,IAAI,CAAC,CAAD,CAAf;AACA,SAAOV,IAAI,CAACe,IAAL,CAAUf,IAAI,CAACgB,GAAL,CAASH,EAAE,CAAC,CAAD,CAAF,GAAQC,EAAE,CAAC,CAAD,CAAnB,EAAwB,CAAxB,IAA6Bd,IAAI,CAACgB,GAAL,CAASH,EAAE,CAAC,CAAD,CAAF,GAAQC,EAAE,CAAC,CAAD,CAAnB,EAAwB,CAAxB,CAAvC,CAAP;AACH","sourcesContent":["export function rotatePoints(points, center, degrees) {\n    if (points && points.length) {\n        const [cx, cy] = center;\n        const angle = (Math.PI / 180) * degrees;\n        const cos = Math.cos(angle);\n        const sin = Math.sin(angle);\n        points.forEach((p) => {\n            const [x, y] = p;\n            p[0] = ((x - cx) * cos) - ((y - cy) * sin) + cx;\n            p[1] = ((x - cx) * sin) + ((y - cy) * cos) + cy;\n        });\n    }\n}\nexport function rotateLines(lines, center, degrees) {\n    const points = [];\n    lines.forEach((line) => points.push(...line));\n    rotatePoints(points, center, degrees);\n}\nexport function lineLength(line) {\n    const p1 = line[0];\n    const p2 = line[1];\n    return Math.sqrt(Math.pow(p1[0] - p2[0], 2) + Math.pow(p1[1] - p2[1], 2));\n}\n"]},"metadata":{},"sourceType":"module"}