{"ast":null,"code":"import _objectWithoutProperties from \"/home/pro/Solutions/drawboard-light/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _objectSpread from \"/home/pro/Solutions/drawboard-light/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/home/pro/Solutions/drawboard-light/src/components/LayerUI.tsx\";\nimport React from \"react\";\nimport { showSelectedShapeActions } from \"../element\";\nimport { calculateScrollCenter, getTargetElement } from \"../scene\";\nimport { exportCanvas } from \"../data\";\nimport { Island } from \"./Island\";\nimport Stack from \"./Stack\";\nimport { FixedSideContainer } from \"./FixedSideContainer\";\nimport { LockIcon } from \"./LockIcon\";\nimport { ExportDialog } from \"./ExportDialog\";\nimport { LanguageList } from \"./LanguageList\";\nimport { t, languages, setLanguage } from \"../i18n\";\nimport { HintViewer } from \"./HintViewer\";\nimport useIsMobile from \"../is-mobile\";\nimport { MobileMenu } from \"./MobileMenu\";\nimport { ZoomActions, SelectedShapeActions, ShapesSwitcher } from \"./Actions\";\nimport { Section } from \"./Section\";\nexport var LayerUI = React.memo(function (_ref) {\n  var actionManager = _ref.actionManager,\n      appState = _ref.appState,\n      setAppState = _ref.setAppState,\n      canvas = _ref.canvas,\n      elements = _ref.elements,\n      language = _ref.language,\n      setElements = _ref.setElements;\n  var isMobile = useIsMobile();\n\n  function renderExportDialog() {\n    var createExporter = function createExporter(type) {\n      return function (exportedElements, scale) {\n        if (canvas) {\n          exportCanvas(type, exportedElements, appState, canvas, {\n            exportBackground: appState.exportBackground,\n            name: appState.name,\n            viewBackgroundColor: appState.viewBackgroundColor,\n            scale: scale\n          });\n        }\n      };\n    };\n\n    return React.createElement(ExportDialog, {\n      elements: elements,\n      appState: appState,\n      actionManager: actionManager,\n      onExportToPng: createExporter(\"png\"),\n      onExportToSvg: createExporter(\"svg\"),\n      onExportToClipboard: createExporter(\"clipboard\"),\n      onExportToBackend: function onExportToBackend(exportedElements) {\n        if (canvas) {\n          exportCanvas(\"backend\", exportedElements, _objectSpread({}, appState, {\n            selectedElementIds: {}\n          }), canvas, appState);\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    });\n  }\n\n  return isMobile ? React.createElement(MobileMenu, {\n    appState: appState,\n    elements: elements,\n    setElements: setElements,\n    actionManager: actionManager,\n    exportButton: renderExportDialog(),\n    setAppState: setAppState,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }) : React.createElement(React.Fragment, null, React.createElement(FixedSideContainer, {\n    side: \"top\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(HintViewer, {\n    appState: appState,\n    elements: elements,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"App-menu App-menu_top\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(Stack.Col, {\n    gap: 4,\n    align: \"end\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(Section, {\n    className: \"App-right-menu\",\n    heading: \"canvasActions\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(Island, {\n    padding: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(Stack.Col, {\n    gap: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(Stack.Row, {\n    justifyContent: \"space-between\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, actionManager.renderAction(\"loadScene\"), actionManager.renderAction(\"saveScene\"), renderExportDialog(), actionManager.renderAction(\"clearCanvas\")), actionManager.renderAction(\"changeViewBackgroundColor\")))), showSelectedShapeActions(appState, elements) && React.createElement(Section, {\n    className: \"App-right-menu\",\n    heading: \"selectedShapeActions\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, React.createElement(Island, {\n    padding: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, React.createElement(SelectedShapeActions, {\n    targetElements: getTargetElement(elements, appState),\n    renderAction: actionManager.renderAction,\n    elementType: appState.elementType,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  })))), React.createElement(Section, {\n    heading: \"shapes\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, function (heading) {\n    return React.createElement(Stack.Col, {\n      gap: 4,\n      align: \"start\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(Stack.Row, {\n      gap: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(Island, {\n      padding: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, heading, React.createElement(Stack.Row, {\n      gap: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(ShapesSwitcher, {\n      elementType: appState.elementType,\n      setAppState: setAppState,\n      setElements: setElements,\n      elements: elements,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }))), React.createElement(LockIcon, {\n      checked: appState.elementLocked,\n      onChange: function onChange() {\n        setAppState({\n          elementLocked: !appState.elementLocked,\n          elementType: appState.elementLocked ? \"selection\" : appState.elementType\n        });\n      },\n      title: t(\"toolBar.lock\"),\n      isButton: isMobile,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    })));\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"App-menu App-menu_bottom\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, React.createElement(Stack.Col, {\n    gap: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, React.createElement(Section, {\n    heading: \"canvasActions\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, React.createElement(Island, {\n    padding: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, React.createElement(ZoomActions, {\n    renderAction: actionManager.renderAction,\n    zoom: appState.zoom,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  })))))), React.createElement(\"footer\", {\n    role: \"contentinfo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }, React.createElement(LanguageList, {\n    onChange: function onChange(lng) {\n      setLanguage(lng);\n      setAppState({});\n    },\n    languages: languages,\n    currentLanguage: language,\n    floating: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }), appState.scrolledOutside && React.createElement(\"button\", {\n    className: \"scroll-back-to-content\",\n    onClick: function onClick() {\n      setAppState(_objectSpread({}, calculateScrollCenter(elements)));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }, t(\"buttons.scrollBackToContent\"))));\n}, function (prev, next) {\n  var getNecessaryObj = function getNecessaryObj(appState) {\n    var draggingElement = appState.draggingElement,\n        resizingElement = appState.resizingElement,\n        multiElement = appState.multiElement,\n        editingElement = appState.editingElement,\n        isResizing = appState.isResizing,\n        cursorX = appState.cursorX,\n        cursorY = appState.cursorY,\n        ret = _objectWithoutProperties(appState, [\"draggingElement\", \"resizingElement\", \"multiElement\", \"editingElement\", \"isResizing\", \"cursorX\", \"cursorY\"]);\n\n    return ret;\n  };\n\n  var prevAppState = getNecessaryObj(prev.appState);\n  var nextAppState = getNecessaryObj(next.appState);\n  var keys = Object.keys(prevAppState);\n  return prev.language === next.language && prev.elements === next.elements && keys.every(function (key) {\n    return prevAppState[key] === nextAppState[key];\n  });\n});","map":{"version":3,"sources":["/home/pro/Solutions/drawboard-light/src/components/LayerUI.tsx"],"names":["React","showSelectedShapeActions","calculateScrollCenter","getTargetElement","exportCanvas","Island","Stack","FixedSideContainer","LockIcon","ExportDialog","LanguageList","t","languages","setLanguage","HintViewer","useIsMobile","MobileMenu","ZoomActions","SelectedShapeActions","ShapesSwitcher","Section","LayerUI","memo","actionManager","appState","setAppState","canvas","elements","language","setElements","isMobile","renderExportDialog","createExporter","type","exportedElements","scale","exportBackground","name","viewBackgroundColor","selectedElementIds","renderAction","elementType","heading","elementLocked","zoom","lng","scrolledOutside","prev","next","getNecessaryObj","draggingElement","resizingElement","multiElement","editingElement","isResizing","cursorX","cursorY","ret","prevAppState","nextAppState","keys","Object","every","key"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { showSelectedShapeActions } from \"../element\";\nimport { calculateScrollCenter, getTargetElement } from \"../scene\";\nimport { exportCanvas } from \"../data\";\n\nimport { AppState } from \"../types\";\nimport { ExcalidrawElement } from \"../element/types\";\n\nimport { ActionManager } from \"../actions/manager\";\nimport { Island } from \"./Island\";\nimport Stack from \"./Stack\";\nimport { FixedSideContainer } from \"./FixedSideContainer\";\nimport { LockIcon } from \"./LockIcon\";\nimport { ExportDialog, ExportCB } from \"./ExportDialog\";\nimport { LanguageList } from \"./LanguageList\";\nimport { t, languages, setLanguage } from \"../i18n\";\nimport { HintViewer } from \"./HintViewer\";\nimport useIsMobile from \"../is-mobile\";\n\nimport { ExportType } from \"../scene/types\";\nimport { MobileMenu } from \"./MobileMenu\";\nimport { ZoomActions, SelectedShapeActions, ShapesSwitcher } from \"./Actions\";\nimport { Section } from \"./Section\";\n\ninterface LayerUIProps {\n  actionManager: ActionManager;\n  appState: AppState;\n  canvas: HTMLCanvasElement | null;\n  setAppState: any;\n  elements: readonly ExcalidrawElement[];\n  language: string;\n  setElements: (elements: readonly ExcalidrawElement[]) => void;\n}\n\nexport const LayerUI = React.memo(\n  ({\n    actionManager,\n    appState,\n    setAppState,\n    canvas,\n    elements,\n    language,\n    setElements,\n  }: LayerUIProps) => {\n    const isMobile = useIsMobile();\n\n    function renderExportDialog() {\n      const createExporter = (type: ExportType): ExportCB => (\n        exportedElements,\n        scale,\n      ) => {\n        if (canvas) {\n          exportCanvas(type, exportedElements, appState, canvas, {\n            exportBackground: appState.exportBackground,\n            name: appState.name,\n            viewBackgroundColor: appState.viewBackgroundColor,\n            scale,\n          });\n        }\n      };\n      return (\n        <ExportDialog\n          elements={elements}\n          appState={appState}\n          actionManager={actionManager}\n          onExportToPng={createExporter(\"png\")}\n          onExportToSvg={createExporter(\"svg\")}\n          onExportToClipboard={createExporter(\"clipboard\")}\n          onExportToBackend={exportedElements => {\n            if (canvas) {\n              exportCanvas(\n                \"backend\",\n                exportedElements,\n                {\n                  ...appState,\n                  selectedElementIds: {},\n                },\n                canvas,\n                appState,\n              );\n            }\n          }}\n        />\n      );\n    }\n\n    return isMobile ? (\n      <MobileMenu\n        appState={appState}\n        elements={elements}\n        setElements={setElements}\n        actionManager={actionManager}\n        exportButton={renderExportDialog()}\n        setAppState={setAppState}\n      />\n    ) : (\n      <>\n        <FixedSideContainer side=\"top\">\n          <HintViewer appState={appState} elements={elements} />\n          <div className=\"App-menu App-menu_top\">\n            <Stack.Col gap={4} align=\"end\">\n              <Section className=\"App-right-menu\" heading=\"canvasActions\">\n                <Island padding={4}>\n                  <Stack.Col gap={4}>\n                    <Stack.Row justifyContent={\"space-between\"}>\n                      {actionManager.renderAction(\"loadScene\")}\n                      {actionManager.renderAction(\"saveScene\")}\n                      {renderExportDialog()}\n                      {actionManager.renderAction(\"clearCanvas\")}\n                    </Stack.Row>\n                    {actionManager.renderAction(\"changeViewBackgroundColor\")}\n                  </Stack.Col>\n                </Island>\n              </Section>\n              {showSelectedShapeActions(appState, elements) && (\n                <Section\n                  className=\"App-right-menu\"\n                  heading=\"selectedShapeActions\"\n                >\n                  <Island padding={4}>\n                    <SelectedShapeActions\n                      targetElements={getTargetElement(elements, appState)}\n                      renderAction={actionManager.renderAction}\n                      elementType={appState.elementType}\n                    />\n                  </Island>\n                </Section>\n              )}\n            </Stack.Col>\n            <Section heading=\"shapes\">\n              {heading => (\n                <Stack.Col gap={4} align=\"start\">\n                  <Stack.Row gap={1}>\n                    <Island padding={1}>\n                      {heading}\n                      <Stack.Row gap={1}>\n                        <ShapesSwitcher\n                          elementType={appState.elementType}\n                          setAppState={setAppState}\n                          setElements={setElements}\n                          elements={elements}\n                        />\n                      </Stack.Row>\n                    </Island>\n                    <LockIcon\n                      checked={appState.elementLocked}\n                      onChange={() => {\n                        setAppState({\n                          elementLocked: !appState.elementLocked,\n                          elementType: appState.elementLocked\n                            ? \"selection\"\n                            : appState.elementType,\n                        });\n                      }}\n                      title={t(\"toolBar.lock\")}\n                      isButton={isMobile}\n                    />\n                  </Stack.Row>\n                </Stack.Col>\n              )}\n            </Section>\n            <div />\n          </div>\n          <div className=\"App-menu App-menu_bottom\">\n            <Stack.Col gap={2}>\n              <Section heading=\"canvasActions\">\n                <Island padding={1}>\n                  <ZoomActions\n                    renderAction={actionManager.renderAction}\n                    zoom={appState.zoom}\n                  />\n                </Island>\n              </Section>\n            </Stack.Col>\n          </div>\n        </FixedSideContainer>\n        <footer role=\"contentinfo\">\n          <LanguageList\n            onChange={lng => {\n              setLanguage(lng);\n              setAppState({});\n            }}\n            languages={languages}\n            currentLanguage={language}\n            floating\n          />\n          {appState.scrolledOutside && (\n            <button\n              className=\"scroll-back-to-content\"\n              onClick={() => {\n                setAppState({ ...calculateScrollCenter(elements) });\n              }}\n            >\n              {t(\"buttons.scrollBackToContent\")}\n            </button>\n          )}\n        </footer>\n      </>\n    );\n  },\n  (prev, next) => {\n    const getNecessaryObj = (appState: AppState): Partial<AppState> => {\n      const {\n        draggingElement,\n        resizingElement,\n        multiElement,\n        editingElement,\n        isResizing,\n        cursorX,\n        cursorY,\n        ...ret\n      } = appState;\n      return ret;\n    };\n    const prevAppState = getNecessaryObj(prev.appState);\n    const nextAppState = getNecessaryObj(next.appState);\n\n    const keys = Object.keys(prevAppState) as (keyof Partial<AppState>)[];\n\n    return (\n      prev.language === next.language &&\n      prev.elements === next.elements &&\n      keys.every(key => prevAppState[key] === nextAppState[key])\n    );\n  },\n);\n"]},"metadata":{},"sourceType":"module"}