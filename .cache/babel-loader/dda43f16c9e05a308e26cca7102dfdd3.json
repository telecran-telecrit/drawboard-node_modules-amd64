{"ast":null,"code":"var _jsxFileName = \"/home/pro/Solutions/drawboard-light/src/components/MobileMenu.tsx\";\nimport React from \"react\";\nimport { t, setLanguage } from \"../i18n\";\nimport Stack from \"./Stack\";\nimport { LanguageList } from \"./LanguageList\";\nimport { showSelectedShapeActions } from \"../element\";\nimport { FixedSideContainer } from \"./FixedSideContainer\";\nimport { Island } from \"./Island\";\nimport { HintViewer } from \"./HintViewer\";\nimport { calculateScrollCenter } from \"../scene\";\nimport { SelectedShapeActions, ShapesSwitcher } from \"./Actions\";\nimport { Section } from \"./Section\";\nimport { RoomDialog } from \"./RoomDialog\";\nimport { SCROLLBAR_WIDTH, SCROLLBAR_MARGIN } from \"../scene/scrollbars\";\nimport { LockIcon } from \"./LockIcon\";\nimport { LoadingMessage } from \"./LoadingMessage\";\nexport function MobileMenu({\n  appState,\n  elements,\n  actionManager,\n  exportButton,\n  setAppState,\n  onRoomCreate,\n  onUsernameChange,\n  onRoomDestroy,\n  onLockToggle\n}) {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, appState.isLoading && /*#__PURE__*/React.createElement(LoadingMessage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 30\n    }\n  }), /*#__PURE__*/React.createElement(FixedSideContainer, {\n    side: \"top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Section, {\n    heading: \"shapes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, heading => /*#__PURE__*/React.createElement(Stack.Col, {\n    gap: 4,\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Stack.Row, {\n    gap: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Island, {\n    padding: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, heading, /*#__PURE__*/React.createElement(Stack.Row, {\n    gap: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(ShapesSwitcher, {\n    elementType: appState.elementType,\n    setAppState: setAppState,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(LockIcon, {\n    checked: appState.elementLocked,\n    onChange: onLockToggle,\n    title: t(\"toolBar.lock\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  })))), /*#__PURE__*/React.createElement(HintViewer, {\n    appState: appState,\n    elements: elements,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App-bottom-bar\",\n    style: {\n      marginBottom: SCROLLBAR_WIDTH + SCROLLBAR_MARGIN * 2,\n      marginLeft: SCROLLBAR_WIDTH + SCROLLBAR_MARGIN * 2,\n      marginRight: SCROLLBAR_WIDTH + SCROLLBAR_MARGIN * 2\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Island, {\n    padding: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, appState.openMenu === \"canvas\" ? /*#__PURE__*/React.createElement(Section, {\n    className: \"App-mobile-menu\",\n    heading: \"canvasActions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"panelColumn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Stack.Col, {\n    gap: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }, actionManager.renderAction(\"loadScene\"), actionManager.renderAction(\"saveScene\"), exportButton, actionManager.renderAction(\"clearCanvas\"), /*#__PURE__*/React.createElement(RoomDialog, {\n    isCollaborating: appState.isCollaborating,\n    collaboratorCount: appState.collaborators.size,\n    username: appState.username,\n    onUsernameChange: onUsernameChange,\n    onRoomCreate: onRoomCreate,\n    onRoomDestroy: onRoomDestroy,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 19\n    }\n  }), actionManager.renderAction(\"changeViewBackgroundColor\"), /*#__PURE__*/React.createElement(\"fieldset\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"legend\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 21\n    }\n  }, t(\"labels.language\")), /*#__PURE__*/React.createElement(LanguageList, {\n    onChange: lng => {\n      setLanguage(lng);\n      setAppState({});\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 21\n    }\n  }))))) : appState.openMenu === \"shape\" && showSelectedShapeActions(appState, elements) ? /*#__PURE__*/React.createElement(Section, {\n    className: \"App-mobile-menu\",\n    heading: \"selectedShapeActions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(SelectedShapeActions, {\n    appState: appState,\n    elements: elements,\n    renderAction: actionManager.renderAction,\n    elementType: appState.elementType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 15\n    }\n  })) : null, /*#__PURE__*/React.createElement(\"footer\", {\n    className: \"App-toolbar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App-toolbar-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }\n  }, actionManager.renderAction(\"toggleCanvasMenu\"), actionManager.renderAction(\"toggleEditMenu\"), actionManager.renderAction(\"undo\"), actionManager.renderAction(\"redo\"), actionManager.renderAction(appState.multiElement ? \"finalize\" : \"duplicateSelection\"), actionManager.renderAction(\"deleteSelectedElements\")), appState.scrolledOutside && /*#__PURE__*/React.createElement(\"button\", {\n    className: \"scroll-back-to-content\",\n    onClick: () => {\n      setAppState({ ...calculateScrollCenter(elements)\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 15\n    }\n  }, t(\"buttons.scrollBackToContent\"))))));\n}","map":{"version":3,"sources":["/home/pro/Solutions/drawboard-light/src/components/MobileMenu.tsx"],"names":["React","t","setLanguage","Stack","LanguageList","showSelectedShapeActions","FixedSideContainer","Island","HintViewer","calculateScrollCenter","SelectedShapeActions","ShapesSwitcher","Section","RoomDialog","SCROLLBAR_WIDTH","SCROLLBAR_MARGIN","LockIcon","LoadingMessage","MobileMenu","appState","elements","actionManager","exportButton","setAppState","onRoomCreate","onUsernameChange","onRoomDestroy","onLockToggle","isLoading","heading","elementType","elementLocked","marginBottom","marginLeft","marginRight","openMenu","renderAction","isCollaborating","collaborators","size","username","lng","multiElement","scrolledOutside"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { AppState } from \"../types\";\nimport { ActionManager } from \"../actions/manager\";\nimport { t, setLanguage } from \"../i18n\";\nimport Stack from \"./Stack\";\nimport { LanguageList } from \"./LanguageList\";\nimport { showSelectedShapeActions } from \"../element\";\nimport { NonDeletedExcalidrawElement } from \"../element/types\";\nimport { FixedSideContainer } from \"./FixedSideContainer\";\nimport { Island } from \"./Island\";\nimport { HintViewer } from \"./HintViewer\";\nimport { calculateScrollCenter } from \"../scene\";\nimport { SelectedShapeActions, ShapesSwitcher } from \"./Actions\";\nimport { Section } from \"./Section\";\nimport { RoomDialog } from \"./RoomDialog\";\nimport { SCROLLBAR_WIDTH, SCROLLBAR_MARGIN } from \"../scene/scrollbars\";\nimport { LockIcon } from \"./LockIcon\";\nimport { LoadingMessage } from \"./LoadingMessage\";\n\ntype MobileMenuProps = {\n  appState: AppState;\n  actionManager: ActionManager;\n  exportButton: React.ReactNode;\n  setAppState: any;\n  elements: readonly NonDeletedExcalidrawElement[];\n  onRoomCreate: () => void;\n  onUsernameChange: (username: string) => void;\n  onRoomDestroy: () => void;\n  onLockToggle: () => void;\n};\n\nexport function MobileMenu({\n  appState,\n  elements,\n  actionManager,\n  exportButton,\n  setAppState,\n  onRoomCreate,\n  onUsernameChange,\n  onRoomDestroy,\n  onLockToggle,\n}: MobileMenuProps) {\n  return (\n    <>\n      {appState.isLoading && <LoadingMessage />}\n      <FixedSideContainer side=\"top\">\n        <Section heading=\"shapes\">\n          {(heading) => (\n            <Stack.Col gap={4} align=\"center\">\n              <Stack.Row gap={1}>\n                <Island padding={1}>\n                  {heading}\n                  <Stack.Row gap={1}>\n                    <ShapesSwitcher\n                      elementType={appState.elementType}\n                      setAppState={setAppState}\n                    />\n                  </Stack.Row>\n                </Island>\n                <LockIcon\n                  checked={appState.elementLocked}\n                  onChange={onLockToggle}\n                  title={t(\"toolBar.lock\")}\n                />\n              </Stack.Row>\n            </Stack.Col>\n          )}\n        </Section>\n        <HintViewer appState={appState} elements={elements} />\n      </FixedSideContainer>\n      <div\n        className=\"App-bottom-bar\"\n        style={{\n          marginBottom: SCROLLBAR_WIDTH + SCROLLBAR_MARGIN * 2,\n          marginLeft: SCROLLBAR_WIDTH + SCROLLBAR_MARGIN * 2,\n          marginRight: SCROLLBAR_WIDTH + SCROLLBAR_MARGIN * 2,\n        }}\n      >\n        <Island padding={3}>\n          {appState.openMenu === \"canvas\" ? (\n            <Section className=\"App-mobile-menu\" heading=\"canvasActions\">\n              <div className=\"panelColumn\">\n                <Stack.Col gap={4}>\n                  {actionManager.renderAction(\"loadScene\")}\n                  {actionManager.renderAction(\"saveScene\")}\n                  {exportButton}\n                  {actionManager.renderAction(\"clearCanvas\")}\n                  <RoomDialog\n                    isCollaborating={appState.isCollaborating}\n                    collaboratorCount={appState.collaborators.size}\n                    username={appState.username}\n                    onUsernameChange={onUsernameChange}\n                    onRoomCreate={onRoomCreate}\n                    onRoomDestroy={onRoomDestroy}\n                  />\n                  {actionManager.renderAction(\"changeViewBackgroundColor\")}\n                  <fieldset>\n                    <legend>{t(\"labels.language\")}</legend>\n                    <LanguageList\n                      onChange={(lng) => {\n                        setLanguage(lng);\n                        setAppState({});\n                      }}\n                    />\n                  </fieldset>\n                </Stack.Col>\n              </div>\n            </Section>\n          ) : appState.openMenu === \"shape\" &&\n            showSelectedShapeActions(appState, elements) ? (\n            <Section className=\"App-mobile-menu\" heading=\"selectedShapeActions\">\n              <SelectedShapeActions\n                appState={appState}\n                elements={elements}\n                renderAction={actionManager.renderAction}\n                elementType={appState.elementType}\n              />\n            </Section>\n          ) : null}\n          <footer className=\"App-toolbar\">\n            <div className=\"App-toolbar-content\">\n              {actionManager.renderAction(\"toggleCanvasMenu\")}\n              {actionManager.renderAction(\"toggleEditMenu\")}\n              {actionManager.renderAction(\"undo\")}\n              {actionManager.renderAction(\"redo\")}\n              {actionManager.renderAction(\n                appState.multiElement ? \"finalize\" : \"duplicateSelection\",\n              )}\n              {actionManager.renderAction(\"deleteSelectedElements\")}\n            </div>\n            {appState.scrolledOutside && (\n              <button\n                className=\"scroll-back-to-content\"\n                onClick={() => {\n                  setAppState({ ...calculateScrollCenter(elements) });\n                }}\n              >\n                {t(\"buttons.scrollBackToContent\")}\n              </button>\n            )}\n          </footer>\n        </Island>\n      </div>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}