{"ast":null,"code":"import _objectSpread from \"/home/pro/Solutions/drawboard-light/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/home/pro/Solutions/drawboard-light/src/components/MobileMenu.tsx\";\nimport React from \"react\";\nimport { t, setLanguage } from \"../i18n\";\nimport Stack from \"./Stack\";\nimport { LanguageList } from \"./LanguageList\";\nimport { showSelectedShapeActions } from \"../element\";\nimport { FixedSideContainer } from \"./FixedSideContainer\";\nimport { Island } from \"./Island\";\nimport { HintViewer } from \"./HintViewer\";\nimport { calculateScrollCenter, getTargetElement } from \"../scene\";\nimport { SelectedShapeActions, ShapesSwitcher } from \"./Actions\";\nimport { Section } from \"./Section\";\nexport function MobileMenu(_ref) {\n  var appState = _ref.appState,\n      elements = _ref.elements,\n      setElements = _ref.setElements,\n      actionManager = _ref.actionManager,\n      exportButton = _ref.exportButton,\n      setAppState = _ref.setAppState;\n  return React.createElement(React.Fragment, null, appState.openMenu === \"canvas\" ? React.createElement(Section, {\n    className: \"App-mobile-menu\",\n    heading: \"canvasActions\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"App-mobile-menu-scroller panelColumn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(Stack.Col, {\n    gap: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, actionManager.renderAction(\"loadScene\"), actionManager.renderAction(\"saveScene\"), exportButton, actionManager.renderAction(\"clearCanvas\"), actionManager.renderAction(\"changeViewBackgroundColor\"), React.createElement(\"fieldset\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"legend\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, t(\"labels.language\")), React.createElement(LanguageList, {\n    onChange: function onChange(lng) {\n      setLanguage(lng);\n      setAppState({});\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }))))) : appState.openMenu === \"shape\" && showSelectedShapeActions(appState, elements) ? React.createElement(Section, {\n    className: \"App-mobile-menu\",\n    heading: \"selectedShapeActions\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"App-mobile-menu-scroller\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(SelectedShapeActions, {\n    targetElements: getTargetElement(elements, appState),\n    renderAction: actionManager.renderAction,\n    elementType: appState.elementType,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }))) : null, React.createElement(FixedSideContainer, {\n    side: \"top\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(Section, {\n    heading: \"shapes\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, function (heading) {\n    return React.createElement(Stack.Col, {\n      gap: 4,\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(Stack.Row, {\n      gap: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(Island, {\n      padding: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, heading, React.createElement(Stack.Row, {\n      gap: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(ShapesSwitcher, {\n      elementType: appState.elementType,\n      setAppState: setAppState,\n      setElements: setElements,\n      elements: elements,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    })))));\n  }), React.createElement(HintViewer, {\n    appState: appState,\n    elements: elements,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  })), React.createElement(\"footer\", {\n    className: \"App-toolbar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"App-toolbar-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, actionManager.renderAction(\"toggleCanvasMenu\"), actionManager.renderAction(\"toggleEditMenu\"), actionManager.renderAction(\"undo\"), actionManager.renderAction(\"redo\"), actionManager.renderAction(\"finalize\"), actionManager.renderAction(\"deleteSelectedElements\")), appState.scrolledOutside && React.createElement(\"button\", {\n    className: \"scroll-back-to-content\",\n    onClick: function onClick() {\n      setAppState(_objectSpread({}, calculateScrollCenter(elements)));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, t(\"buttons.scrollBackToContent\"))));\n}","map":{"version":3,"sources":["/home/pro/Solutions/drawboard-light/src/components/MobileMenu.tsx"],"names":["React","t","setLanguage","Stack","LanguageList","showSelectedShapeActions","FixedSideContainer","Island","HintViewer","calculateScrollCenter","getTargetElement","SelectedShapeActions","ShapesSwitcher","Section","MobileMenu","appState","elements","setElements","actionManager","exportButton","setAppState","openMenu","renderAction","lng","elementType","heading","scrolledOutside"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { AppState } from \"../types\";\nimport { ActionManager } from \"../actions/manager\";\nimport { t, setLanguage } from \"../i18n\";\nimport Stack from \"./Stack\";\nimport { LanguageList } from \"./LanguageList\";\nimport { showSelectedShapeActions } from \"../element\";\nimport { ExcalidrawElement } from \"../element/types\";\nimport { FixedSideContainer } from \"./FixedSideContainer\";\nimport { Island } from \"./Island\";\nimport { HintViewer } from \"./HintViewer\";\nimport { calculateScrollCenter, getTargetElement } from \"../scene\";\nimport { SelectedShapeActions, ShapesSwitcher } from \"./Actions\";\nimport { Section } from \"./Section\";\n\ntype MobileMenuProps = {\n  appState: AppState;\n  actionManager: ActionManager;\n  exportButton: React.ReactNode;\n  setAppState: any;\n  elements: readonly ExcalidrawElement[];\n  setElements: any;\n};\n\nexport function MobileMenu({\n  appState,\n  elements,\n  setElements,\n  actionManager,\n  exportButton,\n  setAppState,\n}: MobileMenuProps) {\n  return (\n    <>\n      {appState.openMenu === \"canvas\" ? (\n        <Section className=\"App-mobile-menu\" heading=\"canvasActions\">\n          <div className=\"App-mobile-menu-scroller panelColumn\">\n            <Stack.Col gap={4}>\n              {actionManager.renderAction(\"loadScene\")}\n              {actionManager.renderAction(\"saveScene\")}\n              {exportButton}\n              {actionManager.renderAction(\"clearCanvas\")}\n              {actionManager.renderAction(\"changeViewBackgroundColor\")}\n              <fieldset>\n                <legend>{t(\"labels.language\")}</legend>\n                <LanguageList\n                  onChange={lng => {\n                    setLanguage(lng);\n                    setAppState({});\n                  }}\n                />\n              </fieldset>\n            </Stack.Col>\n          </div>\n        </Section>\n      ) : appState.openMenu === \"shape\" &&\n        showSelectedShapeActions(appState, elements) ? (\n        <Section className=\"App-mobile-menu\" heading=\"selectedShapeActions\">\n          <div className=\"App-mobile-menu-scroller\">\n            <SelectedShapeActions\n              targetElements={getTargetElement(elements, appState)}\n              renderAction={actionManager.renderAction}\n              elementType={appState.elementType}\n            />\n          </div>\n        </Section>\n      ) : null}\n      <FixedSideContainer side=\"top\">\n        <Section heading=\"shapes\">\n          {heading => (\n            <Stack.Col gap={4} align=\"center\">\n              <Stack.Row gap={1}>\n                <Island padding={1}>\n                  {heading}\n                  <Stack.Row gap={1}>\n                    <ShapesSwitcher\n                      elementType={appState.elementType}\n                      setAppState={setAppState}\n                      setElements={setElements}\n                      elements={elements}\n                    />\n                  </Stack.Row>\n                </Island>\n              </Stack.Row>\n            </Stack.Col>\n          )}\n        </Section>\n        <HintViewer appState={appState} elements={elements} />\n      </FixedSideContainer>\n      <footer className=\"App-toolbar\">\n        <div className=\"App-toolbar-content\">\n          {actionManager.renderAction(\"toggleCanvasMenu\")}\n          {actionManager.renderAction(\"toggleEditMenu\")}\n          {actionManager.renderAction(\"undo\")}\n          {actionManager.renderAction(\"redo\")}\n          {actionManager.renderAction(\"finalize\")}\n          {actionManager.renderAction(\"deleteSelectedElements\")}\n        </div>\n        {appState.scrolledOutside && (\n          <button\n            className=\"scroll-back-to-content\"\n            onClick={() => {\n              setAppState({ ...calculateScrollCenter(elements) });\n            }}\n          >\n            {t(\"buttons.scrollBackToContent\")}\n          </button>\n        )}\n      </footer>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}