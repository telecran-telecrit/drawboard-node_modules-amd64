{"ast":null,"code":"import _objectSpread from \"/home/pro/Solutions/drawboard-light/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/home/pro/Solutions/drawboard-light/src/actions/actionCanvas.tsx\";\nimport React from \"react\";\nimport { ColorPicker } from \"../components/ColorPicker\";\nimport { getDefaultAppState } from \"../appState\";\nimport { trash, zoomIn, zoomOut, resetZoom } from \"../components/icons\";\nimport { ToolButton } from \"../components/ToolButton\";\nimport { t } from \"../i18n\";\nimport { getNormalizedZoom } from \"../scene\";\nimport { KEYS } from \"../keys\";\nimport { getShortcutKey } from \"../utils\";\nimport useIsMobile from \"../is-mobile\";\nimport { register } from \"./register\";\nexport var actionChangeViewBackgroundColor = register({\n  name: \"changeViewBackgroundColor\",\n  perform: function perform(_, appState, value) {\n    return {\n      appState: _objectSpread({}, appState, {\n        viewBackgroundColor: value\n      })\n    };\n  },\n  PanelComponent: function PanelComponent(_ref) {\n    var appState = _ref.appState,\n        updateData = _ref.updateData;\n    return React.createElement(\"div\", {\n      style: {\n        position: \"relative\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(ColorPicker, {\n      label: t(\"labels.canvasBackground\"),\n      type: \"canvasBackground\",\n      color: appState.viewBackgroundColor,\n      onChange: function onChange(color) {\n        return updateData(color);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }));\n  },\n  commitToHistory: function commitToHistory() {\n    return true;\n  }\n});\nexport var actionClearCanvas = register({\n  name: \"clearCanvas\",\n  commitToHistory: function commitToHistory() {\n    return true;\n  },\n  perform: function perform() {\n    return {\n      elements: [],\n      appState: getDefaultAppState()\n    };\n  },\n  PanelComponent: function PanelComponent(_ref2) {\n    var updateData = _ref2.updateData;\n    return React.createElement(ToolButton, {\n      type: \"button\",\n      icon: trash,\n      title: t(\"buttons.clearReset\"),\n      \"aria-label\": t(\"buttons.clearReset\"),\n      showAriaLabel: useIsMobile(),\n      onClick: function onClick() {\n        if (window.confirm(t(\"alerts.clearReset\"))) {\n          // TODO: Defined globally, since file handles aren't yet serializable.\n          // Once `FileSystemFileHandle` can be serialized, make this\n          // part of `AppState`.\n          window.handle = null;\n          updateData(null);\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    });\n  }\n});\nvar ZOOM_STEP = 0.1;\nvar KEY_CODES = {\n  MINUS: \"Minus\",\n  EQUAL: \"Equal\",\n  ZERO: \"Digit0\",\n  NUM_SUBTRACT: \"NumpadSubtract\",\n  NUM_ADD: \"NumpadAdd\",\n  NUM_ZERO: \"Numpad0\"\n};\nexport var actionZoomIn = register({\n  name: \"zoomIn\",\n  perform: function perform(_elements, appState) {\n    return {\n      appState: _objectSpread({}, appState, {\n        zoom: getNormalizedZoom(appState.zoom + ZOOM_STEP)\n      })\n    };\n  },\n  PanelComponent: function PanelComponent(_ref3) {\n    var updateData = _ref3.updateData;\n    return React.createElement(ToolButton, {\n      type: \"button\",\n      icon: zoomIn,\n      title: \"\".concat(t(\"buttons.zoomIn\"), \" \").concat(getShortcutKey(\"CtrlOrCmd++\")),\n      \"aria-label\": t(\"buttons.zoomIn\"),\n      onClick: function onClick() {\n        updateData(null);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    });\n  },\n  keyTest: function keyTest(event) {\n    return (event.code === KEY_CODES.EQUAL || event.code === KEY_CODES.NUM_ADD) && (event[KEYS.CTRL_OR_CMD] || event.shiftKey);\n  }\n});\nexport var actionZoomOut = register({\n  name: \"zoomOut\",\n  perform: function perform(_elements, appState) {\n    return {\n      appState: _objectSpread({}, appState, {\n        zoom: getNormalizedZoom(appState.zoom - ZOOM_STEP)\n      })\n    };\n  },\n  PanelComponent: function PanelComponent(_ref4) {\n    var updateData = _ref4.updateData;\n    return React.createElement(ToolButton, {\n      type: \"button\",\n      icon: zoomOut,\n      title: \"\".concat(t(\"buttons.zoomOut\"), \" \").concat(getShortcutKey(\"CtrlOrCmd+-\")),\n      \"aria-label\": t(\"buttons.zoomOut\"),\n      onClick: function onClick() {\n        updateData(null);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    });\n  },\n  keyTest: function keyTest(event) {\n    return (event.code === KEY_CODES.MINUS || event.code === KEY_CODES.NUM_SUBTRACT) && (event[KEYS.CTRL_OR_CMD] || event.shiftKey);\n  }\n});\nexport var actionResetZoom = register({\n  name: \"resetZoom\",\n  perform: function perform(_elements, appState) {\n    return {\n      appState: _objectSpread({}, appState, {\n        zoom: 1\n      })\n    };\n  },\n  PanelComponent: function PanelComponent(_ref5) {\n    var updateData = _ref5.updateData;\n    return React.createElement(ToolButton, {\n      type: \"button\",\n      icon: resetZoom,\n      title: t(\"buttons.resetZoom\"),\n      \"aria-label\": t(\"buttons.resetZoom\"),\n      onClick: function onClick() {\n        updateData(null);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    });\n  },\n  keyTest: function keyTest(event) {\n    return (event.code === KEY_CODES.ZERO || event.code === KEY_CODES.NUM_ZERO) && (event[KEYS.CTRL_OR_CMD] || event.shiftKey);\n  }\n});","map":{"version":3,"sources":["/home/pro/Solutions/drawboard-light/src/actions/actionCanvas.tsx"],"names":["React","ColorPicker","getDefaultAppState","trash","zoomIn","zoomOut","resetZoom","ToolButton","t","getNormalizedZoom","KEYS","getShortcutKey","useIsMobile","register","actionChangeViewBackgroundColor","name","perform","_","appState","value","viewBackgroundColor","PanelComponent","updateData","position","color","commitToHistory","actionClearCanvas","elements","window","confirm","handle","ZOOM_STEP","KEY_CODES","MINUS","EQUAL","ZERO","NUM_SUBTRACT","NUM_ADD","NUM_ZERO","actionZoomIn","_elements","zoom","keyTest","event","code","CTRL_OR_CMD","shiftKey","actionZoomOut","actionResetZoom"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { ColorPicker } from \"../components/ColorPicker\";\nimport { getDefaultAppState } from \"../appState\";\nimport { trash, zoomIn, zoomOut, resetZoom } from \"../components/icons\";\nimport { ToolButton } from \"../components/ToolButton\";\nimport { t } from \"../i18n\";\nimport { getNormalizedZoom } from \"../scene\";\nimport { KEYS } from \"../keys\";\nimport { getShortcutKey } from \"../utils\";\nimport useIsMobile from \"../is-mobile\";\nimport { register } from \"./register\";\n\nexport const actionChangeViewBackgroundColor = register({\n  name: \"changeViewBackgroundColor\",\n  perform: (_, appState, value) => {\n    return { appState: { ...appState, viewBackgroundColor: value } };\n  },\n  PanelComponent: ({ appState, updateData }) => {\n    return (\n      <div style={{ position: \"relative\" }}>\n        <ColorPicker\n          label={t(\"labels.canvasBackground\")}\n          type=\"canvasBackground\"\n          color={appState.viewBackgroundColor}\n          onChange={color => updateData(color)}\n        />\n      </div>\n    );\n  },\n  commitToHistory: () => true,\n});\n\nexport const actionClearCanvas = register({\n  name: \"clearCanvas\",\n  commitToHistory: () => true,\n  perform: () => {\n    return {\n      elements: [],\n      appState: getDefaultAppState(),\n    };\n  },\n  PanelComponent: ({ updateData }) => (\n    <ToolButton\n      type=\"button\"\n      icon={trash}\n      title={t(\"buttons.clearReset\")}\n      aria-label={t(\"buttons.clearReset\")}\n      showAriaLabel={useIsMobile()}\n      onClick={() => {\n        if (window.confirm(t(\"alerts.clearReset\"))) {\n          // TODO: Defined globally, since file handles aren't yet serializable.\n          // Once `FileSystemFileHandle` can be serialized, make this\n          // part of `AppState`.\n          (window as any).handle = null;\n          updateData(null);\n        }\n      }}\n    />\n  ),\n});\n\nconst ZOOM_STEP = 0.1;\n\nconst KEY_CODES = {\n  MINUS: \"Minus\",\n  EQUAL: \"Equal\",\n  ZERO: \"Digit0\",\n  NUM_SUBTRACT: \"NumpadSubtract\",\n  NUM_ADD: \"NumpadAdd\",\n  NUM_ZERO: \"Numpad0\",\n};\n\nexport const actionZoomIn = register({\n  name: \"zoomIn\",\n  perform: (_elements, appState) => {\n    return {\n      appState: {\n        ...appState,\n        zoom: getNormalizedZoom(appState.zoom + ZOOM_STEP),\n      },\n    };\n  },\n  PanelComponent: ({ updateData }) => (\n    <ToolButton\n      type=\"button\"\n      icon={zoomIn}\n      title={`${t(\"buttons.zoomIn\")} ${getShortcutKey(\"CtrlOrCmd++\")}`}\n      aria-label={t(\"buttons.zoomIn\")}\n      onClick={() => {\n        updateData(null);\n      }}\n    />\n  ),\n  keyTest: event =>\n    (event.code === KEY_CODES.EQUAL || event.code === KEY_CODES.NUM_ADD) &&\n    (event[KEYS.CTRL_OR_CMD] || event.shiftKey),\n});\n\nexport const actionZoomOut = register({\n  name: \"zoomOut\",\n  perform: (_elements, appState) => {\n    return {\n      appState: {\n        ...appState,\n        zoom: getNormalizedZoom(appState.zoom - ZOOM_STEP),\n      },\n    };\n  },\n  PanelComponent: ({ updateData }) => (\n    <ToolButton\n      type=\"button\"\n      icon={zoomOut}\n      title={`${t(\"buttons.zoomOut\")} ${getShortcutKey(\"CtrlOrCmd+-\")}`}\n      aria-label={t(\"buttons.zoomOut\")}\n      onClick={() => {\n        updateData(null);\n      }}\n    />\n  ),\n  keyTest: event =>\n    (event.code === KEY_CODES.MINUS || event.code === KEY_CODES.NUM_SUBTRACT) &&\n    (event[KEYS.CTRL_OR_CMD] || event.shiftKey),\n});\n\nexport const actionResetZoom = register({\n  name: \"resetZoom\",\n  perform: (_elements, appState) => {\n    return {\n      appState: {\n        ...appState,\n        zoom: 1,\n      },\n    };\n  },\n  PanelComponent: ({ updateData }) => (\n    <ToolButton\n      type=\"button\"\n      icon={resetZoom}\n      title={t(\"buttons.resetZoom\")}\n      aria-label={t(\"buttons.resetZoom\")}\n      onClick={() => {\n        updateData(null);\n      }}\n    />\n  ),\n  keyTest: event =>\n    (event.code === KEY_CODES.ZERO || event.code === KEY_CODES.NUM_ZERO) &&\n    (event[KEYS.CTRL_OR_CMD] || event.shiftKey),\n});\n"]},"metadata":{},"sourceType":"module"}