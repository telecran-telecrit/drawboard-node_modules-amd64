{"ast":null,"code":"var _jsxFileName = \"/home/pro/Solutions/drawboard-light/src/components/ColorPicker.tsx\";\nimport React from \"react\";\nimport { Popover } from \"./Popover\";\nimport \"./ColorPicker.scss\";\nimport { KEYS } from \"../keys\";\nimport { t, getLanguage } from \"../i18n\";\nimport { isWritableElement } from \"../utils\";\nimport colors from \"../colors\"; // This is a narrow reimplementation of the awesome react-color Twitter component\n// https://github.com/casesandberg/react-color/blob/master/src/components/twitter/Twitter.js\n// Unfortunately, we can't detect keyboard layout in the browser. So this will\n// only work well for QWERTY but not AZERTY or others...\n\nconst keyBindings = [[\"1\", \"2\", \"3\", \"4\", \"5\"], [\"q\", \"w\", \"e\", \"r\", \"t\"], [\"a\", \"s\", \"d\", \"f\", \"g\"]].flat();\n\nconst Picker = function ({\n  colors,\n  color,\n  onChange,\n  onClose,\n  label,\n  showInput = true\n}) {\n  const firstItem = React.useRef();\n  const activeItem = React.useRef();\n  const gallery = React.useRef();\n  const colorInput = React.useRef();\n  React.useEffect(() => {\n    // After the component is first mounted\n    // focus on first input\n    if (activeItem.current) {\n      activeItem.current.focus();\n    } else if (colorInput.current) {\n      colorInput.current.focus();\n    }\n  }, []);\n\n  const handleKeyDown = event => {\n    if (event.key === KEYS.TAB) {\n      const {\n        activeElement\n      } = document;\n\n      if (event.shiftKey) {\n        if (activeElement === firstItem.current) {\n          var _colorInput$current;\n\n          (_colorInput$current = colorInput.current) === null || _colorInput$current === void 0 ? void 0 : _colorInput$current.focus();\n          event.preventDefault();\n        }\n      } else {\n        if (activeElement === colorInput.current) {\n          var _firstItem$current;\n\n          (_firstItem$current = firstItem.current) === null || _firstItem$current === void 0 ? void 0 : _firstItem$current.focus();\n          event.preventDefault();\n        }\n      }\n    } else if (event.key === KEYS.ARROW_RIGHT || event.key === KEYS.ARROW_LEFT || event.key === KEYS.ARROW_UP || event.key === KEYS.ARROW_DOWN) {\n      const {\n        activeElement\n      } = document;\n      const isRTL = getLanguage().rtl;\n      const index = Array.prototype.indexOf.call(gallery.current.children, activeElement);\n\n      if (index !== -1) {\n        const length = gallery.current.children.length - (showInput ? 1 : 0);\n        const nextIndex = event.key === (isRTL ? KEYS.ARROW_LEFT : KEYS.ARROW_RIGHT) ? (index + 1) % length : event.key === (isRTL ? KEYS.ARROW_RIGHT : KEYS.ARROW_LEFT) ? (length + index - 1) % length : event.key === KEYS.ARROW_DOWN ? (index + 5) % length : event.key === KEYS.ARROW_UP ? (length + index - 5) % length : index;\n        gallery.current.children[nextIndex].focus();\n      }\n\n      event.preventDefault();\n    } else if (keyBindings.includes(event.key.toLowerCase()) && !isWritableElement(event.target)) {\n      const index = keyBindings.indexOf(event.key.toLowerCase());\n      gallery.current.children[index].focus();\n      event.preventDefault();\n    } else if (event.key === KEYS.ESCAPE || event.key === KEYS.ENTER) {\n      event.preventDefault();\n      onClose();\n    }\n\n    event.nativeEvent.stopImmediatePropagation();\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"color-picker\",\n    role: \"dialog\",\n    \"aria-modal\": \"true\",\n    \"aria-label\": t(\"labels.colorPicker\"),\n    onKeyDown: handleKeyDown,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"color-picker-triangle color-picker-triangle-shadow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"color-picker-triangle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"color-picker-content\",\n    ref: el => {\n      if (el) {\n        gallery.current = el;\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }, colors.map((_color, i) => /*#__PURE__*/React.createElement(\"button\", {\n    className: \"color-picker-swatch\",\n    onClick: event => {\n      event.currentTarget.focus();\n      onChange(_color);\n    },\n    title: `${_color} â€” ${keyBindings[i].toUpperCase()}`,\n    \"aria-label\": _color,\n    \"aria-keyshortcuts\": keyBindings[i],\n    style: {\n      color: _color\n    },\n    key: _color,\n    ref: el => {\n      if (el && i === 0) {\n        firstItem.current = el;\n      }\n\n      if (el && _color === color) {\n        activeItem.current = el;\n      }\n    },\n    onFocus: () => {\n      onChange(_color);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 11\n    }\n  }, _color === \"transparent\" ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"color-picker-transparent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 15\n    }\n  }) : undefined, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"color-picker-keybinding\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }\n  }, keyBindings[i]))), showInput && /*#__PURE__*/React.createElement(ColorInput, {\n    color: color,\n    label: label,\n    onChange: color => {\n      onChange(color);\n    },\n    ref: colorInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 11\n    }\n  })));\n};\n\nconst ColorInput = React.forwardRef(({\n  color,\n  onChange,\n  label\n}, ref) => {\n  const colorRegex = /^([0-9a-f]{3}|[0-9a-f]{6}|[0-9a-f]{8}|transparent)$/;\n  const [innerValue, setInnerValue] = React.useState(color);\n  const inputRef = React.useRef(null);\n  React.useEffect(() => {\n    setInnerValue(color);\n  }, [color]);\n  React.useImperativeHandle(ref, () => inputRef.current);\n  return /*#__PURE__*/React.createElement(\"label\", {\n    className: \"color-input-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"color-picker-hash\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 9\n    }\n  }, \"#\"), /*#__PURE__*/React.createElement(\"input\", {\n    spellCheck: false,\n    className: \"color-picker-input\",\n    \"aria-label\": label,\n    onChange: event => {\n      const value = event.target.value.toLowerCase();\n\n      if (value.match(colorRegex)) {\n        onChange(value === \"transparent\" ? \"transparent\" : `#${value}`);\n      }\n\n      setInnerValue(value);\n    },\n    value: (innerValue || \"\").replace(/^#/, \"\"),\n    onPaste: event => onChange(event.clipboardData.getData(\"text\")),\n    onBlur: () => setInnerValue(color),\n    ref: inputRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 9\n    }\n  }));\n});\nexport function ColorPicker({\n  type,\n  color,\n  onChange,\n  label\n}) {\n  const [isActive, setActive] = React.useState(false);\n  const pickerButton = React.useRef(null);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"color-picker-control-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"color-picker-label-swatch\",\n    \"aria-label\": label,\n    style: color ? {\n      \"--swatch-color\": color\n    } : undefined,\n    onClick: () => setActive(!isActive),\n    ref: pickerButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(ColorInput, {\n    color: color,\n    label: label,\n    onChange: color => {\n      onChange(color);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(React.Suspense, {\n    fallback: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 7\n    }\n  }, isActive ? /*#__PURE__*/React.createElement(Popover, {\n    onCloseRequest: event => event.target !== pickerButton.current && setActive(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Picker, {\n    colors: colors[type],\n    color: color || null,\n    onChange: changedColor => {\n      onChange(changedColor);\n    },\n    onClose: () => {\n      var _pickerButton$current;\n\n      setActive(false);\n      (_pickerButton$current = pickerButton.current) === null || _pickerButton$current === void 0 ? void 0 : _pickerButton$current.focus();\n    },\n    label: label,\n    showInput: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 13\n    }\n  })) : null));\n}","map":{"version":3,"sources":["/home/pro/Solutions/drawboard-light/src/components/ColorPicker.tsx"],"names":["React","Popover","KEYS","t","getLanguage","isWritableElement","colors","keyBindings","flat","Picker","color","onChange","onClose","label","showInput","firstItem","useRef","activeItem","gallery","colorInput","useEffect","current","focus","handleKeyDown","event","key","TAB","activeElement","document","shiftKey","preventDefault","ARROW_RIGHT","ARROW_LEFT","ARROW_UP","ARROW_DOWN","isRTL","rtl","index","Array","prototype","indexOf","call","children","length","nextIndex","includes","toLowerCase","target","ESCAPE","ENTER","nativeEvent","stopImmediatePropagation","el","map","_color","i","currentTarget","toUpperCase","undefined","ColorInput","forwardRef","ref","colorRegex","innerValue","setInnerValue","useState","inputRef","useImperativeHandle","value","match","replace","clipboardData","getData","ColorPicker","type","isActive","setActive","pickerButton","changedColor"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Popover } from \"./Popover\";\n\nimport \"./ColorPicker.scss\";\nimport { KEYS } from \"../keys\";\nimport { t, getLanguage } from \"../i18n\";\nimport { isWritableElement } from \"../utils\";\nimport colors from \"../colors\";\n\n// This is a narrow reimplementation of the awesome react-color Twitter component\n// https://github.com/casesandberg/react-color/blob/master/src/components/twitter/Twitter.js\n\n// Unfortunately, we can't detect keyboard layout in the browser. So this will\n// only work well for QWERTY but not AZERTY or others...\nconst keyBindings = [\n  [\"1\", \"2\", \"3\", \"4\", \"5\"],\n  [\"q\", \"w\", \"e\", \"r\", \"t\"],\n  [\"a\", \"s\", \"d\", \"f\", \"g\"],\n].flat();\n\nconst Picker = function ({\n  colors,\n  color,\n  onChange,\n  onClose,\n  label,\n  showInput = true,\n}: {\n  colors: string[];\n  color: string | null;\n  onChange: (color: string) => void;\n  onClose: () => void;\n  label: string;\n  showInput: boolean;\n}) {\n  const firstItem = React.useRef<HTMLButtonElement>();\n  const activeItem = React.useRef<HTMLButtonElement>();\n  const gallery = React.useRef<HTMLDivElement>();\n  const colorInput = React.useRef<HTMLInputElement>();\n\n  React.useEffect(() => {\n    // After the component is first mounted\n    // focus on first input\n    if (activeItem.current) {\n      activeItem.current.focus();\n    } else if (colorInput.current) {\n      colorInput.current.focus();\n    }\n  }, []);\n\n  const handleKeyDown = (event: React.KeyboardEvent) => {\n    if (event.key === KEYS.TAB) {\n      const { activeElement } = document;\n      if (event.shiftKey) {\n        if (activeElement === firstItem.current) {\n          colorInput.current?.focus();\n          event.preventDefault();\n        }\n      } else {\n        if (activeElement === colorInput.current) {\n          firstItem.current?.focus();\n          event.preventDefault();\n        }\n      }\n    } else if (\n      event.key === KEYS.ARROW_RIGHT ||\n      event.key === KEYS.ARROW_LEFT ||\n      event.key === KEYS.ARROW_UP ||\n      event.key === KEYS.ARROW_DOWN\n    ) {\n      const { activeElement } = document;\n      const isRTL = getLanguage().rtl;\n      const index = Array.prototype.indexOf.call(\n        gallery!.current!.children,\n        activeElement,\n      );\n      if (index !== -1) {\n        const length = gallery!.current!.children.length - (showInput ? 1 : 0);\n        const nextIndex =\n          event.key === (isRTL ? KEYS.ARROW_LEFT : KEYS.ARROW_RIGHT)\n            ? (index + 1) % length\n            : event.key === (isRTL ? KEYS.ARROW_RIGHT : KEYS.ARROW_LEFT)\n            ? (length + index - 1) % length\n            : event.key === KEYS.ARROW_DOWN\n            ? (index + 5) % length\n            : event.key === KEYS.ARROW_UP\n            ? (length + index - 5) % length\n            : index;\n        (gallery!.current!.children![nextIndex] as any).focus();\n      }\n      event.preventDefault();\n    } else if (\n      keyBindings.includes(event.key.toLowerCase()) &&\n      !isWritableElement(event.target)\n    ) {\n      const index = keyBindings.indexOf(event.key.toLowerCase());\n      (gallery!.current!.children![index] as any).focus();\n      event.preventDefault();\n    } else if (event.key === KEYS.ESCAPE || event.key === KEYS.ENTER) {\n      event.preventDefault();\n      onClose();\n    }\n    event.nativeEvent.stopImmediatePropagation();\n  };\n\n  return (\n    <div\n      className=\"color-picker\"\n      role=\"dialog\"\n      aria-modal=\"true\"\n      aria-label={t(\"labels.colorPicker\")}\n      onKeyDown={handleKeyDown}\n    >\n      <div className=\"color-picker-triangle color-picker-triangle-shadow\"></div>\n      <div className=\"color-picker-triangle\"></div>\n      <div\n        className=\"color-picker-content\"\n        ref={(el) => {\n          if (el) {\n            gallery.current = el;\n          }\n        }}\n      >\n        {colors.map((_color, i) => (\n          <button\n            className=\"color-picker-swatch\"\n            onClick={(event) => {\n              (event.currentTarget as HTMLButtonElement).focus();\n              onChange(_color);\n            }}\n            title={`${_color} â€” ${keyBindings[i].toUpperCase()}`}\n            aria-label={_color}\n            aria-keyshortcuts={keyBindings[i]}\n            style={{ color: _color }}\n            key={_color}\n            ref={(el) => {\n              if (el && i === 0) {\n                firstItem.current = el;\n              }\n              if (el && _color === color) {\n                activeItem.current = el;\n              }\n            }}\n            onFocus={() => {\n              onChange(_color);\n            }}\n          >\n            {_color === \"transparent\" ? (\n              <div className=\"color-picker-transparent\"></div>\n            ) : undefined}\n            <span className=\"color-picker-keybinding\">{keyBindings[i]}</span>\n          </button>\n        ))}\n        {showInput && (\n          <ColorInput\n            color={color}\n            label={label}\n            onChange={(color) => {\n              onChange(color);\n            }}\n            ref={colorInput}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst ColorInput = React.forwardRef(\n  (\n    {\n      color,\n      onChange,\n      label,\n    }: {\n      color: string | null;\n      onChange: (color: string) => void;\n      label: string;\n    },\n    ref,\n  ) => {\n    const colorRegex = /^([0-9a-f]{3}|[0-9a-f]{6}|[0-9a-f]{8}|transparent)$/;\n    const [innerValue, setInnerValue] = React.useState(color);\n    const inputRef = React.useRef(null);\n\n    React.useEffect(() => {\n      setInnerValue(color);\n    }, [color]);\n\n    React.useImperativeHandle(ref, () => inputRef.current);\n\n    return (\n      <label className=\"color-input-container\">\n        <div className=\"color-picker-hash\">#</div>\n        <input\n          spellCheck={false}\n          className=\"color-picker-input\"\n          aria-label={label}\n          onChange={(event) => {\n            const value = event.target.value.toLowerCase();\n            if (value.match(colorRegex)) {\n              onChange(value === \"transparent\" ? \"transparent\" : `#${value}`);\n            }\n            setInnerValue(value);\n          }}\n          value={(innerValue || \"\").replace(/^#/, \"\")}\n          onPaste={(event) => onChange(event.clipboardData.getData(\"text\"))}\n          onBlur={() => setInnerValue(color)}\n          ref={inputRef}\n        />\n      </label>\n    );\n  },\n);\n\nexport function ColorPicker({\n  type,\n  color,\n  onChange,\n  label,\n}: {\n  type: \"canvasBackground\" | \"elementBackground\" | \"elementStroke\";\n  color: string | null;\n  onChange: (color: string) => void;\n  label: string;\n}) {\n  const [isActive, setActive] = React.useState(false);\n  const pickerButton = React.useRef<HTMLButtonElement>(null);\n\n  return (\n    <div>\n      <div className=\"color-picker-control-container\">\n        <button\n          className=\"color-picker-label-swatch\"\n          aria-label={label}\n          style={\n            color\n              ? ({ \"--swatch-color\": color } as React.CSSProperties)\n              : undefined\n          }\n          onClick={() => setActive(!isActive)}\n          ref={pickerButton}\n        />\n        <ColorInput\n          color={color}\n          label={label}\n          onChange={(color) => {\n            onChange(color);\n          }}\n        />\n      </div>\n      <React.Suspense fallback=\"\">\n        {isActive ? (\n          <Popover\n            onCloseRequest={(event) =>\n              event.target !== pickerButton.current && setActive(false)\n            }\n          >\n            <Picker\n              colors={colors[type]}\n              color={color || null}\n              onChange={(changedColor) => {\n                onChange(changedColor);\n              }}\n              onClose={() => {\n                setActive(false);\n                pickerButton.current?.focus();\n              }}\n              label={label}\n              showInput={false}\n            />\n          </Popover>\n        ) : null}\n      </React.Suspense>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}