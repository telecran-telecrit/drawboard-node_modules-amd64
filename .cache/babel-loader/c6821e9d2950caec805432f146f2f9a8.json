{"ast":null,"code":"import _regeneratorRuntime from \"/home/pro/Solutions/drawboard-light/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/pro/Solutions/drawboard-light/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/pro/Solutions/drawboard-light/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"/home/pro/Solutions/drawboard-light/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"/home/pro/Solutions/drawboard-light/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/pro/Solutions/drawboard-light/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/pro/Solutions/drawboard-light/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/pro/Solutions/drawboard-light/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/pro/Solutions/drawboard-light/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/pro/Solutions/drawboard-light/src/components/TopErrorBoundary.tsx\";\nimport React from \"react\";\nexport var TopErrorBoundary =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TopErrorBoundary, _React$Component);\n\n  function TopErrorBoundary() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, TopErrorBoundary);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TopErrorBoundary)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      unresolvedError: null,\n      hasError: false,\n      stack: \"\",\n      localStorage: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(TopErrorBoundary, [{\n    key: \"componentDidCatch\",\n    value: function componentDidCatch(error) {\n      var _localStorage = {};\n\n      for (var _i = 0, _Object$entries = Object.entries(_objectSpread({}, localStorage)); _i < _Object$entries.length; _i++) {\n        var _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2),\n            key = _Object$entries$_i[0],\n            value = _Object$entries$_i[1];\n\n        try {\n          _localStorage[key] = JSON.parse(value);\n        } catch (_unused) {\n          _localStorage[key] = value;\n        }\n      }\n\n      this.setState(function (state) {\n        return {\n          hasError: true,\n          unresolvedError: state.unresolvedError ? state.unresolvedError.concat(error) : [error],\n          localStorage: JSON.stringify(_localStorage)\n        };\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function () {\n      var _componentDidUpdate = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var stack, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, error, StackTrace;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!(this.state.unresolvedError !== null)) {\n                  _context.next = 43;\n                  break;\n                }\n\n                stack = \"\";\n                _iteratorNormalCompletion = true;\n                _didIteratorError = false;\n                _iteratorError = undefined;\n                _context.prev = 5;\n                _iterator = this.state.unresolvedError[Symbol.iterator]();\n\n              case 7:\n                if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {\n                  _context.next = 28;\n                  break;\n                }\n\n                error = _step.value;\n\n                if (stack) {\n                  stack += \"\\n\\n================\\n\\n\";\n                }\n\n                stack += \"\".concat(error.message, \":\\n\\n\");\n                _context.prev = 11;\n                _context.next = 14;\n                return import(\"stacktrace-js\");\n\n              case 14:\n                StackTrace = _context.sent;\n                _context.t0 = stack;\n                _context.next = 18;\n                return StackTrace.fromError(error);\n\n              case 18:\n                stack = _context.t0 += _context.sent.join(\"\\n\");\n                _context.next = 25;\n                break;\n\n              case 21:\n                _context.prev = 21;\n                _context.t1 = _context[\"catch\"](11);\n                console.error(_context.t1);\n                stack += _context.t1.stack || \"\";\n\n              case 25:\n                _iteratorNormalCompletion = true;\n                _context.next = 7;\n                break;\n\n              case 28:\n                _context.next = 34;\n                break;\n\n              case 30:\n                _context.prev = 30;\n                _context.t2 = _context[\"catch\"](5);\n                _didIteratorError = true;\n                _iteratorError = _context.t2;\n\n              case 34:\n                _context.prev = 34;\n                _context.prev = 35;\n\n                if (!_iteratorNormalCompletion && _iterator.return != null) {\n                  _iterator.return();\n                }\n\n              case 37:\n                _context.prev = 37;\n\n                if (!_didIteratorError) {\n                  _context.next = 40;\n                  break;\n                }\n\n                throw _iteratorError;\n\n              case 40:\n                return _context.finish(37);\n\n              case 41:\n                return _context.finish(34);\n\n              case 42:\n                this.setState(function (state) {\n                  return {\n                    unresolvedError: null,\n                    stack: \"\".concat(state.stack ? \"\".concat(state.stack, \"\\n\\n================\\n\\n\").concat(stack) : stack)\n                  };\n                });\n\n              case 43:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[5, 30, 34, 42], [11, 21], [35,, 37, 41]]);\n      }));\n\n      function componentDidUpdate() {\n        return _componentDidUpdate.apply(this, arguments);\n      }\n\n      return componentDidUpdate;\n    }()\n  }, {\n    key: \"selectTextArea\",\n    value: function selectTextArea(event) {\n      if (event.target !== document.activeElement) {\n        event.preventDefault();\n        event.target.select();\n      }\n    }\n  }, {\n    key: \"createGithubIssue\",\n    value: function () {\n      var _createGithubIssue = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var body, templateStr;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                body = \"\";\n                _context2.prev = 1;\n                _context2.next = 4;\n                return import(\"../bug-issue-template\");\n\n              case 4:\n                templateStr = _context2.sent.default;\n\n                if (typeof templateStr === \"string\") {\n                  body = encodeURIComponent(templateStr);\n                }\n\n                _context2.next = 11;\n                break;\n\n              case 8:\n                _context2.prev = 8;\n                _context2.t0 = _context2[\"catch\"](1);\n                console.error(_context2.t0);\n\n              case 11:\n                window.open(\"https://github.com/excalidraw/excalidraw/issues/new?body=\".concat(body));\n\n              case 12:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[1, 8]]);\n      }));\n\n      function createGithubIssue() {\n        return _createGithubIssue.apply(this, arguments);\n      }\n\n      return createGithubIssue;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.hasError) {\n        return React.createElement(\"div\", {\n          className: \"ErrorSplash\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"ErrorSplash-messageContainer\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"ErrorSplash-paragraph bigger\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }, \"Encountered an error. Please\", \" \", React.createElement(\"button\", {\n          onClick: function onClick() {\n            return window.location.reload();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }, \"reload the page\"), \".\"), React.createElement(\"div\", {\n          className: \"ErrorSplash-paragraph\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        }, \"If reloading doesn't work. Try\", \" \", React.createElement(\"button\", {\n          onClick: function onClick() {\n            localStorage.clear();\n            window.location.reload();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }, \"clearing the canvas\"), \".\", React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"smaller\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          },\n          __self: this\n        }, \"(This will unfortunately result in loss of work.)\")), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"ErrorSplash-paragraph\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116\n          },\n          __self: this\n        }, \"Before doing so, we'd appreciate if you opened an issue on our\", \" \", React.createElement(\"button\", {\n          onClick: this.createGithubIssue,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118\n          },\n          __self: this\n        }, \"bug tracker\"), \". Please include the following error stack trace & localStorage content (provided it's not private):\"), React.createElement(\"div\", {\n          className: \"ErrorSplash-paragraph\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"ErrorSplash-details\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        }, \"Error stack trace:\"), React.createElement(\"textarea\", {\n          rows: 10,\n          onPointerDown: this.selectTextArea,\n          readOnly: true,\n          value: this.state.unresolvedError ? \"Loading data. please wait...\" : this.state.stack,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125\n          },\n          __self: this\n        }), React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135\n          },\n          __self: this\n        }, \"LocalStorage content:\"), React.createElement(\"textarea\", {\n          rows: 5,\n          onPointerDown: this.selectTextArea,\n          readOnly: true,\n          value: this.state.localStorage,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136\n          },\n          __self: this\n        }))))));\n      }\n\n      return this.props.children;\n    }\n  }]);\n\n  return TopErrorBoundary;\n}(React.Component);","map":{"version":3,"sources":["/home/pro/Solutions/drawboard-light/src/components/TopErrorBoundary.tsx"],"names":["React","TopErrorBoundary","state","unresolvedError","hasError","stack","localStorage","error","_localStorage","Object","entries","key","value","JSON","parse","setState","concat","stringify","message","StackTrace","fromError","join","console","event","target","document","activeElement","preventDefault","select","body","templateStr","default","encodeURIComponent","window","open","location","reload","clear","createGithubIssue","selectTextArea","props","children","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\n\ninterface TopErrorBoundaryState {\n  unresolvedError: Error[] | null;\n  hasError: boolean;\n  stack: string;\n  localStorage: string;\n}\n\nexport class TopErrorBoundary extends React.Component<\n  any,\n  TopErrorBoundaryState\n> {\n  state: TopErrorBoundaryState = {\n    unresolvedError: null,\n    hasError: false,\n    stack: \"\",\n    localStorage: \"\",\n  };\n\n  componentDidCatch(error: Error) {\n    const _localStorage: any = {};\n    for (const [key, value] of Object.entries({ ...localStorage })) {\n      try {\n        _localStorage[key] = JSON.parse(value);\n      } catch {\n        _localStorage[key] = value;\n      }\n    }\n    this.setState(state => ({\n      hasError: true,\n      unresolvedError: state.unresolvedError\n        ? state.unresolvedError.concat(error)\n        : [error],\n      localStorage: JSON.stringify(_localStorage),\n    }));\n  }\n\n  async componentDidUpdate() {\n    if (this.state.unresolvedError !== null) {\n      let stack = \"\";\n      for (const error of this.state.unresolvedError) {\n        if (stack) {\n          stack += `\\n\\n================\\n\\n`;\n        }\n        stack += `${error.message}:\\n\\n`;\n        try {\n          const StackTrace = await import(\"stacktrace-js\");\n          stack += (await StackTrace.fromError(error)).join(\"\\n\");\n        } catch (error) {\n          console.error(error);\n          stack += error.stack || \"\";\n        }\n      }\n\n      this.setState(state => ({\n        unresolvedError: null,\n        stack: `${\n          state.stack ? `${state.stack}\\n\\n================\\n\\n${stack}` : stack\n        }`,\n      }));\n    }\n  }\n\n  private selectTextArea(event: React.MouseEvent<HTMLTextAreaElement>) {\n    if (event.target !== document.activeElement) {\n      event.preventDefault();\n      (event.target as HTMLTextAreaElement).select();\n    }\n  }\n\n  private async createGithubIssue() {\n    let body = \"\";\n    try {\n      const templateStr = (await import(\"../bug-issue-template\")).default;\n      if (typeof templateStr === \"string\") {\n        body = encodeURIComponent(templateStr);\n      }\n    } catch (error) {\n      console.error(error);\n    }\n\n    window.open(\n      `https://github.com/excalidraw/excalidraw/issues/new?body=${body}`,\n    );\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return (\n        <div className=\"ErrorSplash\">\n          <div className=\"ErrorSplash-messageContainer\">\n            <div className=\"ErrorSplash-paragraph bigger\">\n              Encountered an error. Please{\" \"}\n              <button onClick={() => window.location.reload()}>\n                reload the page\n              </button>\n              .\n            </div>\n            <div className=\"ErrorSplash-paragraph\">\n              If reloading doesn't work. Try{\" \"}\n              <button\n                onClick={() => {\n                  localStorage.clear();\n                  window.location.reload();\n                }}\n              >\n                clearing the canvas\n              </button>\n              .<br />\n              <div className=\"smaller\">\n                (This will unfortunately result in loss of work.)\n              </div>\n            </div>\n            <div>\n              <div className=\"ErrorSplash-paragraph\">\n                Before doing so, we'd appreciate if you opened an issue on our{\" \"}\n                <button onClick={this.createGithubIssue}>bug tracker</button>.\n                Please include the following error stack trace & localStorage\n                content (provided it's not private):\n              </div>\n              <div className=\"ErrorSplash-paragraph\">\n                <div className=\"ErrorSplash-details\">\n                  <label>Error stack trace:</label>\n                  <textarea\n                    rows={10}\n                    onPointerDown={this.selectTextArea}\n                    readOnly={true}\n                    value={\n                      this.state.unresolvedError\n                        ? \"Loading data. please wait...\"\n                        : this.state.stack\n                    }\n                  />\n                  <label>LocalStorage content:</label>\n                  <textarea\n                    rows={5}\n                    onPointerDown={this.selectTextArea}\n                    readOnly={true}\n                    value={this.state.localStorage}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}