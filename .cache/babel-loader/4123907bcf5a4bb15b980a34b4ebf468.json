{"ast":null,"code":"var _jsxFileName = \"/home/pro/Solutions/drawboard-light/src/components/LayerUI.tsx\";\nimport React from \"react\";\nimport { showSelectedShapeActions } from \"../element\";\nimport { calculateScrollCenter } from \"../scene\";\nimport { exportCanvas } from \"../data\";\nimport { Island } from \"./Island\";\nimport Stack from \"./Stack\";\nimport { FixedSideContainer } from \"./FixedSideContainer\";\nimport { LockIcon } from \"./LockIcon\";\nimport { ExportDialog } from \"./ExportDialog\";\nimport { LanguageList } from \"./LanguageList\";\nimport { t, languages, setLanguage } from \"../i18n\";\nimport { HintViewer } from \"./HintViewer\";\nimport useIsMobile from \"../is-mobile\";\nimport { MobileMenu } from \"./MobileMenu\";\nimport { ZoomActions, SelectedShapeActions, ShapesSwitcher } from \"./Actions\";\nimport { Section } from \"./Section\";\nimport { RoomDialog } from \"./RoomDialog\";\nimport { ErrorDialog } from \"./ErrorDialog\";\nimport { ShortcutsDialog } from \"./ShortcutsDialog\";\nimport { LoadingMessage } from \"./LoadingMessage\";\nimport { GitHubCorner } from \"./GitHubCorner\";\nexport const LayerUI = React.memo(({\n  actionManager,\n  appState,\n  setAppState,\n  canvas,\n  elements,\n  onRoomCreate,\n  onUsernameChange,\n  onRoomDestroy,\n  onLockToggle\n}) => {\n  const isMobile = useIsMobile();\n\n  function renderExportDialog() {\n    const createExporter = type => (exportedElements, scale) => {\n      if (canvas) {\n        exportCanvas(type, exportedElements, appState, canvas, {\n          exportBackground: appState.exportBackground,\n          name: appState.name,\n          viewBackgroundColor: appState.viewBackgroundColor,\n          scale\n        });\n      }\n    };\n\n    return /*#__PURE__*/React.createElement(ExportDialog, {\n      elements: elements,\n      appState: appState,\n      actionManager: actionManager,\n      onExportToPng: createExporter(\"png\"),\n      onExportToSvg: createExporter(\"svg\"),\n      onExportToClipboard: createExporter(\"clipboard\"),\n      onExportToBackend: exportedElements => {\n        if (canvas) {\n          exportCanvas(\"backend\", exportedElements, { ...appState,\n            selectedElementIds: {}\n          }, canvas, appState);\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }\n    });\n  }\n\n  return isMobile ? /*#__PURE__*/React.createElement(MobileMenu, {\n    appState: appState,\n    elements: elements,\n    actionManager: actionManager,\n    exportButton: renderExportDialog(),\n    setAppState: setAppState,\n    onUsernameChange: onUsernameChange,\n    onRoomCreate: onRoomCreate,\n    onRoomDestroy: onRoomDestroy,\n    onLockToggle: onLockToggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null, appState.isLoading && /*#__PURE__*/React.createElement(LoadingMessage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 32\n    }\n  }), appState.errorMessage && /*#__PURE__*/React.createElement(ErrorDialog, {\n    message: appState.errorMessage,\n    onClose: () => setAppState({\n      errorMessage: null\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }), appState.showShortcutsDialog && /*#__PURE__*/React.createElement(ShortcutsDialog, {\n    onClose: () => setAppState({\n      showShortcutsDialog: null\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(FixedSideContainer, {\n    side: \"top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(HintViewer, {\n    appState: appState,\n    elements: elements,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App-menu App-menu_top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Stack.Col, {\n    gap: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Section, {\n    heading: \"canvasActions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Island, {\n    padding: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Stack.Col, {\n    gap: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Stack.Row, {\n    gap: 1,\n    justifyContent: \"space-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 21\n    }\n  }, actionManager.renderAction(\"loadScene\"), actionManager.renderAction(\"saveScene\"), renderExportDialog(), actionManager.renderAction(\"clearCanvas\"), /*#__PURE__*/React.createElement(RoomDialog, {\n    isCollaborating: appState.isCollaborating,\n    collaboratorCount: appState.collaborators.size,\n    username: appState.username,\n    onUsernameChange: onUsernameChange,\n    onRoomCreate: onRoomCreate,\n    onRoomDestroy: onRoomDestroy,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 23\n    }\n  })), actionManager.renderAction(\"changeViewBackgroundColor\")))), showSelectedShapeActions(appState, elements) && /*#__PURE__*/React.createElement(Section, {\n    heading: \"selectedShapeActions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Island, {\n    className: \"App-menu__left\",\n    padding: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(SelectedShapeActions, {\n    appState: appState,\n    elements: elements,\n    renderAction: actionManager.renderAction,\n    elementType: appState.elementType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 21\n    }\n  })))), /*#__PURE__*/React.createElement(Section, {\n    heading: \"shapes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }\n  }, heading => /*#__PURE__*/React.createElement(Stack.Col, {\n    gap: 4,\n    align: \"start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Stack.Row, {\n    gap: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Island, {\n    padding: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 21\n    }\n  }, heading, /*#__PURE__*/React.createElement(Stack.Row, {\n    gap: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(ShapesSwitcher, {\n    elementType: appState.elementType,\n    setAppState: setAppState,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(LockIcon, {\n    checked: appState.elementLocked,\n    onChange: onLockToggle,\n    title: t(\"toolBar.lock\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 21\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App-menu App-menu_bottom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Stack.Col, {\n    gap: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Section, {\n    heading: \"canvasActions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Island, {\n    padding: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ZoomActions, {\n    renderAction: actionManager.renderAction,\n    zoom: appState.zoom,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 19\n    }\n  })))))), /*#__PURE__*/React.createElement(\"aside\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(GitHubCorner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"footer\", {\n    role: \"contentinfo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(LanguageList, {\n    onChange: lng => {\n      setLanguage(lng);\n      setAppState({});\n    },\n    languages: languages,\n    floating: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 11\n    }\n  }), actionManager.renderAction(\"toggleShortcuts\"), appState.scrolledOutside && /*#__PURE__*/React.createElement(\"button\", {\n    className: \"scroll-back-to-content\",\n    onClick: () => {\n      setAppState({ ...calculateScrollCenter(elements)\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 13\n    }\n  }, t(\"buttons.scrollBackToContent\"))));\n}, (prev, next) => {\n  const getNecessaryObj = appState => {\n    const {\n      draggingElement,\n      resizingElement,\n      multiElement,\n      editingElement,\n      isResizing,\n      cursorX,\n      cursorY,\n      ...ret\n    } = appState;\n    return ret;\n  };\n\n  const prevAppState = getNecessaryObj(prev.appState);\n  const nextAppState = getNecessaryObj(next.appState);\n  const keys = Object.keys(prevAppState);\n  return prev.elements === next.elements && keys.every(key => prevAppState[key] === nextAppState[key]);\n});","map":{"version":3,"sources":["/home/pro/Solutions/drawboard-light/src/components/LayerUI.tsx"],"names":["React","showSelectedShapeActions","calculateScrollCenter","exportCanvas","Island","Stack","FixedSideContainer","LockIcon","ExportDialog","LanguageList","t","languages","setLanguage","HintViewer","useIsMobile","MobileMenu","ZoomActions","SelectedShapeActions","ShapesSwitcher","Section","RoomDialog","ErrorDialog","ShortcutsDialog","LoadingMessage","GitHubCorner","LayerUI","memo","actionManager","appState","setAppState","canvas","elements","onRoomCreate","onUsernameChange","onRoomDestroy","onLockToggle","isMobile","renderExportDialog","createExporter","type","exportedElements","scale","exportBackground","name","viewBackgroundColor","selectedElementIds","isLoading","errorMessage","showShortcutsDialog","renderAction","isCollaborating","collaborators","size","username","elementType","heading","elementLocked","zoom","lng","scrolledOutside","prev","next","getNecessaryObj","draggingElement","resizingElement","multiElement","editingElement","isResizing","cursorX","cursorY","ret","prevAppState","nextAppState","keys","Object","every","key"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { showSelectedShapeActions } from \"../element\";\nimport { calculateScrollCenter } from \"../scene\";\nimport { exportCanvas } from \"../data\";\n\nimport { AppState } from \"../types\";\nimport { NonDeletedExcalidrawElement } from \"../element/types\";\n\nimport { ActionManager } from \"../actions/manager\";\nimport { Island } from \"./Island\";\nimport Stack from \"./Stack\";\nimport { FixedSideContainer } from \"./FixedSideContainer\";\nimport { LockIcon } from \"./LockIcon\";\nimport { ExportDialog, ExportCB } from \"./ExportDialog\";\nimport { LanguageList } from \"./LanguageList\";\nimport { t, languages, setLanguage } from \"../i18n\";\nimport { HintViewer } from \"./HintViewer\";\nimport useIsMobile from \"../is-mobile\";\n\nimport { ExportType } from \"../scene/types\";\nimport { MobileMenu } from \"./MobileMenu\";\nimport { ZoomActions, SelectedShapeActions, ShapesSwitcher } from \"./Actions\";\nimport { Section } from \"./Section\";\nimport { RoomDialog } from \"./RoomDialog\";\nimport { ErrorDialog } from \"./ErrorDialog\";\nimport { ShortcutsDialog } from \"./ShortcutsDialog\";\nimport { LoadingMessage } from \"./LoadingMessage\";\nimport { GitHubCorner } from \"./GitHubCorner\";\n\ninterface LayerUIProps {\n  actionManager: ActionManager;\n  appState: AppState;\n  canvas: HTMLCanvasElement | null;\n  setAppState: any;\n  elements: readonly NonDeletedExcalidrawElement[];\n  onRoomCreate: () => void;\n  onUsernameChange: (username: string) => void;\n  onRoomDestroy: () => void;\n  onLockToggle: () => void;\n}\n\nexport const LayerUI = React.memo(\n  ({\n    actionManager,\n    appState,\n    setAppState,\n    canvas,\n    elements,\n    onRoomCreate,\n    onUsernameChange,\n    onRoomDestroy,\n    onLockToggle,\n  }: LayerUIProps) => {\n    const isMobile = useIsMobile();\n\n    function renderExportDialog() {\n      const createExporter = (type: ExportType): ExportCB => (\n        exportedElements,\n        scale,\n      ) => {\n        if (canvas) {\n          exportCanvas(type, exportedElements, appState, canvas, {\n            exportBackground: appState.exportBackground,\n            name: appState.name,\n            viewBackgroundColor: appState.viewBackgroundColor,\n            scale,\n          });\n        }\n      };\n      return (\n        <ExportDialog\n          elements={elements}\n          appState={appState}\n          actionManager={actionManager}\n          onExportToPng={createExporter(\"png\")}\n          onExportToSvg={createExporter(\"svg\")}\n          onExportToClipboard={createExporter(\"clipboard\")}\n          onExportToBackend={(exportedElements) => {\n            if (canvas) {\n              exportCanvas(\n                \"backend\",\n                exportedElements,\n                {\n                  ...appState,\n                  selectedElementIds: {},\n                },\n                canvas,\n                appState,\n              );\n            }\n          }}\n        />\n      );\n    }\n\n    return isMobile ? (\n      <MobileMenu\n        appState={appState}\n        elements={elements}\n        actionManager={actionManager}\n        exportButton={renderExportDialog()}\n        setAppState={setAppState}\n        onUsernameChange={onUsernameChange}\n        onRoomCreate={onRoomCreate}\n        onRoomDestroy={onRoomDestroy}\n        onLockToggle={onLockToggle}\n      />\n    ) : (\n      <>\n        {appState.isLoading && <LoadingMessage />}\n        {appState.errorMessage && (\n          <ErrorDialog\n            message={appState.errorMessage}\n            onClose={() => setAppState({ errorMessage: null })}\n          />\n        )}\n        {appState.showShortcutsDialog && (\n          <ShortcutsDialog\n            onClose={() => setAppState({ showShortcutsDialog: null })}\n          />\n        )}\n        <FixedSideContainer side=\"top\">\n          <HintViewer appState={appState} elements={elements} />\n          <div className=\"App-menu App-menu_top\">\n            <Stack.Col gap={4}>\n              <Section heading=\"canvasActions\">\n                <Island padding={4}>\n                  <Stack.Col gap={4}>\n                    <Stack.Row gap={1} justifyContent={\"space-between\"}>\n                      {actionManager.renderAction(\"loadScene\")}\n                      {actionManager.renderAction(\"saveScene\")}\n                      {renderExportDialog()}\n                      {actionManager.renderAction(\"clearCanvas\")}\n                      <RoomDialog\n                        isCollaborating={appState.isCollaborating}\n                        collaboratorCount={appState.collaborators.size}\n                        username={appState.username}\n                        onUsernameChange={onUsernameChange}\n                        onRoomCreate={onRoomCreate}\n                        onRoomDestroy={onRoomDestroy}\n                      />\n                    </Stack.Row>\n                    {actionManager.renderAction(\"changeViewBackgroundColor\")}\n                  </Stack.Col>\n                </Island>\n              </Section>\n              {showSelectedShapeActions(appState, elements) && (\n                <Section heading=\"selectedShapeActions\">\n                  <Island className=\"App-menu__left\" padding={4}>\n                    <SelectedShapeActions\n                      appState={appState}\n                      elements={elements}\n                      renderAction={actionManager.renderAction}\n                      elementType={appState.elementType}\n                    />\n                  </Island>\n                </Section>\n              )}\n            </Stack.Col>\n            <Section heading=\"shapes\">\n              {(heading) => (\n                <Stack.Col gap={4} align=\"start\">\n                  <Stack.Row gap={1}>\n                    <Island padding={1}>\n                      {heading}\n                      <Stack.Row gap={1}>\n                        <ShapesSwitcher\n                          elementType={appState.elementType}\n                          setAppState={setAppState}\n                        />\n                      </Stack.Row>\n                    </Island>\n                    <LockIcon\n                      checked={appState.elementLocked}\n                      onChange={onLockToggle}\n                      title={t(\"toolBar.lock\")}\n                    />\n                  </Stack.Row>\n                </Stack.Col>\n              )}\n            </Section>\n            <div />\n          </div>\n          <div className=\"App-menu App-menu_bottom\">\n            <Stack.Col gap={2}>\n              <Section heading=\"canvasActions\">\n                <Island padding={1}>\n                  <ZoomActions\n                    renderAction={actionManager.renderAction}\n                    zoom={appState.zoom}\n                  />\n                </Island>\n              </Section>\n            </Stack.Col>\n          </div>\n        </FixedSideContainer>\n        <aside>\n          <GitHubCorner />\n        </aside>\n        <footer role=\"contentinfo\">\n          <LanguageList\n            onChange={(lng) => {\n              setLanguage(lng);\n              setAppState({});\n            }}\n            languages={languages}\n            floating\n          />\n          {actionManager.renderAction(\"toggleShortcuts\")}\n          {appState.scrolledOutside && (\n            <button\n              className=\"scroll-back-to-content\"\n              onClick={() => {\n                setAppState({ ...calculateScrollCenter(elements) });\n              }}\n            >\n              {t(\"buttons.scrollBackToContent\")}\n            </button>\n          )}\n        </footer>\n      </>\n    );\n  },\n  (prev, next) => {\n    const getNecessaryObj = (appState: AppState): Partial<AppState> => {\n      const {\n        draggingElement,\n        resizingElement,\n        multiElement,\n        editingElement,\n        isResizing,\n        cursorX,\n        cursorY,\n        ...ret\n      } = appState;\n      return ret;\n    };\n    const prevAppState = getNecessaryObj(prev.appState);\n    const nextAppState = getNecessaryObj(next.appState);\n\n    const keys = Object.keys(prevAppState) as (keyof Partial<AppState>)[];\n\n    return (\n      prev.elements === next.elements &&\n      keys.every((key) => prevAppState[key] === nextAppState[key])\n    );\n  },\n);\n"]},"metadata":{},"sourceType":"module"}