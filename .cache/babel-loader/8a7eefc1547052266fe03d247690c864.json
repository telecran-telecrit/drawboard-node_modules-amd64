{"ast":null,"code":"// @license © 2020 Google LLC. Licensed under the Apache License, Version 2.0.\nexport default (async (e = {}) => {\n  try {\n    const t = await window.chooseFileSystemEntries({\n      accepts: [{\n        description: e.description || \"\",\n        mimeTypes: e.mimeTypes || [\"*/*\"],\n        extensions: e.extensions || [\"\"]\n      }],\n      multiple: e.multiple || !1\n    });\n\n    if (e.multiple) {\n      const e = [];\n\n      for (const i of t) {\n        const t = await i.getFile();\n        t.handle = i, e.push(t);\n      }\n\n      return e;\n    }\n\n    const i = await t.getFile();\n    return i.handle = t, i;\n  } catch (e) {\n    throw e;\n  }\n});","map":{"version":3,"sources":["/home/pro/Solutions/drawboard-light/node_modules/browser-nativefs/dist/file-open-nativefs.mjs"],"names":["e","t","window","chooseFileSystemEntries","accepts","description","mimeTypes","extensions","multiple","i","getFile","handle","push"],"mappings":"AAAA;AACA,gBAAe,OAAMA,CAAC,GAAC,EAAR,KAAa;AAAC,MAAG;AAAC,UAAMC,CAAC,GAAC,MAAMC,MAAM,CAACC,uBAAP,CAA+B;AAACC,MAAAA,OAAO,EAAC,CAAC;AAACC,QAAAA,WAAW,EAACL,CAAC,CAACK,WAAF,IAAe,EAA5B;AAA+BC,QAAAA,SAAS,EAACN,CAAC,CAACM,SAAF,IAAa,CAAC,KAAD,CAAtD;AAA8DC,QAAAA,UAAU,EAACP,CAAC,CAACO,UAAF,IAAc,CAAC,EAAD;AAAvF,OAAD,CAAT;AAAwGC,MAAAA,QAAQ,EAACR,CAAC,CAACQ,QAAF,IAAY,CAAC;AAA9H,KAA/B,CAAd;;AAA+K,QAAGR,CAAC,CAACQ,QAAL,EAAc;AAAC,YAAMR,CAAC,GAAC,EAAR;;AAAW,WAAI,MAAMS,CAAV,IAAeR,CAAf,EAAiB;AAAC,cAAMA,CAAC,GAAC,MAAMQ,CAAC,CAACC,OAAF,EAAd;AAA0BT,QAAAA,CAAC,CAACU,MAAF,GAASF,CAAT,EAAWT,CAAC,CAACY,IAAF,CAAOX,CAAP,CAAX;AAAqB;;AAAA,aAAOD,CAAP;AAAS;;AAAA,UAAMS,CAAC,GAAC,MAAMR,CAAC,CAACS,OAAF,EAAd;AAA0B,WAAOD,CAAC,CAACE,MAAF,GAASV,CAAT,EAAWQ,CAAlB;AAAoB,GAArU,CAAqU,OAAMT,CAAN,EAAQ;AAAC,UAAMA,CAAN;AAAQ;AAAC,CAApX","sourcesContent":["// @license © 2020 Google LLC. Licensed under the Apache License, Version 2.0.\nexport default async(e={})=>{try{const t=await window.chooseFileSystemEntries({accepts:[{description:e.description||\"\",mimeTypes:e.mimeTypes||[\"*/*\"],extensions:e.extensions||[\"\"]}],multiple:e.multiple||!1});if(e.multiple){const e=[];for(const i of t){const t=await i.getFile();t.handle=i,e.push(t)}return e}const i=await t.getFile();return i.handle=t,i}catch(e){throw e}};"]},"metadata":{},"sourceType":"module"}