{"ast":null,"code":"import { clearAppStateForLocalStorage } from \"../appState\";\nimport { restore } from \"./restore\";\nconst LOCAL_STORAGE_KEY = \"excalidraw\";\nconst LOCAL_STORAGE_KEY_STATE = \"excalidraw-state\";\nconst LOCAL_STORAGE_KEY_COLLAB = \"excalidraw-collab\";\nexport function saveUsernameToLocalStorage(username) {\n  try {\n    localStorage.setItem(LOCAL_STORAGE_KEY_COLLAB, JSON.stringify({\n      username\n    }));\n  } catch (error) {\n    // Unable to access window.localStorage\n    console.error(error);\n  }\n}\nexport function restoreUsernameFromLocalStorage() {\n  try {\n    const data = localStorage.getItem(LOCAL_STORAGE_KEY_COLLAB);\n\n    if (data) {\n      return JSON.parse(data).username;\n    }\n  } catch (error) {\n    // Unable to access localStorage\n    console.error(error);\n  }\n\n  return null;\n}\nexport function saveToLocalStorage(elements, appState) {\n  try {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(elements.filter(element => !element.isDeleted)));\n    localStorage.setItem(LOCAL_STORAGE_KEY_STATE, JSON.stringify(clearAppStateForLocalStorage(appState)));\n  } catch (error) {\n    // Unable to access window.localStorage\n    console.error(error);\n  }\n}\nexport function restoreFromLocalStorage() {\n  let savedElements = null;\n  let savedState = null;\n\n  try {\n    savedElements = localStorage.getItem(LOCAL_STORAGE_KEY);\n    savedState = localStorage.getItem(LOCAL_STORAGE_KEY_STATE);\n  } catch (error) {\n    // Unable to access localStorage\n    console.error(error);\n  }\n\n  let elements = [];\n\n  if (savedElements) {\n    try {\n      elements = JSON.parse(savedElements);\n    } catch {// Do nothing because elements array is already empty\n    }\n  }\n\n  let appState = null;\n\n  if (savedState) {\n    try {\n      appState = JSON.parse(savedState); // If we're retrieving from local storage, we should not be collaborating\n\n      appState.isCollaborating = false;\n      appState.collaborators = new Map();\n    } catch {// Do nothing because appState is already null\n    }\n  }\n\n  return restore(elements, appState);\n}","map":{"version":3,"sources":["/home/pro/Solutions/drawboard-light/src/data/localStorage.ts"],"names":["clearAppStateForLocalStorage","restore","LOCAL_STORAGE_KEY","LOCAL_STORAGE_KEY_STATE","LOCAL_STORAGE_KEY_COLLAB","saveUsernameToLocalStorage","username","localStorage","setItem","JSON","stringify","error","console","restoreUsernameFromLocalStorage","data","getItem","parse","saveToLocalStorage","elements","appState","filter","element","isDeleted","restoreFromLocalStorage","savedElements","savedState","isCollaborating","collaborators","Map"],"mappings":"AAEA,SAASA,4BAAT,QAA6C,aAA7C;AACA,SAASC,OAAT,QAAwB,WAAxB;AAEA,MAAMC,iBAAiB,GAAG,YAA1B;AACA,MAAMC,uBAAuB,GAAG,kBAAhC;AACA,MAAMC,wBAAwB,GAAG,mBAAjC;AAEA,OAAO,SAASC,0BAAT,CAAoCC,QAApC,EAAsD;AAC3D,MAAI;AACFC,IAAAA,YAAY,CAACC,OAAb,CACEJ,wBADF,EAEEK,IAAI,CAACC,SAAL,CAAe;AAAEJ,MAAAA;AAAF,KAAf,CAFF;AAID,GALD,CAKE,OAAOK,KAAP,EAAc;AACd;AACAC,IAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACD;AACF;AAED,OAAO,SAASE,+BAAT,GAA0D;AAC/D,MAAI;AACF,UAAMC,IAAI,GAAGP,YAAY,CAACQ,OAAb,CAAqBX,wBAArB,CAAb;;AACA,QAAIU,IAAJ,EAAU;AACR,aAAOL,IAAI,CAACO,KAAL,CAAWF,IAAX,EAAiBR,QAAxB;AACD;AACF,GALD,CAKE,OAAOK,KAAP,EAAc;AACd;AACAC,IAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACD;;AAED,SAAO,IAAP;AACD;AAED,OAAO,SAASM,kBAAT,CACLC,QADK,EAELC,QAFK,EAGL;AACA,MAAI;AACFZ,IAAAA,YAAY,CAACC,OAAb,CACEN,iBADF,EAEEO,IAAI,CAACC,SAAL,CAAeQ,QAAQ,CAACE,MAAT,CAAiBC,OAAD,IAAa,CAACA,OAAO,CAACC,SAAtC,CAAf,CAFF;AAIAf,IAAAA,YAAY,CAACC,OAAb,CACEL,uBADF,EAEEM,IAAI,CAACC,SAAL,CAAeV,4BAA4B,CAACmB,QAAD,CAA3C,CAFF;AAID,GATD,CASE,OAAOR,KAAP,EAAc;AACd;AACAC,IAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACD;AACF;AAED,OAAO,SAASY,uBAAT,GAAmC;AACxC,MAAIC,aAAa,GAAG,IAApB;AACA,MAAIC,UAAU,GAAG,IAAjB;;AAEA,MAAI;AACFD,IAAAA,aAAa,GAAGjB,YAAY,CAACQ,OAAb,CAAqBb,iBAArB,CAAhB;AACAuB,IAAAA,UAAU,GAAGlB,YAAY,CAACQ,OAAb,CAAqBZ,uBAArB,CAAb;AACD,GAHD,CAGE,OAAOQ,KAAP,EAAc;AACd;AACAC,IAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACD;;AAED,MAAIO,QAAQ,GAAG,EAAf;;AACA,MAAIM,aAAJ,EAAmB;AACjB,QAAI;AACFN,MAAAA,QAAQ,GAAGT,IAAI,CAACO,KAAL,CAAWQ,aAAX,CAAX;AACD,KAFD,CAEE,MAAM,CACN;AACD;AACF;;AAED,MAAIL,QAAQ,GAAG,IAAf;;AACA,MAAIM,UAAJ,EAAgB;AACd,QAAI;AACFN,MAAAA,QAAQ,GAAGV,IAAI,CAACO,KAAL,CAAWS,UAAX,CAAX,CADE,CAEF;;AACAN,MAAAA,QAAQ,CAACO,eAAT,GAA2B,KAA3B;AACAP,MAAAA,QAAQ,CAACQ,aAAT,GAAyB,IAAIC,GAAJ,EAAzB;AACD,KALD,CAKE,MAAM,CACN;AACD;AACF;;AAED,SAAO3B,OAAO,CAACiB,QAAD,EAAWC,QAAX,CAAd;AACD","sourcesContent":["import { ExcalidrawElement } from \"../element/types\";\nimport { AppState } from \"../types\";\nimport { clearAppStateForLocalStorage } from \"../appState\";\nimport { restore } from \"./restore\";\n\nconst LOCAL_STORAGE_KEY = \"excalidraw\";\nconst LOCAL_STORAGE_KEY_STATE = \"excalidraw-state\";\nconst LOCAL_STORAGE_KEY_COLLAB = \"excalidraw-collab\";\n\nexport function saveUsernameToLocalStorage(username: string) {\n  try {\n    localStorage.setItem(\n      LOCAL_STORAGE_KEY_COLLAB,\n      JSON.stringify({ username }),\n    );\n  } catch (error) {\n    // Unable to access window.localStorage\n    console.error(error);\n  }\n}\n\nexport function restoreUsernameFromLocalStorage(): string | null {\n  try {\n    const data = localStorage.getItem(LOCAL_STORAGE_KEY_COLLAB);\n    if (data) {\n      return JSON.parse(data).username;\n    }\n  } catch (error) {\n    // Unable to access localStorage\n    console.error(error);\n  }\n\n  return null;\n}\n\nexport function saveToLocalStorage(\n  elements: readonly ExcalidrawElement[],\n  appState: AppState,\n) {\n  try {\n    localStorage.setItem(\n      LOCAL_STORAGE_KEY,\n      JSON.stringify(elements.filter((element) => !element.isDeleted)),\n    );\n    localStorage.setItem(\n      LOCAL_STORAGE_KEY_STATE,\n      JSON.stringify(clearAppStateForLocalStorage(appState)),\n    );\n  } catch (error) {\n    // Unable to access window.localStorage\n    console.error(error);\n  }\n}\n\nexport function restoreFromLocalStorage() {\n  let savedElements = null;\n  let savedState = null;\n\n  try {\n    savedElements = localStorage.getItem(LOCAL_STORAGE_KEY);\n    savedState = localStorage.getItem(LOCAL_STORAGE_KEY_STATE);\n  } catch (error) {\n    // Unable to access localStorage\n    console.error(error);\n  }\n\n  let elements = [];\n  if (savedElements) {\n    try {\n      elements = JSON.parse(savedElements);\n    } catch {\n      // Do nothing because elements array is already empty\n    }\n  }\n\n  let appState = null;\n  if (savedState) {\n    try {\n      appState = JSON.parse(savedState) as AppState;\n      // If we're retrieving from local storage, we should not be collaborating\n      appState.isCollaborating = false;\n      appState.collaborators = new Map();\n    } catch {\n      // Do nothing because appState is already null\n    }\n  }\n\n  return restore(elements, appState);\n}\n"]},"metadata":{},"sourceType":"module"}