{"ast":null,"code":"var _jsxFileName = \"/home/pro/Solutions/drawboard-light/src/components/ErrorDialog.tsx\";\nimport React, { useState } from \"react\";\nimport { t } from \"../i18n\";\nimport { Dialog } from \"./Dialog\";\nexport function ErrorDialog({\n  message,\n  onClose\n}) {\n  const [modalIsShown, setModalIsShown] = useState(!!message);\n  const handleClose = React.useCallback(() => {\n    setModalIsShown(false);\n\n    if (onClose) {\n      onClose();\n    }\n  }, [onClose]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, modalIsShown && /*#__PURE__*/React.createElement(Dialog, {\n    maxWidth: 500,\n    onCloseRequest: handleClose,\n    title: t(\"errorDialog.title\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }, message)));\n}","map":{"version":3,"sources":["/home/pro/Solutions/drawboard-light/src/components/ErrorDialog.tsx"],"names":["React","useState","t","Dialog","ErrorDialog","message","onClose","modalIsShown","setModalIsShown","handleClose","useCallback"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,CAAT,QAAkB,SAAlB;AAEA,SAASC,MAAT,QAAuB,UAAvB;AAEA,OAAO,SAASC,WAAT,CAAqB;AAC1BC,EAAAA,OAD0B;AAE1BC,EAAAA;AAF0B,CAArB,EAMJ;AACD,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,CAAC,CAACI,OAAH,CAAhD;AAEA,QAAMI,WAAW,GAAGT,KAAK,CAACU,WAAN,CAAkB,MAAM;AAC1CF,IAAAA,eAAe,CAAC,KAAD,CAAf;;AAEA,QAAIF,OAAJ,EAAa;AACXA,MAAAA,OAAO;AACR;AACF,GANmB,EAMjB,CAACA,OAAD,CANiB,CAApB;AAQA,sBACE,0CACGC,YAAY,iBACX,oBAAC,MAAD;AACE,IAAA,QAAQ,EAAE,GADZ;AAEE,IAAA,cAAc,EAAEE,WAFlB;AAGE,IAAA,KAAK,EAAEP,CAAC,CAAC,mBAAD,CAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMG,OAAN,CALF,CAFJ,CADF;AAaD","sourcesContent":["import React, { useState } from \"react\";\nimport { t } from \"../i18n\";\n\nimport { Dialog } from \"./Dialog\";\n\nexport function ErrorDialog({\n  message,\n  onClose,\n}: {\n  message: string;\n  onClose?: () => void;\n}) {\n  const [modalIsShown, setModalIsShown] = useState(!!message);\n\n  const handleClose = React.useCallback(() => {\n    setModalIsShown(false);\n\n    if (onClose) {\n      onClose();\n    }\n  }, [onClose]);\n\n  return (\n    <>\n      {modalIsShown && (\n        <Dialog\n          maxWidth={500}\n          onCloseRequest={handleClose}\n          title={t(\"errorDialog.title\")}\n        >\n          <div>{message}</div>\n        </Dialog>\n      )}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}