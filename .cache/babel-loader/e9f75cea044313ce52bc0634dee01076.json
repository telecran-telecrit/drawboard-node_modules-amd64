{"ast":null,"code":"import _objectSpread from \"/home/pro/Solutions/drawboard-light/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/home/pro/Solutions/drawboard-light/src/actions/actionDeleteSelected.tsx\";\nimport { deleteSelectedElements, isSomeElementSelected } from \"../scene\";\nimport { KEYS } from \"../keys\";\nimport { ToolButton } from \"../components/ToolButton\";\nimport React from \"react\";\nimport { trash } from \"../components/icons\";\nimport { t } from \"../i18n\";\nimport { register } from \"./register\";\nexport var actionDeleteSelected = register({\n  name: \"deleteSelectedElements\",\n  perform: function perform(elements, appState) {\n    var _deleteSelectedElemen = deleteSelectedElements(elements, appState),\n        nextElements = _deleteSelectedElemen.elements,\n        nextAppState = _deleteSelectedElemen.appState;\n\n    return {\n      elements: nextElements,\n      appState: _objectSpread({}, nextAppState, {\n        elementType: \"selection\",\n        multiElement: null\n      })\n    };\n  },\n  contextItemLabel: \"labels.delete\",\n  contextMenuOrder: 3,\n  commitToHistory: function commitToHistory(appState, elements) {\n    return isSomeElementSelected(elements, appState);\n  },\n  keyTest: function keyTest(event) {\n    return event.key === KEYS.BACKSPACE || event.key === KEYS.DELETE;\n  },\n  PanelComponent: function PanelComponent(_ref) {\n    var elements = _ref.elements,\n        appState = _ref.appState,\n        updateData = _ref.updateData;\n    return React.createElement(ToolButton, {\n      type: \"button\",\n      icon: trash,\n      title: t(\"labels.delete\"),\n      \"aria-label\": t(\"labels.delete\"),\n      onClick: function onClick() {\n        return updateData(null);\n      },\n      visible: isSomeElementSelected(elements, appState),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    });\n  }\n});","map":{"version":3,"sources":["/home/pro/Solutions/drawboard-light/src/actions/actionDeleteSelected.tsx"],"names":["deleteSelectedElements","isSomeElementSelected","KEYS","ToolButton","React","trash","t","register","actionDeleteSelected","name","perform","elements","appState","nextElements","nextAppState","elementType","multiElement","contextItemLabel","contextMenuOrder","commitToHistory","keyTest","event","key","BACKSPACE","DELETE","PanelComponent","updateData"],"mappings":";;AAAA,SAASA,sBAAT,EAAiCC,qBAAjC,QAA8D,UAA9D;AACA,SAASC,IAAT,QAAqB,SAArB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,qBAAtB;AACA,SAASC,CAAT,QAAkB,SAAlB;AACA,SAASC,QAAT,QAAyB,YAAzB;AAEA,OAAO,IAAMC,oBAAoB,GAAGD,QAAQ,CAAC;AAC3CE,EAAAA,IAAI,EAAE,wBADqC;AAE3CC,EAAAA,OAAO,EAAE,iBAACC,QAAD,EAAWC,QAAX,EAAwB;AAAA,gCAI3BZ,sBAAsB,CAACW,QAAD,EAAWC,QAAX,CAJK;AAAA,QAEnBC,YAFmB,yBAE7BF,QAF6B;AAAA,QAGnBG,YAHmB,yBAG7BF,QAH6B;;AAK/B,WAAO;AACLD,MAAAA,QAAQ,EAAEE,YADL;AAELD,MAAAA,QAAQ,oBACHE,YADG;AAENC,QAAAA,WAAW,EAAE,WAFP;AAGNC,QAAAA,YAAY,EAAE;AAHR;AAFH,KAAP;AAQD,GAf0C;AAgB3CC,EAAAA,gBAAgB,EAAE,eAhByB;AAiB3CC,EAAAA,gBAAgB,EAAE,CAjByB;AAkB3CC,EAAAA,eAAe,EAAE,yBAACP,QAAD,EAAWD,QAAX;AAAA,WACfV,qBAAqB,CAACU,QAAD,EAAWC,QAAX,CADN;AAAA,GAlB0B;AAoB3CQ,EAAAA,OAAO,EAAE,iBAAAC,KAAK;AAAA,WAAIA,KAAK,CAACC,GAAN,KAAcpB,IAAI,CAACqB,SAAnB,IAAgCF,KAAK,CAACC,GAAN,KAAcpB,IAAI,CAACsB,MAAvD;AAAA,GApB6B;AAqB3CC,EAAAA,cAAc,EAAE;AAAA,QAAGd,QAAH,QAAGA,QAAH;AAAA,QAAaC,QAAb,QAAaA,QAAb;AAAA,QAAuBc,UAAvB,QAAuBA,UAAvB;AAAA,WACd,oBAAC,UAAD;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,IAAI,EAAErB,KAFR;AAGE,MAAA,KAAK,EAAEC,CAAC,CAAC,eAAD,CAHV;AAIE,oBAAYA,CAAC,CAAC,eAAD,CAJf;AAKE,MAAA,OAAO,EAAE;AAAA,eAAMoB,UAAU,CAAC,IAAD,CAAhB;AAAA,OALX;AAME,MAAA,OAAO,EAAEzB,qBAAqB,CAACU,QAAD,EAAWC,QAAX,CANhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADc;AAAA;AArB2B,CAAD,CAArC","sourcesContent":["import { deleteSelectedElements, isSomeElementSelected } from \"../scene\";\nimport { KEYS } from \"../keys\";\nimport { ToolButton } from \"../components/ToolButton\";\nimport React from \"react\";\nimport { trash } from \"../components/icons\";\nimport { t } from \"../i18n\";\nimport { register } from \"./register\";\n\nexport const actionDeleteSelected = register({\n  name: \"deleteSelectedElements\",\n  perform: (elements, appState) => {\n    const {\n      elements: nextElements,\n      appState: nextAppState,\n    } = deleteSelectedElements(elements, appState);\n    return {\n      elements: nextElements,\n      appState: {\n        ...nextAppState,\n        elementType: \"selection\",\n        multiElement: null,\n      },\n    };\n  },\n  contextItemLabel: \"labels.delete\",\n  contextMenuOrder: 3,\n  commitToHistory: (appState, elements) =>\n    isSomeElementSelected(elements, appState),\n  keyTest: event => event.key === KEYS.BACKSPACE || event.key === KEYS.DELETE,\n  PanelComponent: ({ elements, appState, updateData }) => (\n    <ToolButton\n      type=\"button\"\n      icon={trash}\n      title={t(\"labels.delete\")}\n      aria-label={t(\"labels.delete\")}\n      onClick={() => updateData(null)}\n      visible={isSomeElementSelected(elements, appState)}\n    />\n  ),\n});\n"]},"metadata":{},"sourceType":"module"}