{"ast":null,"code":"var _jsxFileName = \"/home/pro/Solutions/drawboard-light/src/components/ToolButton.tsx\";\nimport \"./ToolIcon.scss\";\nimport React from \"react\";\nconst DEFAULT_SIZE = \"m\";\nexport const ToolButton = React.forwardRef(function (props, ref) {\n  const innerRef = React.useRef(null);\n  React.useImperativeHandle(ref, () => innerRef.current);\n  const sizeCn = `ToolIcon_size_${props.size || DEFAULT_SIZE}`;\n\n  if (props.type === \"button\") {\n    return /*#__PURE__*/React.createElement(\"button\", {\n      className: `ToolIcon_type_button ToolIcon ${sizeCn}${props.selected ? \" ToolIcon--selected\" : \"\"} ${props.className || \"\"}`,\n      title: props.title,\n      \"aria-label\": props[\"aria-label\"],\n      type: \"button\",\n      onClick: props.onClick,\n      ref: innerRef,\n      style: {\n        visibility: props.visible || props.visible == null ? \"visible\" : \"hidden\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ToolIcon__icon\",\n      \"aria-hidden\": \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }, props.icon || props.label), props.showAriaLabel && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ToolIcon__label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }\n    }, props[\"aria-label\"]), props.children);\n  }\n\n  return /*#__PURE__*/React.createElement(\"label\", {\n    className: \"ToolIcon\",\n    title: props.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: `ToolIcon_type_radio ${sizeCn}`,\n    type: \"radio\",\n    name: props.name,\n    \"aria-label\": props[\"aria-label\"],\n    \"aria-keyshortcuts\": props[\"aria-keyshortcuts\"],\n    \"data-testid\": props[\"data-testid\"],\n    id: props.id,\n    onChange: props.onChange,\n    checked: props.checked,\n    ref: innerRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ToolIcon__icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, props.icon, props.keyBindingLabel && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"ToolIcon__keybinding\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, props.keyBindingLabel)));\n});","map":{"version":3,"sources":["/home/pro/Solutions/drawboard-light/src/components/ToolButton.tsx"],"names":["React","DEFAULT_SIZE","ToolButton","forwardRef","props","ref","innerRef","useRef","useImperativeHandle","current","sizeCn","size","type","selected","className","title","onClick","visibility","visible","icon","label","showAriaLabel","children","name","id","onChange","checked","keyBindingLabel"],"mappings":";AAAA,OAAO,iBAAP;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AAkCA,MAAMC,YAA0B,GAAG,GAAnC;AAEA,OAAO,MAAMC,UAAU,GAAGF,KAAK,CAACG,UAAN,CAAiB,UACzCC,KADyC,EAEzCC,GAFyC,EAGzC;AACA,QAAMC,QAAQ,GAAGN,KAAK,CAACO,MAAN,CAAa,IAAb,CAAjB;AACAP,EAAAA,KAAK,CAACQ,mBAAN,CAA0BH,GAA1B,EAA+B,MAAMC,QAAQ,CAACG,OAA9C;AACA,QAAMC,MAAM,GAAI,iBAAgBN,KAAK,CAACO,IAAN,IAAcV,YAAa,EAA3D;;AAEA,MAAIG,KAAK,CAACQ,IAAN,KAAe,QAAnB,EAA6B;AAC3B,wBACE;AACE,MAAA,SAAS,EAAG,iCAAgCF,MAAO,GACjDN,KAAK,CAACS,QAAN,GAAiB,qBAAjB,GAAyC,EAC1C,IAAGT,KAAK,CAACU,SAAN,IAAmB,EAAG,EAH5B;AAIE,MAAA,KAAK,EAAEV,KAAK,CAACW,KAJf;AAKE,oBAAYX,KAAK,CAAC,YAAD,CALnB;AAME,MAAA,IAAI,EAAC,QANP;AAOE,MAAA,OAAO,EAAEA,KAAK,CAACY,OAPjB;AAQE,MAAA,GAAG,EAAEV,QARP;AASE,MAAA,KAAK,EAAE;AACLW,QAAAA,UAAU,EACRb,KAAK,CAACc,OAAN,IAAiBd,KAAK,CAACc,OAAN,IAAiB,IAAlC,GAAyC,SAAzC,GAAqD;AAFlD,OATT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAcE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAgC,qBAAY,MAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGd,KAAK,CAACe,IAAN,IAAcf,KAAK,CAACgB,KADvB,CAdF,EAiBGhB,KAAK,CAACiB,aAAN,iBACC;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkCjB,KAAK,CAAC,YAAD,CAAvC,CAlBJ,EAoBGA,KAAK,CAACkB,QApBT,CADF;AAwBD;;AAED,sBACE;AAAO,IAAA,SAAS,EAAC,UAAjB;AAA4B,IAAA,KAAK,EAAElB,KAAK,CAACW,KAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,SAAS,EAAG,uBAAsBL,MAAO,EAD3C;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,IAAI,EAAEN,KAAK,CAACmB,IAHd;AAIE,kBAAYnB,KAAK,CAAC,YAAD,CAJnB;AAKE,yBAAmBA,KAAK,CAAC,mBAAD,CAL1B;AAME,mBAAaA,KAAK,CAAC,aAAD,CANpB;AAOE,IAAA,EAAE,EAAEA,KAAK,CAACoB,EAPZ;AAQE,IAAA,QAAQ,EAAEpB,KAAK,CAACqB,QARlB;AASE,IAAA,OAAO,EAAErB,KAAK,CAACsB,OATjB;AAUE,IAAA,GAAG,EAAEpB,QAVP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAaE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,KAAK,CAACe,IADT,EAEGf,KAAK,CAACuB,eAAN,iBACC;AAAM,IAAA,SAAS,EAAC,sBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwCvB,KAAK,CAACuB,eAA9C,CAHJ,CAbF,CADF;AAsBD,CAzDyB,CAAnB","sourcesContent":["import \"./ToolIcon.scss\";\n\nimport React from \"react\";\n\ntype ToolIconSize = \"s\" | \"m\";\n\ntype ToolButtonBaseProps = {\n  icon?: React.ReactNode;\n  \"aria-label\": string;\n  \"aria-keyshortcuts\"?: string;\n  \"data-testid\"?: string;\n  label?: string;\n  title?: string;\n  name?: string;\n  id?: string;\n  size?: ToolIconSize;\n  keyBindingLabel?: string;\n  showAriaLabel?: boolean;\n  visible?: boolean;\n  selected?: boolean;\n  className?: string;\n};\n\ntype ToolButtonProps =\n  | (ToolButtonBaseProps & {\n      type: \"button\";\n      children?: React.ReactNode;\n      onClick?(): void;\n    })\n  | (ToolButtonBaseProps & {\n      type: \"radio\";\n\n      checked: boolean;\n      onChange?(): void;\n    });\n\nconst DEFAULT_SIZE: ToolIconSize = \"m\";\n\nexport const ToolButton = React.forwardRef(function (\n  props: ToolButtonProps,\n  ref,\n) {\n  const innerRef = React.useRef(null);\n  React.useImperativeHandle(ref, () => innerRef.current);\n  const sizeCn = `ToolIcon_size_${props.size || DEFAULT_SIZE}`;\n\n  if (props.type === \"button\") {\n    return (\n      <button\n        className={`ToolIcon_type_button ToolIcon ${sizeCn}${\n          props.selected ? \" ToolIcon--selected\" : \"\"\n        } ${props.className || \"\"}`}\n        title={props.title}\n        aria-label={props[\"aria-label\"]}\n        type=\"button\"\n        onClick={props.onClick}\n        ref={innerRef}\n        style={{\n          visibility:\n            props.visible || props.visible == null ? \"visible\" : \"hidden\",\n        }}\n      >\n        <div className=\"ToolIcon__icon\" aria-hidden=\"true\">\n          {props.icon || props.label}\n        </div>\n        {props.showAriaLabel && (\n          <div className=\"ToolIcon__label\">{props[\"aria-label\"]}</div>\n        )}\n        {props.children}\n      </button>\n    );\n  }\n\n  return (\n    <label className=\"ToolIcon\" title={props.title}>\n      <input\n        className={`ToolIcon_type_radio ${sizeCn}`}\n        type=\"radio\"\n        name={props.name}\n        aria-label={props[\"aria-label\"]}\n        aria-keyshortcuts={props[\"aria-keyshortcuts\"]}\n        data-testid={props[\"data-testid\"]}\n        id={props.id}\n        onChange={props.onChange}\n        checked={props.checked}\n        ref={innerRef}\n      />\n      <div className=\"ToolIcon__icon\">\n        {props.icon}\n        {props.keyBindingLabel && (\n          <span className=\"ToolIcon__keybinding\">{props.keyBindingLabel}</span>\n        )}\n      </div>\n    </label>\n  );\n});\n"]},"metadata":{},"sourceType":"module"}