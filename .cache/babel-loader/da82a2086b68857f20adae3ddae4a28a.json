{"ast":null,"code":"var _jsxFileName = \"/home/pro/Solutions/drawboard-light/src/components/ToolButton.tsx\";\nimport \"./ToolIcon.scss\";\nimport React from \"react\";\nvar DEFAULT_SIZE = \"m\";\nexport var ToolButton = React.forwardRef(function (props, ref) {\n  var innerRef = React.useRef(null);\n  React.useImperativeHandle(ref, function () {\n    return innerRef.current;\n  });\n  var sizeCn = \"ToolIcon_size_\".concat(props.size || DEFAULT_SIZE);\n\n  if (props.type === \"button\") {\n    return React.createElement(\"button\", {\n      className: \"ToolIcon_type_button ToolIcon \".concat(sizeCn).concat(props.selected ? \" ToolIcon--selected\" : \"\"),\n      title: props.title,\n      \"aria-label\": props[\"aria-label\"],\n      type: \"button\",\n      onClick: props.onClick,\n      ref: innerRef,\n      style: {\n        visibility: props.visible || props.visible == null ? \"visible\" : \"hidden\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"ToolIcon__icon\",\n      \"aria-hidden\": \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, props.icon || props.label), props.showAriaLabel && React.createElement(\"div\", {\n      className: \"ToolIcon__label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, props[\"aria-label\"]));\n  }\n\n  return React.createElement(\"label\", {\n    className: \"ToolIcon\",\n    title: props.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    className: \"ToolIcon_type_radio \".concat(sizeCn),\n    type: \"radio\",\n    name: props.name,\n    \"aria-label\": props[\"aria-label\"],\n    \"aria-keyshortcuts\": props[\"aria-keyshortcuts\"],\n    id: props.id,\n    onChange: props.onChange,\n    checked: props.checked,\n    ref: innerRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"ToolIcon__icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, props.icon, props.keyBindingLabel && React.createElement(\"span\", {\n    className: \"ToolIcon__keybinding\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, props.keyBindingLabel)));\n});","map":{"version":3,"sources":["/home/pro/Solutions/drawboard-light/src/components/ToolButton.tsx"],"names":["React","DEFAULT_SIZE","ToolButton","forwardRef","props","ref","innerRef","useRef","useImperativeHandle","current","sizeCn","size","type","selected","title","onClick","visibility","visible","icon","label","showAriaLabel","name","id","onChange","checked","keyBindingLabel"],"mappings":";AAAA,OAAO,iBAAP;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AA4BA,IAAMC,YAA0B,GAAG,GAAnC;AAEA,OAAO,IAAMC,UAAU,GAAGF,KAAK,CAACG,UAAN,CAAiB,UACzCC,KADyC,EAEzCC,GAFyC,EAGzC;AACA,MAAMC,QAAQ,GAAGN,KAAK,CAACO,MAAN,CAAa,IAAb,CAAjB;AACAP,EAAAA,KAAK,CAACQ,mBAAN,CAA0BH,GAA1B,EAA+B;AAAA,WAAMC,QAAQ,CAACG,OAAf;AAAA,GAA/B;AACA,MAAMC,MAAM,2BAAoBN,KAAK,CAACO,IAAN,IAAcV,YAAlC,CAAZ;;AAEA,MAAIG,KAAK,CAACQ,IAAN,KAAe,QAAnB,EAA6B;AAC3B,WACE;AACE,MAAA,SAAS,0CAAmCF,MAAnC,SACPN,KAAK,CAACS,QAAN,GAAiB,qBAAjB,GAAyC,EADlC,CADX;AAIE,MAAA,KAAK,EAAET,KAAK,CAACU,KAJf;AAKE,oBAAYV,KAAK,CAAC,YAAD,CALnB;AAME,MAAA,IAAI,EAAC,QANP;AAOE,MAAA,OAAO,EAAEA,KAAK,CAACW,OAPjB;AAQE,MAAA,GAAG,EAAET,QARP;AASE,MAAA,KAAK,EAAE;AACLU,QAAAA,UAAU,EACRZ,KAAK,CAACa,OAAN,IAAiBb,KAAK,CAACa,OAAN,IAAiB,IAAlC,GAAyC,SAAzC,GAAqD;AAFlD,OATT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAcE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAgC,qBAAY,MAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGb,KAAK,CAACc,IAAN,IAAcd,KAAK,CAACe,KADvB,CAdF,EAiBGf,KAAK,CAACgB,aAAN,IACC;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkChB,KAAK,CAAC,YAAD,CAAvC,CAlBJ,CADF;AAuBD;;AAED,SACE;AAAO,IAAA,SAAS,EAAC,UAAjB;AAA4B,IAAA,KAAK,EAAEA,KAAK,CAACU,KAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,SAAS,gCAAyBJ,MAAzB,CADX;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,IAAI,EAAEN,KAAK,CAACiB,IAHd;AAIE,kBAAYjB,KAAK,CAAC,YAAD,CAJnB;AAKE,yBAAmBA,KAAK,CAAC,mBAAD,CAL1B;AAME,IAAA,EAAE,EAAEA,KAAK,CAACkB,EANZ;AAOE,IAAA,QAAQ,EAAElB,KAAK,CAACmB,QAPlB;AAQE,IAAA,OAAO,EAAEnB,KAAK,CAACoB,OARjB;AASE,IAAA,GAAG,EAAElB,QATP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAYE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,KAAK,CAACc,IADT,EAEGd,KAAK,CAACqB,eAAN,IACC;AAAM,IAAA,SAAS,EAAC,sBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwCrB,KAAK,CAACqB,eAA9C,CAHJ,CAZF,CADF;AAqBD,CAvDyB,CAAnB","sourcesContent":["import \"./ToolIcon.scss\";\n\nimport React from \"react\";\n\ntype ToolIconSize = \"s\" | \"m\";\n\ntype ToolButtonBaseProps = {\n  icon?: React.ReactNode;\n  \"aria-label\": string;\n  \"aria-keyshortcuts\"?: string;\n  label?: string;\n  title?: string;\n  name?: string;\n  id?: string;\n  size?: ToolIconSize;\n  keyBindingLabel?: string;\n  showAriaLabel?: boolean;\n  visible?: boolean;\n  selected?: boolean;\n};\n\ntype ToolButtonProps =\n  | (ToolButtonBaseProps & { type: \"button\"; onClick?(): void })\n  | (ToolButtonBaseProps & {\n      type: \"radio\";\n\n      checked: boolean;\n      onChange?(): void;\n    });\n\nconst DEFAULT_SIZE: ToolIconSize = \"m\";\n\nexport const ToolButton = React.forwardRef(function(\n  props: ToolButtonProps,\n  ref,\n) {\n  const innerRef = React.useRef(null);\n  React.useImperativeHandle(ref, () => innerRef.current);\n  const sizeCn = `ToolIcon_size_${props.size || DEFAULT_SIZE}`;\n\n  if (props.type === \"button\") {\n    return (\n      <button\n        className={`ToolIcon_type_button ToolIcon ${sizeCn}${\n          props.selected ? \" ToolIcon--selected\" : \"\"\n        }`}\n        title={props.title}\n        aria-label={props[\"aria-label\"]}\n        type=\"button\"\n        onClick={props.onClick}\n        ref={innerRef}\n        style={{\n          visibility:\n            props.visible || props.visible == null ? \"visible\" : \"hidden\",\n        }}\n      >\n        <div className=\"ToolIcon__icon\" aria-hidden=\"true\">\n          {props.icon || props.label}\n        </div>\n        {props.showAriaLabel && (\n          <div className=\"ToolIcon__label\">{props[\"aria-label\"]}</div>\n        )}\n      </button>\n    );\n  }\n\n  return (\n    <label className=\"ToolIcon\" title={props.title}>\n      <input\n        className={`ToolIcon_type_radio ${sizeCn}`}\n        type=\"radio\"\n        name={props.name}\n        aria-label={props[\"aria-label\"]}\n        aria-keyshortcuts={props[\"aria-keyshortcuts\"]}\n        id={props.id}\n        onChange={props.onChange}\n        checked={props.checked}\n        ref={innerRef}\n      />\n      <div className=\"ToolIcon__icon\">\n        {props.icon}\n        {props.keyBindingLabel && (\n          <span className=\"ToolIcon__keybinding\">{props.keyBindingLabel}</span>\n        )}\n      </div>\n    </label>\n  );\n});\n"]},"metadata":{},"sourceType":"module"}