{"ast":null,"code":"var _jsxFileName = \"/home/pro/Solutions/drawboard-light/src/actions/actionCanvas.tsx\";\nimport React from \"react\";\nimport { ColorPicker } from \"../components/ColorPicker\";\nimport { getDefaultAppState } from \"../appState\";\nimport { trash, zoomIn, zoomOut, resetZoom } from \"../components/icons\";\nimport { ToolButton } from \"../components/ToolButton\";\nimport { t } from \"../i18n\";\nimport { getNormalizedZoom } from \"../scene\";\nimport { KEYS } from \"../keys\";\nimport { getShortcutKey } from \"../utils\";\nimport useIsMobile from \"../is-mobile\";\nimport { register } from \"./register\";\nimport { newElementWith } from \"../element/mutateElement\";\nexport const actionChangeViewBackgroundColor = register({\n  name: \"changeViewBackgroundColor\",\n  perform: (_, appState, value) => {\n    return {\n      appState: { ...appState,\n        viewBackgroundColor: value\n      },\n      commitToHistory: true\n    };\n  },\n  PanelComponent: ({\n    appState,\n    updateData\n  }) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        position: \"relative\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ColorPicker, {\n      label: t(\"labels.canvasBackground\"),\n      type: \"canvasBackground\",\n      color: appState.viewBackgroundColor,\n      onChange: color => updateData(color),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }\n    }));\n  }\n});\nexport const actionClearCanvas = register({\n  name: \"clearCanvas\",\n  perform: (elements, appState) => {\n    return {\n      elements: elements.map(element => newElementWith(element, {\n        isDeleted: true\n      })),\n      appState: { ...getDefaultAppState(),\n        username: appState.username\n      },\n      commitToHistory: true\n    };\n  },\n  PanelComponent: ({\n    updateData\n  }) => /*#__PURE__*/React.createElement(ToolButton, {\n    type: \"button\",\n    icon: trash,\n    title: t(\"buttons.clearReset\"),\n    \"aria-label\": t(\"buttons.clearReset\"),\n    showAriaLabel: useIsMobile(),\n    onClick: () => {\n      if (window.confirm(t(\"alerts.clearReset\"))) {\n        // TODO: Defined globally, since file handles aren't yet serializable.\n        // Once `FileSystemFileHandle` can be serialized, make this\n        // part of `AppState`.\n        window.handle = null;\n        updateData(null);\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  })\n});\nconst ZOOM_STEP = 0.1;\nconst KEY_CODES = {\n  MINUS: \"Minus\",\n  EQUAL: \"Equal\",\n  ZERO: \"Digit0\",\n  NUM_SUBTRACT: \"NumpadSubtract\",\n  NUM_ADD: \"NumpadAdd\",\n  NUM_ZERO: \"Numpad0\"\n};\nexport const actionZoomIn = register({\n  name: \"zoomIn\",\n  perform: (_elements, appState) => {\n    return {\n      appState: { ...appState,\n        zoom: getNormalizedZoom(appState.zoom + ZOOM_STEP)\n      },\n      commitToHistory: false\n    };\n  },\n  PanelComponent: ({\n    updateData\n  }) => /*#__PURE__*/React.createElement(ToolButton, {\n    type: \"button\",\n    icon: zoomIn,\n    title: `${t(\"buttons.zoomIn\")} — ${getShortcutKey(\"CtrlOrCmd++\")}`,\n    \"aria-label\": t(\"buttons.zoomIn\"),\n    onClick: () => {\n      updateData(null);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 5\n    }\n  }),\n  keyTest: event => (event.code === KEY_CODES.EQUAL || event.code === KEY_CODES.NUM_ADD) && (event[KEYS.CTRL_OR_CMD] || event.shiftKey)\n});\nexport const actionZoomOut = register({\n  name: \"zoomOut\",\n  perform: (_elements, appState) => {\n    return {\n      appState: { ...appState,\n        zoom: getNormalizedZoom(appState.zoom - ZOOM_STEP)\n      },\n      commitToHistory: false\n    };\n  },\n  PanelComponent: ({\n    updateData\n  }) => /*#__PURE__*/React.createElement(ToolButton, {\n    type: \"button\",\n    icon: zoomOut,\n    title: `${t(\"buttons.zoomOut\")} — ${getShortcutKey(\"CtrlOrCmd+-\")}`,\n    \"aria-label\": t(\"buttons.zoomOut\"),\n    onClick: () => {\n      updateData(null);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 5\n    }\n  }),\n  keyTest: event => (event.code === KEY_CODES.MINUS || event.code === KEY_CODES.NUM_SUBTRACT) && (event[KEYS.CTRL_OR_CMD] || event.shiftKey)\n});\nexport const actionResetZoom = register({\n  name: \"resetZoom\",\n  perform: (_elements, appState) => {\n    return {\n      appState: { ...appState,\n        zoom: 1\n      },\n      commitToHistory: false\n    };\n  },\n  PanelComponent: ({\n    updateData\n  }) => /*#__PURE__*/React.createElement(ToolButton, {\n    type: \"button\",\n    icon: resetZoom,\n    title: t(\"buttons.resetZoom\"),\n    \"aria-label\": t(\"buttons.resetZoom\"),\n    onClick: () => {\n      updateData(null);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 5\n    }\n  }),\n  keyTest: event => (event.code === KEY_CODES.ZERO || event.code === KEY_CODES.NUM_ZERO) && (event[KEYS.CTRL_OR_CMD] || event.shiftKey)\n});","map":{"version":3,"sources":["/home/pro/Solutions/drawboard-light/src/actions/actionCanvas.tsx"],"names":["React","ColorPicker","getDefaultAppState","trash","zoomIn","zoomOut","resetZoom","ToolButton","t","getNormalizedZoom","KEYS","getShortcutKey","useIsMobile","register","newElementWith","actionChangeViewBackgroundColor","name","perform","_","appState","value","viewBackgroundColor","commitToHistory","PanelComponent","updateData","position","color","actionClearCanvas","elements","map","element","isDeleted","username","window","confirm","handle","ZOOM_STEP","KEY_CODES","MINUS","EQUAL","ZERO","NUM_SUBTRACT","NUM_ADD","NUM_ZERO","actionZoomIn","_elements","zoom","keyTest","event","code","CTRL_OR_CMD","shiftKey","actionZoomOut","actionResetZoom"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { ColorPicker } from \"../components/ColorPicker\";\nimport { getDefaultAppState } from \"../appState\";\nimport { trash, zoomIn, zoomOut, resetZoom } from \"../components/icons\";\nimport { ToolButton } from \"../components/ToolButton\";\nimport { t } from \"../i18n\";\nimport { getNormalizedZoom } from \"../scene\";\nimport { KEYS } from \"../keys\";\nimport { getShortcutKey } from \"../utils\";\nimport useIsMobile from \"../is-mobile\";\nimport { register } from \"./register\";\nimport { newElementWith } from \"../element/mutateElement\";\nimport { AppState } from \"../types\";\n\nexport const actionChangeViewBackgroundColor = register({\n  name: \"changeViewBackgroundColor\",\n  perform: (_, appState, value) => {\n    return {\n      appState: { ...appState, viewBackgroundColor: value },\n      commitToHistory: true,\n    };\n  },\n  PanelComponent: ({ appState, updateData }) => {\n    return (\n      <div style={{ position: \"relative\" }}>\n        <ColorPicker\n          label={t(\"labels.canvasBackground\")}\n          type=\"canvasBackground\"\n          color={appState.viewBackgroundColor}\n          onChange={(color) => updateData(color)}\n        />\n      </div>\n    );\n  },\n});\n\nexport const actionClearCanvas = register({\n  name: \"clearCanvas\",\n  perform: (elements, appState: AppState) => {\n    return {\n      elements: elements.map((element) =>\n        newElementWith(element, { isDeleted: true }),\n      ),\n      appState: {\n        ...getDefaultAppState(),\n        username: appState.username,\n      },\n      commitToHistory: true,\n    };\n  },\n  PanelComponent: ({ updateData }) => (\n    <ToolButton\n      type=\"button\"\n      icon={trash}\n      title={t(\"buttons.clearReset\")}\n      aria-label={t(\"buttons.clearReset\")}\n      showAriaLabel={useIsMobile()}\n      onClick={() => {\n        if (window.confirm(t(\"alerts.clearReset\"))) {\n          // TODO: Defined globally, since file handles aren't yet serializable.\n          // Once `FileSystemFileHandle` can be serialized, make this\n          // part of `AppState`.\n          (window as any).handle = null;\n          updateData(null);\n        }\n      }}\n    />\n  ),\n});\n\nconst ZOOM_STEP = 0.1;\n\nconst KEY_CODES = {\n  MINUS: \"Minus\",\n  EQUAL: \"Equal\",\n  ZERO: \"Digit0\",\n  NUM_SUBTRACT: \"NumpadSubtract\",\n  NUM_ADD: \"NumpadAdd\",\n  NUM_ZERO: \"Numpad0\",\n};\n\nexport const actionZoomIn = register({\n  name: \"zoomIn\",\n  perform: (_elements, appState) => {\n    return {\n      appState: {\n        ...appState,\n        zoom: getNormalizedZoom(appState.zoom + ZOOM_STEP),\n      },\n      commitToHistory: false,\n    };\n  },\n  PanelComponent: ({ updateData }) => (\n    <ToolButton\n      type=\"button\"\n      icon={zoomIn}\n      title={`${t(\"buttons.zoomIn\")} — ${getShortcutKey(\"CtrlOrCmd++\")}`}\n      aria-label={t(\"buttons.zoomIn\")}\n      onClick={() => {\n        updateData(null);\n      }}\n    />\n  ),\n  keyTest: (event) =>\n    (event.code === KEY_CODES.EQUAL || event.code === KEY_CODES.NUM_ADD) &&\n    (event[KEYS.CTRL_OR_CMD] || event.shiftKey),\n});\n\nexport const actionZoomOut = register({\n  name: \"zoomOut\",\n  perform: (_elements, appState) => {\n    return {\n      appState: {\n        ...appState,\n        zoom: getNormalizedZoom(appState.zoom - ZOOM_STEP),\n      },\n      commitToHistory: false,\n    };\n  },\n  PanelComponent: ({ updateData }) => (\n    <ToolButton\n      type=\"button\"\n      icon={zoomOut}\n      title={`${t(\"buttons.zoomOut\")} — ${getShortcutKey(\"CtrlOrCmd+-\")}`}\n      aria-label={t(\"buttons.zoomOut\")}\n      onClick={() => {\n        updateData(null);\n      }}\n    />\n  ),\n  keyTest: (event) =>\n    (event.code === KEY_CODES.MINUS || event.code === KEY_CODES.NUM_SUBTRACT) &&\n    (event[KEYS.CTRL_OR_CMD] || event.shiftKey),\n});\n\nexport const actionResetZoom = register({\n  name: \"resetZoom\",\n  perform: (_elements, appState) => {\n    return {\n      appState: {\n        ...appState,\n        zoom: 1,\n      },\n      commitToHistory: false,\n    };\n  },\n  PanelComponent: ({ updateData }) => (\n    <ToolButton\n      type=\"button\"\n      icon={resetZoom}\n      title={t(\"buttons.resetZoom\")}\n      aria-label={t(\"buttons.resetZoom\")}\n      onClick={() => {\n        updateData(null);\n      }}\n    />\n  ),\n  keyTest: (event) =>\n    (event.code === KEY_CODES.ZERO || event.code === KEY_CODES.NUM_ZERO) &&\n    (event[KEYS.CTRL_OR_CMD] || event.shiftKey),\n});\n"]},"metadata":{},"sourceType":"module"}