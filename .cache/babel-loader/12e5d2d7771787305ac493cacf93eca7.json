{"ast":null,"code":"import _objectSpread from \"/home/pro/Solutions/drawboard-light/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { KEYS } from \"../keys\";\nimport { register } from \"./register\";\nexport var actionSelectAll = register({\n  name: \"selectAll\",\n  perform: function perform(elements, appState) {\n    return {\n      appState: _objectSpread({}, appState, {\n        selectedElementIds: Object.fromEntries(elements.map(function (element) {\n          return [element.id, true];\n        }))\n      })\n    };\n  },\n  contextItemLabel: \"labels.selectAll\",\n  keyTest: function keyTest(event) {\n    return event[KEYS.CTRL_OR_CMD] && event.key === \"a\";\n  }\n});","map":{"version":3,"sources":["/home/pro/Solutions/drawboard-light/src/actions/actionSelectAll.ts"],"names":["KEYS","register","actionSelectAll","name","perform","elements","appState","selectedElementIds","Object","fromEntries","map","element","id","contextItemLabel","keyTest","event","CTRL_OR_CMD","key"],"mappings":";AAAA,SAASA,IAAT,QAAqB,SAArB;AACA,SAASC,QAAT,QAAyB,YAAzB;AAEA,OAAO,IAAMC,eAAe,GAAGD,QAAQ,CAAC;AACtCE,EAAAA,IAAI,EAAE,WADgC;AAEtCC,EAAAA,OAAO,EAAE,iBAACC,QAAD,EAAWC,QAAX,EAAwB;AAC/B,WAAO;AACLA,MAAAA,QAAQ,oBACHA,QADG;AAENC,QAAAA,kBAAkB,EAAEC,MAAM,CAACC,WAAP,CAClBJ,QAAQ,CAACK,GAAT,CAAa,UAAAC,OAAO;AAAA,iBAAI,CAACA,OAAO,CAACC,EAAT,EAAa,IAAb,CAAJ;AAAA,SAApB,CADkB;AAFd;AADH,KAAP;AAQD,GAXqC;AAYtCC,EAAAA,gBAAgB,EAAE,kBAZoB;AAatCC,EAAAA,OAAO,EAAE,iBAAAC,KAAK;AAAA,WAAIA,KAAK,CAACf,IAAI,CAACgB,WAAN,CAAL,IAA2BD,KAAK,CAACE,GAAN,KAAc,GAA7C;AAAA;AAbwB,CAAD,CAAhC","sourcesContent":["import { KEYS } from \"../keys\";\nimport { register } from \"./register\";\n\nexport const actionSelectAll = register({\n  name: \"selectAll\",\n  perform: (elements, appState) => {\n    return {\n      appState: {\n        ...appState,\n        selectedElementIds: Object.fromEntries(\n          elements.map(element => [element.id, true]),\n        ),\n      },\n    };\n  },\n  contextItemLabel: \"labels.selectAll\",\n  keyTest: event => event[KEYS.CTRL_OR_CMD] && event.key === \"a\",\n});\n"]},"metadata":{},"sourceType":"module"}