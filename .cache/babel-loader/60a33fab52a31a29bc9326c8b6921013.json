{"ast":null,"code":"export const isDarwin = /Mac|iPod|iPhone|iPad/.test(window.navigator.platform);\nexport const KEYS = {\n  ARROW_LEFT: \"ArrowLeft\",\n  ARROW_RIGHT: \"ArrowRight\",\n  ARROW_DOWN: \"ArrowDown\",\n  ARROW_UP: \"ArrowUp\",\n  ENTER: \"Enter\",\n  ESCAPE: \"Escape\",\n  DELETE: \"Delete\",\n  BACKSPACE: \"Backspace\",\n  CTRL_OR_CMD: isDarwin ? \"metaKey\" : \"ctrlKey\",\n  TAB: \"Tab\",\n  SPACE: \" \",\n  QUESTION_MARK: \"?\",\n  F_KEY_CODE: 70\n};\nexport function isArrowKey(keyCode) {\n  return keyCode === KEYS.ARROW_LEFT || keyCode === KEYS.ARROW_RIGHT || keyCode === KEYS.ARROW_DOWN || keyCode === KEYS.ARROW_UP;\n}","map":{"version":3,"sources":["/home/pro/Solutions/drawboard-light/src/keys.ts"],"names":["isDarwin","test","window","navigator","platform","KEYS","ARROW_LEFT","ARROW_RIGHT","ARROW_DOWN","ARROW_UP","ENTER","ESCAPE","DELETE","BACKSPACE","CTRL_OR_CMD","TAB","SPACE","QUESTION_MARK","F_KEY_CODE","isArrowKey","keyCode"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,uBAAuBC,IAAvB,CAA4BC,MAAM,CAACC,SAAP,CAAiBC,QAA7C,CAAjB;AAEP,OAAO,MAAMC,IAAI,GACf;AACEC,EAAAA,UAAU,EAAE,WADd;AAEEC,EAAAA,WAAW,EAAE,YAFf;AAGEC,EAAAA,UAAU,EAAE,WAHd;AAIEC,EAAAA,QAAQ,EAAE,SAJZ;AAKEC,EAAAA,KAAK,EAAE,OALT;AAMEC,EAAAA,MAAM,EAAE,QANV;AAOEC,EAAAA,MAAM,EAAE,QAPV;AAQEC,EAAAA,SAAS,EAAE,WARb;AASEC,EAAAA,WAAW,EAAEd,QAAQ,GAAG,SAAH,GAAe,SATtC;AAUEe,EAAAA,GAAG,EAAE,KAVP;AAWEC,EAAAA,KAAK,EAAE,GAXT;AAYEC,EAAAA,aAAa,EAAE,GAZjB;AAaEC,EAAAA,UAAU,EAAE;AAbd,CADK;AAmBP,OAAO,SAASC,UAAT,CAAoBC,OAApB,EAAqC;AAC1C,SACEA,OAAO,KAAKf,IAAI,CAACC,UAAjB,IACAc,OAAO,KAAKf,IAAI,CAACE,WADjB,IAEAa,OAAO,KAAKf,IAAI,CAACG,UAFjB,IAGAY,OAAO,KAAKf,IAAI,CAACI,QAJnB;AAMD","sourcesContent":["export const isDarwin = /Mac|iPod|iPhone|iPad/.test(window.navigator.platform);\n\nexport const KEYS =\n  {\n    ARROW_LEFT: \"ArrowLeft\",\n    ARROW_RIGHT: \"ArrowRight\",\n    ARROW_DOWN: \"ArrowDown\",\n    ARROW_UP: \"ArrowUp\",\n    ENTER: \"Enter\",\n    ESCAPE: \"Escape\",\n    DELETE: \"Delete\",\n    BACKSPACE: \"Backspace\",\n    CTRL_OR_CMD: isDarwin ? \"metaKey\" : \"ctrlKey\",\n    TAB: \"Tab\",\n    SPACE: \" \",\n    QUESTION_MARK: \"?\",\n    F_KEY_CODE: 70,\n  } as const;\n\nexport type Key = keyof typeof KEYS;\n\nexport function isArrowKey(keyCode: string) {\n  return (\n    keyCode === KEYS.ARROW_LEFT ||\n    keyCode === KEYS.ARROW_RIGHT ||\n    keyCode === KEYS.ARROW_DOWN ||\n    keyCode === KEYS.ARROW_UP\n  );\n}\n"]},"metadata":{},"sourceType":"module"}