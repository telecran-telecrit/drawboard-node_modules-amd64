{"ast":null,"code":"var _jsxFileName = \"/home/pro/Solutions/drawboard-light/src/components/LanguageList.tsx\";\nimport React from \"react\";\nimport * as i18n from \"../i18n\";\nexport function LanguageList(_ref) {\n  var _onChange = _ref.onChange,\n      _ref$languages = _ref.languages,\n      languages = _ref$languages === void 0 ? i18n.languages : _ref$languages,\n      _ref$currentLanguage = _ref.currentLanguage,\n      currentLanguage = _ref$currentLanguage === void 0 ? i18n.getLanguage() : _ref$currentLanguage,\n      floating = _ref.floating;\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"select\", {\n    className: \"dropdown-select dropdown-select__language\".concat(floating ? \" dropdown-select--floating\" : \"\"),\n    onChange: function onChange(_ref2) {\n      var target = _ref2.target;\n      return _onChange(target.value);\n    },\n    value: currentLanguage,\n    \"aria-label\": i18n.t(\"buttons.selectLanguage\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, languages.map(function (language) {\n    return React.createElement(\"option\", {\n      key: language.lng,\n      value: language.lng,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, language.label);\n  })));\n}","map":{"version":3,"sources":["/home/pro/Solutions/drawboard-light/src/components/LanguageList.tsx"],"names":["React","i18n","LanguageList","onChange","languages","currentLanguage","getLanguage","floating","target","value","t","map","language","lng","label"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,IAAZ,MAAsB,SAAtB;AAEA,OAAO,SAASC,YAAT,OAUJ;AAAA,MATDC,SASC,QATDA,QASC;AAAA,4BARDC,SAQC;AAAA,MARDA,SAQC,+BARWH,IAAI,CAACG,SAQhB;AAAA,kCAPDC,eAOC;AAAA,MAPDA,eAOC,qCAPiBJ,IAAI,CAACK,WAAL,EAOjB;AAAA,MANDC,QAMC,QANDA,QAMC;AACD,SACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,SAAS,qDACPA,QAAQ,GAAG,4BAAH,GAAkC,EADnC,CADX;AAIE,IAAA,QAAQ,EAAE;AAAA,UAAGC,MAAH,SAAGA,MAAH;AAAA,aAAgBL,SAAQ,CAACK,MAAM,CAACC,KAAR,CAAxB;AAAA,KAJZ;AAKE,IAAA,KAAK,EAAEJ,eALT;AAME,kBAAYJ,IAAI,CAACS,CAAL,CAAO,wBAAP,CANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQGN,SAAS,CAACO,GAAV,CAAc,UAAAC,QAAQ;AAAA,WACrB;AAAQ,MAAA,GAAG,EAAEA,QAAQ,CAACC,GAAtB;AAA2B,MAAA,KAAK,EAAED,QAAQ,CAACC,GAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,QAAQ,CAACE,KADZ,CADqB;AAAA,GAAtB,CARH,CADF,CADF;AAkBD","sourcesContent":["import React from \"react\";\nimport * as i18n from \"../i18n\";\n\nexport function LanguageList({\n  onChange,\n  languages = i18n.languages,\n  currentLanguage = i18n.getLanguage(),\n  floating,\n}: {\n  languages?: { lng: string; label: string }[];\n  onChange: (value: string) => void;\n  currentLanguage?: string;\n  floating?: boolean;\n}) {\n  return (\n    <React.Fragment>\n      <select\n        className={`dropdown-select dropdown-select__language${\n          floating ? \" dropdown-select--floating\" : \"\"\n        }`}\n        onChange={({ target }) => onChange(target.value)}\n        value={currentLanguage}\n        aria-label={i18n.t(\"buttons.selectLanguage\")}\n      >\n        {languages.map(language => (\n          <option key={language.lng} value={language.lng}>\n            {language.label}\n          </option>\n        ))}\n      </select>\n    </React.Fragment>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}