{"ast":null,"code":"import _objectSpread from \"/home/pro/Solutions/drawboard-light/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/home/pro/Solutions/drawboard-light/src/actions/actionMenu.tsx\";\nimport React from \"react\";\nimport { menu, palette } from \"../components/icons\";\nimport { ToolButton } from \"../components/ToolButton\";\nimport { t } from \"../i18n\";\nimport { showSelectedShapeActions } from \"../element\";\nimport { register } from \"./register\";\nexport var actionToggleCanvasMenu = register({\n  name: \"toggleCanvasMenu\",\n  perform: function perform(_, appState) {\n    return {\n      appState: _objectSpread({}, appState, {\n        openMenu: appState.openMenu === \"canvas\" ? null : \"canvas\"\n      })\n    };\n  },\n  PanelComponent: function PanelComponent(_ref) {\n    var appState = _ref.appState,\n        updateData = _ref.updateData;\n    return React.createElement(ToolButton, {\n      type: \"button\",\n      icon: menu,\n      \"aria-label\": t(\"buttons.menu\"),\n      onClick: updateData,\n      selected: appState.openMenu === \"canvas\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    });\n  }\n});\nexport var actionToggleEditMenu = register({\n  name: \"toggleEditMenu\",\n  perform: function perform(_elements, appState) {\n    return {\n      appState: _objectSpread({}, appState, {\n        openMenu: appState.openMenu === \"shape\" ? null : \"shape\"\n      })\n    };\n  },\n  PanelComponent: function PanelComponent(_ref2) {\n    var elements = _ref2.elements,\n        appState = _ref2.appState,\n        updateData = _ref2.updateData;\n    return React.createElement(ToolButton, {\n      visible: showSelectedShapeActions(appState, elements),\n      type: \"button\",\n      icon: palette,\n      \"aria-label\": t(\"buttons.edit\"),\n      onClick: updateData,\n      selected: appState.openMenu === \"shape\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    });\n  }\n});","map":{"version":3,"sources":["/home/pro/Solutions/drawboard-light/src/actions/actionMenu.tsx"],"names":["React","menu","palette","ToolButton","t","showSelectedShapeActions","register","actionToggleCanvasMenu","name","perform","_","appState","openMenu","PanelComponent","updateData","actionToggleEditMenu","_elements","elements"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,OAAf,QAA8B,qBAA9B;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,CAAT,QAAkB,SAAlB;AACA,SAASC,wBAAT,QAAyC,YAAzC;AACA,SAASC,QAAT,QAAyB,YAAzB;AAEA,OAAO,IAAMC,sBAAsB,GAAGD,QAAQ,CAAC;AAC7CE,EAAAA,IAAI,EAAE,kBADuC;AAE7CC,EAAAA,OAAO,EAAE,iBAACC,CAAD,EAAIC,QAAJ;AAAA,WAAkB;AACzBA,MAAAA,QAAQ,oBACHA,QADG;AAENC,QAAAA,QAAQ,EAAED,QAAQ,CAACC,QAAT,KAAsB,QAAtB,GAAiC,IAAjC,GAAwC;AAF5C;AADiB,KAAlB;AAAA,GAFoC;AAQ7CC,EAAAA,cAAc,EAAE;AAAA,QAAGF,QAAH,QAAGA,QAAH;AAAA,QAAaG,UAAb,QAAaA,UAAb;AAAA,WACd,oBAAC,UAAD;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,IAAI,EAAEb,IAFR;AAGE,oBAAYG,CAAC,CAAC,cAAD,CAHf;AAIE,MAAA,OAAO,EAAEU,UAJX;AAKE,MAAA,QAAQ,EAAEH,QAAQ,CAACC,QAAT,KAAsB,QALlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADc;AAAA;AAR6B,CAAD,CAAvC;AAmBP,OAAO,IAAMG,oBAAoB,GAAGT,QAAQ,CAAC;AAC3CE,EAAAA,IAAI,EAAE,gBADqC;AAE3CC,EAAAA,OAAO,EAAE,iBAACO,SAAD,EAAYL,QAAZ;AAAA,WAA0B;AACjCA,MAAAA,QAAQ,oBACHA,QADG;AAENC,QAAAA,QAAQ,EAAED,QAAQ,CAACC,QAAT,KAAsB,OAAtB,GAAgC,IAAhC,GAAuC;AAF3C;AADyB,KAA1B;AAAA,GAFkC;AAQ3CC,EAAAA,cAAc,EAAE;AAAA,QAAGI,QAAH,SAAGA,QAAH;AAAA,QAAaN,QAAb,SAAaA,QAAb;AAAA,QAAuBG,UAAvB,SAAuBA,UAAvB;AAAA,WACd,oBAAC,UAAD;AACE,MAAA,OAAO,EAAET,wBAAwB,CAACM,QAAD,EAAWM,QAAX,CADnC;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,MAAA,IAAI,EAAEf,OAHR;AAIE,oBAAYE,CAAC,CAAC,cAAD,CAJf;AAKE,MAAA,OAAO,EAAEU,UALX;AAME,MAAA,QAAQ,EAAEH,QAAQ,CAACC,QAAT,KAAsB,OANlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADc;AAAA;AAR2B,CAAD,CAArC","sourcesContent":["import React from \"react\";\nimport { menu, palette } from \"../components/icons\";\nimport { ToolButton } from \"../components/ToolButton\";\nimport { t } from \"../i18n\";\nimport { showSelectedShapeActions } from \"../element\";\nimport { register } from \"./register\";\n\nexport const actionToggleCanvasMenu = register({\n  name: \"toggleCanvasMenu\",\n  perform: (_, appState) => ({\n    appState: {\n      ...appState,\n      openMenu: appState.openMenu === \"canvas\" ? null : \"canvas\",\n    },\n  }),\n  PanelComponent: ({ appState, updateData }) => (\n    <ToolButton\n      type=\"button\"\n      icon={menu}\n      aria-label={t(\"buttons.menu\")}\n      onClick={updateData}\n      selected={appState.openMenu === \"canvas\"}\n    />\n  ),\n});\n\nexport const actionToggleEditMenu = register({\n  name: \"toggleEditMenu\",\n  perform: (_elements, appState) => ({\n    appState: {\n      ...appState,\n      openMenu: appState.openMenu === \"shape\" ? null : \"shape\",\n    },\n  }),\n  PanelComponent: ({ elements, appState, updateData }) => (\n    <ToolButton\n      visible={showSelectedShapeActions(appState, elements)}\n      type=\"button\"\n      icon={palette}\n      aria-label={t(\"buttons.edit\")}\n      onClick={updateData}\n      selected={appState.openMenu === \"shape\"}\n    />\n  ),\n});\n"]},"metadata":{},"sourceType":"module"}