{"version":3,"file":"debug.js","sourceRoot":"","sources":["../src/debug.ts"],"names":[],"mappings":";AACA,OAAO,EAAE,cAAc,EAAE,MAAM,eAAe,CAAC;AAQ/C,YAAY;AACZ;IAcE;;OAEG;IACH,eAAmB,OAAsB;QAhBzC;;WAEG;QACI,SAAI,GAAW,KAAK,CAAC,EAAE,CAAC;QAc7B,IAAI,CAAC,QAAQ,sBACX,QAAQ,EAAE,KAAK,EACf,SAAS,EAAE,KAAK,IACb,OAAO,CACX,CAAC;IACJ,CAAC;IAED;;OAEG;IACI,yBAAS,GAAhB,UAAiB,uBAA2D,EAAE,aAAwB;QACpG,uBAAuB,CAAC,UAAC,KAAY,EAAE,IAAgB;YACrD,IAAM,IAAI,GAAG,aAAa,EAAE,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;YACnD,IAAI,IAAI,EAAE;gBACR,4BAA4B;gBAC5B,6BAA6B;gBAC7B,IAAI,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE;oBAC1B,QAAQ,CAAC;iBACV;gBAED,cAAc,CAAC;oBACb,IAAI,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE;wBAC3B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;wBAC5C,IAAI,IAAI,EAAE;4BACR,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;yBAC5C;qBACF;yBAAM;wBACL,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;wBACnB,IAAI,IAAI,EAAE;4BACR,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;yBACnB;qBACF;gBACH,CAAC,CAAC,CAAC;aACJ;YACD,OAAO,KAAK,CAAC;QACf,CAAC,CAAC,CAAC;IACL,CAAC;IAhDD;;OAEG;IACW,QAAE,GAAW,OAAO,CAAC;IA8CrC,YAAC;CAAA,AAvDD,IAuDC;SAvDY,KAAK","sourcesContent":["import { Event, EventHint, EventProcessor, Hub, Integration } from '@sentry/types';\nimport { consoleSandbox } from '@sentry/utils';\n\n/** JSDoc */\ninterface DebugOptions {\n  stringify?: boolean;\n  debugger?: boolean;\n}\n\n/** JSDoc */\nexport class Debug implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public name: string = Debug.id;\n\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'Debug';\n\n  /** JSDoc */\n  private readonly _options: DebugOptions;\n\n  /**\n   * @inheritDoc\n   */\n  public constructor(options?: DebugOptions) {\n    this._options = {\n      debugger: false,\n      stringify: false,\n      ...options,\n    };\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(addGlobalEventProcessor: (callback: EventProcessor) => void, getCurrentHub: () => Hub): void {\n    addGlobalEventProcessor((event: Event, hint?: EventHint) => {\n      const self = getCurrentHub().getIntegration(Debug);\n      if (self) {\n        // tslint:disable:no-console\n        // tslint:disable:no-debugger\n        if (self._options.debugger) {\n          debugger;\n        }\n\n        consoleSandbox(() => {\n          if (self._options.stringify) {\n            console.log(JSON.stringify(event, null, 2));\n            if (hint) {\n              console.log(JSON.stringify(hint, null, 2));\n            }\n          } else {\n            console.log(event);\n            if (hint) {\n              console.log(hint);\n            }\n          }\n        });\n      }\n      return event;\n    });\n  }\n}\n"]}