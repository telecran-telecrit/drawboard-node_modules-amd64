{"version":3,"file":"angular.js","sourceRoot":"","sources":["../src/angular.ts"],"names":[],"mappings":"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","sourcesContent":["import { Event, EventProcessor, Hub, Integration } from '@sentry/types';\nimport { getGlobalObject, logger } from '@sentry/utils';\n\n// See https://github.com/angular/angular.js/blob/v1.4.7/src/minErr.js\nconst angularPattern = /^\\[((?:[$a-zA-Z0-9]+:)?(?:[$a-zA-Z0-9]+))\\] (.*?)\\n?(\\S+)$/;\n\n/**\n * AngularJS integration\n *\n * Provides an $exceptionHandler for AngularJS\n */\nexport class Angular implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public name: string = Angular.id;\n\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'AngularJS';\n\n  /**\n   * moduleName used in Angular's DI resolution algorithm\n   */\n  public static moduleName: string = 'ngSentry';\n\n  /**\n   * Angular's instance\n   */\n  private readonly _angular: any;\n\n  /**\n   * Returns current hub.\n   */\n  private _getCurrentHub?: () => Hub;\n\n  /**\n   * @inheritDoc\n   */\n  public constructor(options: { angular?: any } = {}) {\n    // tslint:disable-next-line: no-unsafe-any\n    this._angular = options.angular || getGlobalObject<any>().angular;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(_: (callback: EventProcessor) => void, getCurrentHub: () => Hub): void {\n    if (!this._angular) {\n      logger.error('AngularIntegration is missing an Angular instance');\n      return;\n    }\n\n    this._getCurrentHub = getCurrentHub;\n\n    // tslint:disable: no-unsafe-any\n    this._angular.module(Angular.moduleName, []).config([\n      '$provide',\n      ($provide: any) => {\n        $provide.decorator('$exceptionHandler', ['$delegate', this._$exceptionHandlerDecorator.bind(this)]);\n      },\n    ]);\n    // tslint:enable: no-unsafe-any\n  }\n\n  /**\n   * Angular's exceptionHandler for Sentry integration\n   */\n  // tslint:disable-next-line: no-unsafe-any\n  private _$exceptionHandlerDecorator($delegate: any): any {\n    return (exception: Error, cause?: string) => {\n      const hub = this._getCurrentHub && this._getCurrentHub();\n\n      if (hub && hub.getIntegration(Angular)) {\n        hub.withScope(scope => {\n          if (cause) {\n            scope.setExtra('cause', cause);\n          }\n\n          scope.addEventProcessor((event: Event) => {\n            const ex = event.exception && event.exception.values && event.exception.values[0];\n\n            if (ex) {\n              const matches = angularPattern.exec(ex.value || '');\n\n              if (matches) {\n                // This type now becomes something like: $rootScope:inprog\n                ex.type = matches[1];\n                ex.value = matches[2];\n                event.message = `${ex.type}: ${ex.value}`;\n                // auto set a new tag specifically for the angular error url\n                event.extra = {\n                  ...event.extra,\n                  angularDocs: matches[3].substr(0, 250),\n                };\n              }\n            }\n\n            return event;\n          });\n\n          hub.captureException(exception);\n        });\n      }\n      // tslint:disable-next-line: no-unsafe-any\n      $delegate(exception, cause);\n    };\n  }\n}\n"]}